"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[8880],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),d=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},s=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=d(a),m=n,f=u["".concat(l,".").concat(m)]||u[m]||c[m]||o;return a?r.createElement(f,p(p({ref:t},s),{},{components:a})):r.createElement(f,p({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,p=new Array(o);p[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,p[1]=i;for(var d=2;d<o;d++)p[d]=a[d];return r.createElement.apply(null,p)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},13527:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=a(83117),n=(a(67294),a(3905));const o={title:"How to populate creator fields",description:"Learn how to populate creator fields such as createdBy and updatedBy by creating a custom controller that leverages the populate parameter."},p="\ud83d\udee0\ufe0f How to populate creator fields such as createdBy and updatedBy",i={unversionedId:"dev-docs/api/rest/guides/populate-creator-fields",id:"dev-docs/api/rest/guides/populate-creator-fields",title:"How to populate creator fields",description:"Learn how to populate creator fields such as createdBy and updatedBy by creating a custom controller that leverages the populate parameter.",source:"@site/docs/dev-docs/api/rest/guides/populate-creator-fields.md",sourceDirName:"dev-docs/api/rest/guides",slug:"/dev-docs/api/rest/guides/populate-creator-fields",permalink:"/aberabook/dev-docs/api/rest/guides/populate-creator-fields",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/api/rest/guides/populate-creator-fields.md",tags:[],version:"current",frontMatter:{title:"How to populate creator fields",description:"Learn how to populate creator fields such as createdBy and updatedBy by creating a custom controller that leverages the populate parameter."}},l={},d=[],s={toc:d};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"\ufe0f-how-to-populate-creator-fields-such-as-createdby-and-updatedby"},"\ud83d\udee0\ufe0f How to populate creator fields such as ",(0,n.kt)("inlineCode",{parentName:"h1"},"createdBy")," and ",(0,n.kt)("inlineCode",{parentName:"h1"},"updatedBy")),(0,n.kt)("p",null,"The creator fields ",(0,n.kt)("inlineCode",{parentName:"p"},"createdBy")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"updatedBy")," are removed from the ",(0,n.kt)("a",{parentName:"p",href:"/dev-docs/api/rest"},"REST API")," response by default. These 2 fields can be returned in the REST API by activating the ",(0,n.kt)("inlineCode",{parentName:"p"},"populateCreatorFields")," parameter at the content-type level."),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The ",(0,n.kt)("inlineCode",{parentName:"p"},"populateCreatorFields")," property is not available to the GraphQL API."),(0,n.kt)("p",{parentName:"admonition"},"Only the following fields will be populated: ",(0,n.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"firstname"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"lastname"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"username"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"preferedLanguage"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"createdAt"),", and ",(0,n.kt)("inlineCode",{parentName:"p"},"updatedAt"),".")),(0,n.kt)("p",null,"To add ",(0,n.kt)("inlineCode",{parentName:"p"},"createdBy")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"updatedBy")," to the API response:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Open the content-type ",(0,n.kt)("inlineCode",{parentName:"p"},"schema.json")," file.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Add ",(0,n.kt)("inlineCode",{parentName:"p"},'"populateCreatorFields": true')," to the ",(0,n.kt)("inlineCode",{parentName:"p"},"options")," object:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-json"},'"options": {\n    "draftAndPublish": true,\n    "populateCreatorFields": true\n  },\n'))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Save the ",(0,n.kt)("inlineCode",{parentName:"p"},"schema.json"),".")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Create a new route middleware either using the ",(0,n.kt)("a",{parentName:"p",href:"/dev-docs/cli.md"},"generate CLI")," or by manually creating a new file in ",(0,n.kt)("inlineCode",{parentName:"p"},"./src/api/[content-type-name]/middlewares/[your-middleware-name].js"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Add the following piece of code, you can modify this example to suit your needs:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/api/test/middlewares/defaultTestPopulate.js"',title:'"./src/api/test/middlewares/defaultTestPopulate.js"'},'"use strict";\n\nmodule.exports = (config, { strapi }) => {\n  return async (ctx, next) => {\n    if (!ctx.query.populate) {\n      ctx.query.populate = ["createdBy", "updatedBy"];\n    }\n\n    await next();\n  };\n};\n'))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Modify your default route factory to enable this middleware on the specific routes you want this population to apply to and replacing the content-type/middleware name with yours:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./src/api/test/routes/test.js"',title:'"./src/api/test/routes/test.js"'},'"use strict";\n\nconst { createCoreRouter } = require("@strapi/strapi").factories;\n\nmodule.exports = createCoreRouter("api::test.test", {\n  config: {\n    find: {\n      middlewares: ["api::test.default-test-populate"],\n    },\n    findOne: {\n      middlewares: ["api::test.default-test-populate"],\n    },\n  },\n});\n')))),(0,n.kt)("p",null,"REST API requests with no ",(0,n.kt)("inlineCode",{parentName:"p"},"populate")," parameter will include the ",(0,n.kt)("inlineCode",{parentName:"p"},"createdBy")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"updatedBy")," fields by default."))}c.isMDXComponent=!0}}]);