"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[566,5398,5446,9325],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,k=m["".concat(s,".").concat(c)]||m[c]||u[c]||i;return n?a.createElement(k,l(l({ref:t},d),{},{components:n})):a.createElement(k,l({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},65406:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>m});var a=n(83117),r=(n(67294),n(3905)),i=n(20823),l=n(19986),o=n(87514);const s={title:"Filters, Locale, and Publication State",description:"Use Strapi's REST API to filter the results of your requests.",sidebarDepth:3,displayed_sidebar:"restApiSidebar"},p="REST API: Filtering, Locale, and Publication State",d={unversionedId:"dev-docs/api/rest/filters-locale-publication",id:"dev-docs/api/rest/filters-locale-publication",title:"Filters, Locale, and Publication State",description:"Use Strapi's REST API to filter the results of your requests.",source:"@site/docs/dev-docs/api/rest/filters-locale-publication.md",sourceDirName:"dev-docs/api/rest",slug:"/dev-docs/api/rest/filters-locale-publication",permalink:"/aberabook/dev-docs/api/rest/filters-locale-publication",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/api/rest/filters-locale-publication.md",tags:[],version:"current",frontMatter:{title:"Filters, Locale, and Publication State",description:"Use Strapi's REST API to filter the results of your requests.",sidebarDepth:3,displayed_sidebar:"restApiSidebar"},sidebar:"restApiSidebar",previous:{title:"Populate and Select",permalink:"/aberabook/dev-docs/api/rest/populate-select"},next:{title:"Sort and Pagination",permalink:"/aberabook/dev-docs/api/rest/sort-pagination"}},u={},m=[{value:"Filtering",id:"filtering",level:2},{value:"Example: Find users having &#39;John&#39; as a first name",id:"example-find-users-having-john-as-a-first-name",level:3},{value:"Example: Find multiple restaurants with ids 3, 6,8",id:"example-find-multiple-restaurants-with-ids-3-68",level:3},{value:"Complex filtering",id:"complex-filtering",level:3},{value:"Deep filtering",id:"deep-filtering",level:3},{value:"Locale",id:"locale",level:2},{value:"Publication State",id:"publication-state",level:2}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},k=c("SideBySideContainer"),y=c("SideBySideColumn"),f=c("ApiCall"),b=c("Request"),N=c("Response"),g={toc:m};function h(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rest-api-filtering-locale-and-publication-state"},"REST API: Filtering, Locale, and Publication State"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/api/rest"},"REST API")," offers the ability to filter results found with its ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/api/rest#get-entries"},'"Get entries"')," method.",(0,r.kt)("br",null),"\nUsing optional Strapi features can provide some more filters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If the ",(0,r.kt)("a",{parentName:"li",href:"/aberabook/dev-docs/plugins/i18n"},"Internationalization (i18n) plugin")," is enabled on a content-type, it's possible to filter by locale."),(0,r.kt)("li",{parentName:"ul"},"If the ",(0,r.kt)("a",{parentName:"li",href:"/user-docs/content-manager/saving-and-publishing-content"},"Draft & Publish")," is enabled, it's possible to filter based on a ",(0,r.kt)("inlineCode",{parentName:"li"},"live")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"preview")," state.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)(i.default,{mdxType:"QsIntroFull"})),(0,r.kt)("h2",{id:"filtering"},"Filtering"),(0,r.kt)("p",null,"Queries can accept a ",(0,r.kt)("inlineCode",{parentName:"p"},"filters")," parameter with the following syntax:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GET /api/:pluralApiId?filters[field][operator]=value")),(0,r.kt)("p",null,"The following operators are available:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operator"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$eq")),(0,r.kt)("td",{parentName:"tr",align:null},"Equal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$eqi")),(0,r.kt)("td",{parentName:"tr",align:null},"Equal (case-insensitive)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$ne")),(0,r.kt)("td",{parentName:"tr",align:null},"Not equal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$nei")),(0,r.kt)("td",{parentName:"tr",align:null},"Not equal (case-insensitive)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$lt")),(0,r.kt)("td",{parentName:"tr",align:null},"Less than")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$lte")),(0,r.kt)("td",{parentName:"tr",align:null},"Less than or equal to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$gt")),(0,r.kt)("td",{parentName:"tr",align:null},"Greater than")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$gte")),(0,r.kt)("td",{parentName:"tr",align:null},"Greater than or equal to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$in")),(0,r.kt)("td",{parentName:"tr",align:null},"Included in an array")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$notIn")),(0,r.kt)("td",{parentName:"tr",align:null},"Not included in an array")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$contains")),(0,r.kt)("td",{parentName:"tr",align:null},"Contains")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$notContains")),(0,r.kt)("td",{parentName:"tr",align:null},"Does not contain")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$containsi")),(0,r.kt)("td",{parentName:"tr",align:null},"Contains (case-insensitive)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$notContainsi")),(0,r.kt)("td",{parentName:"tr",align:null},"Does not contain (case-insensitive)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$null")),(0,r.kt)("td",{parentName:"tr",align:null},"Is null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$notNull")),(0,r.kt)("td",{parentName:"tr",align:null},"Is not null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$between")),(0,r.kt)("td",{parentName:"tr",align:null},"Is between")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$startsWith")),(0,r.kt)("td",{parentName:"tr",align:null},"Starts with")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$startsWithi")),(0,r.kt)("td",{parentName:"tr",align:null},"Starts with (case-insensitive)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$endsWith")),(0,r.kt)("td",{parentName:"tr",align:null},"Ends with")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$endsWithi")),(0,r.kt)("td",{parentName:"tr",align:null},"Ends with (case-insensitive)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$or")),(0,r.kt)("td",{parentName:"tr",align:null},'Joins the filters in an "or" expression')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$and")),(0,r.kt)("td",{parentName:"tr",align:null},'Joins the filters in an "and" expression')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$not")),(0,r.kt)("td",{parentName:"tr",align:null},'Joins the filters in an "not" expression')))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"By default, the filters can only be used from ",(0,r.kt)("inlineCode",{parentName:"p"},"find")," endpoints generated by the Content-type Builder and the CLI.")),(0,r.kt)(k,{mdxType:"SideBySideContainer"},(0,r.kt)(y,{mdxType:"SideBySideColumn"},(0,r.kt)("h3",{id:"example-find-users-having-john-as-a-first-name"},"Example: Find users having 'John' as a first name"),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"$eq")," filter operator to find an exact match.")),(0,r.kt)(y,{mdxType:"SideBySideColumn"},(0,r.kt)("br",null),(0,r.kt)(f,{mdxType:"ApiCall"},(0,r.kt)(b,{title:"Find users having 'John' as first name",mdxType:"Request"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GET /api/users?filters[username][$eq]=John"))),(0,r.kt)(N,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": 1,\n    "username": "John",\n    "email": "john@test.com",\n    "provider": "local",\n    "confirmed": true,\n    "blocked": false,\n    "createdAt": "2021-12-03T20:08:17.740Z",\n    "updatedAt": "2021-12-03T20:08:17.740Z"\n  }\n]\n')))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)(o.default,{mdxType:"QsForQueryTitle"})),(0,r.kt)(l.default,{mdxType:"QsForQueryBody"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const qs = require('qs');\nconst query = qs.stringify({\n  filters: {\n    username: {\n      $eq: 'John',\n    },\n  },\n}, {\n  encodeValuesOnly: true, // prettify URL\n});\n\nawait request(`/api/users?${query}`);\n"))))),(0,r.kt)(k,{mdxType:"SideBySideContainer"},(0,r.kt)(y,{mdxType:"SideBySideColumn"},(0,r.kt)("h3",{id:"example-find-multiple-restaurants-with-ids-3-68"},"Example: Find multiple restaurants with ids 3, 6,8"),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"$in")," filter operator with an array of values to find multiple exact values.")),(0,r.kt)(y,{mdxType:"SideBySideColumn"},(0,r.kt)("br",null),(0,r.kt)(f,{mdxType:"ApiCall"},(0,r.kt)(b,{title:"Find multiple restaurants with ids 3, 6, 8",mdxType:"Request"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GET /api/restaurants?filters[id][$in][0]=3&filters[id][$in][1]=6&filters[id][$in][2]=8"))),(0,r.kt)(N,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "id": 3,\n      "attributes": {\n        "name": "test3",\n        // ...\n      }\n    },\n    {\n      "id": 6,\n      "attributes": {\n        "name": "test6",\n        // ...\n      }\n    },\n    {\n      "id": 8,\n      "attributes": {\n        "name": "test8",\n        // ...\n      }\n    }\n  ],\n  "meta": {\n    // ...\n  }\n}\n')))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)(o.default,{mdxType:"QsForQueryTitle"})),(0,r.kt)(l.default,{mdxType:"QsForQueryBody"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const qs = require('qs');\nconst query = qs.stringify({\n  filters: {\n    id: {\n      $in: [3, 6, 8],\n    },\n  },\n}, {\n  encodeValuesOnly: true, // prettify URL\n});\n\nawait request(`/api/restaurants?${query}`);\n"))))),(0,r.kt)(k,{mdxType:"SideBySideContainer"},(0,r.kt)(y,{mdxType:"SideBySideColumn"},(0,r.kt)("h3",{id:"complex-filtering"},"Complex filtering"),(0,r.kt)("p",null,"Complex filtering is combining multiple filters using advanced methods such as combining ",(0,r.kt)("inlineCode",{parentName:"p"},"$and")," & ",(0,r.kt)("inlineCode",{parentName:"p"},"$or"),". This allows for more flexibility to request exactly the data needed.")),(0,r.kt)(y,{mdxType:"SideBySideColumn"},(0,r.kt)("br",null),(0,r.kt)(f,{mdxType:"ApiCall"},(0,r.kt)(b,{title:"Find books with 2 possible dates and a specific author",mdxType:"Request"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GET /api/books?filters[$or][0][date][$eq]=2020-01-01&filters[$or][1][date][$eq]=2020-01-02&filters[author][name][$eq]=Kai%20doe"))),(0,r.kt)(N,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "id": 1,\n      "attributes": {\n        "name": "test1",\n        "date": "2020-01-01",\n        // ...\n      }\n    },\n    {\n      "id": 2,\n      "attributes": {\n        "name": "test2",\n        "date": "2020-01-02",\n        // ...\n      }\n    }\n  ],\n  "meta": {\n    // ...\n  }\n}\n')))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)(o.default,{mdxType:"QsForQueryTitle"})),(0,r.kt)(l.default,{mdxType:"QsForQueryBody"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const qs = require('qs');\nconst query = qs.stringify({\n  filters: {\n    $or: [\n      {\n        date: {\n          $eq: '2020-01-01',\n        },\n      },\n      {\n        date: {\n          $eq: '2020-01-02',\n        },\n      },\n    ],\n    author: {\n      name: {\n        $eq: 'Kai doe',\n      },\n    },\n  },\n}, {\n  encodeValuesOnly: true, // prettify URL\n});\n\nawait request(`/api/books?${query}`);\n"))))),(0,r.kt)(k,{mdxType:"SideBySideContainer"},(0,r.kt)(y,{mdxType:"SideBySideColumn"},(0,r.kt)("h3",{id:"deep-filtering"},"Deep filtering"),(0,r.kt)("p",null,"Deep filtering is filtering on a relation's fields."),(0,r.kt)("br",null),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Querying your API with deep filters may cause performance issues.  If one of your deep filtering queries is too slow, we recommend building a custom route with an optimized version of the query."),(0,r.kt)("li",{parentName:"ul"},"Deep filtering isn't available for polymorphic relations (eg: Dynamic Zones & Media Fields)."))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Relations, media fields, components, and dynamic zones are not populated by default. Use the ",(0,r.kt)("inlineCode",{parentName:"li"},"populate")," parameter to populate these data structures (see ",(0,r.kt)("a",{parentName:"li",href:"/dev-docs/api/rest/populate-select#population"},(0,r.kt)("inlineCode",{parentName:"a"},"populate")," documentation"),")"),(0,r.kt)("li",{parentName:"ul"},"It is not possible to filter on dynamic zones or media fields.")))),(0,r.kt)(y,{mdxType:"SideBySideColumn"},(0,r.kt)("br",null),(0,r.kt)(f,{mdxType:"ApiCall"},(0,r.kt)(b,{title:"Find restaurants owned by a chef who belongs to a 5-star restaurant",mdxType:"Request"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GET /api/restaurants?filters[chef][restaurants][stars][$eq]=5"))),(0,r.kt)(N,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "id": 1,\n      "attributes": {\n        "name": "GORDON RAMSAY STEAK",\n        "stars": 5\n        // ...\n      }\n    },\n    {\n      "id": 2,\n      "attributes": {\n        "name": "GORDON RAMSAY BURGER",\n        "stars": 5\n        // ...\n      }\n    }\n  ],\n  "meta": {\n    // ...\n  }\n}\n')))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)(o.default,{mdxType:"QsForQueryTitle"})),(0,r.kt)(l.default,{mdxType:"QsForQueryBody"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const qs = require('qs');\nconst query = qs.stringify({\n  filters: {\n    chef: {\n      restaurants: {\n        stars: {\n          $eq: 5,\n        },\n      },\n    },\n  },\n}, {\n  encodeValuesOnly: true, // prettify URL\n});\n\nawait request(`/api/restaurants?${query}`);\n"))))),(0,r.kt)("h2",{id:"locale"},"Locale"),(0,r.kt)("admonition",{type:"prerequisites"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"/aberabook/dev-docs/plugins/i18n"},"Internationalization (i18n) plugin")," should be installed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/aberabook/user-docs/content-type-builder/creating-new-content-type#creating-a-new-content-type"},"Localization should be enabled for the content-type"),"."))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"locale")," API parameter can be used to get entries from a specific locale (see ",(0,r.kt)("a",{parentName:"p",href:"/aberabook/dev-docs/plugins/i18n#getting-localized-entries-with-the-locale-parameter"},"i18n plugin documentation"),")."),(0,r.kt)(k,{mdxType:"SideBySideContainer"},(0,r.kt)(y,{mdxType:"SideBySideColumn"},(0,r.kt)("h2",{id:"publication-state"},"Publication State"),(0,r.kt)("admonition",{type:"prerequisites"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("a",{parentName:"p",href:"/user-docs/content-manager/saving-and-publishing-content"},"Draft & Publish")," feature should be enabled.")),(0,r.kt)("p",null,"Queries can accept a ",(0,r.kt)("inlineCode",{parentName:"p"},"publicationState")," parameter to fetch entries based on their publication state:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"live"),": returns only published entries (default)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"preview"),": returns both draft entries & published entries"))),(0,r.kt)(y,{mdxType:"SideBySideColumn"},(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)(f,{mdxType:"ApiCall"},(0,r.kt)(b,{title:"Get both published and draft articles",mdxType:"Request"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GET /api/articles?publicationState=preview"))),(0,r.kt)(N,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "id": 1,\n      "attributes": {\n        "title": "This a Draft",\n        "publishedAt": null\n        // ...\n      }\n    },\n    {\n      "id": 2,\n      "attributes": {\n        "title": "This is Live",\n        "publishedAt": "2021-12-03T20:08:17.740Z"\n        // ...\n      }\n    }\n  ],\n  "meta": {\n    // ...\n  }\n}\n')))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)(o.default,{mdxType:"QsForQueryTitle"})),(0,r.kt)(l.default,{mdxType:"QsForQueryBody"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const qs = require('qs');\nconst query = qs.stringify({\n  publicationState: 'preview',\n}, {\n  encodeValuesOnly: true, // prettify URL\n});\n\nawait request(`/api/articles?${query}`);\n"))))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"To retrieve only draft entries, combine the ",(0,r.kt)("inlineCode",{parentName:"p"},"preview")," publication state and the ",(0,r.kt)("inlineCode",{parentName:"p"},"publishedAt")," fields:"),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"GET /api/articles?publicationState=preview&filters[publishedAt][$null]=true")),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)(o.default,{mdxType:"QsForQueryTitle"})),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const qs = require('qs');\nconst query = qs.stringify({\n  publicationState: 'preview',\n  filters: {\n    publishedAt: {\n      $null: true,\n    },\n  },\n}, {\n  encodeValuesOnly: true, // prettify URL\n});\n\nawait request(`/api/articles?${query}`);\n")))))}h.isMDXComponent=!0},19986:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(83117),r=(n(67294),n(3905));const i={},l=void 0,o={unversionedId:"snippets/qs-for-query-body",id:"snippets/qs-for-query-body",title:"qs-for-query-body",description:"The query URL above was built using the qs library.",source:"@site/docs/snippets/qs-for-query-body.md",sourceDirName:"snippets",slug:"/snippets/qs-for-query-body",permalink:"/aberabook/snippets/qs-for-query-body",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/snippets/qs-for-query-body.md",tags:[],version:"current",frontMatter:{}},s={},p=[],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The query URL above was built using ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ljharb/qs"},"the ",(0,r.kt)("inlineCode",{parentName:"a"},"qs")," library"),".\n",(0,r.kt)("inlineCode",{parentName:"p"},"qs")," can be run locally on your machine, as shown in the following code example, or you can use our ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/dev-docs/api/rest/interactive-query-builder"},"interactive query builder"))," online tool."))}u.isMDXComponent=!0},87514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(83117),r=(n(67294),n(3905));const i={},l=void 0,o={unversionedId:"snippets/qs-for-query-title",id:"snippets/qs-for-query-title",title:"qs-for-query-title",description:"JavaScript query (built with the qs library):",source:"@site/docs/snippets/qs-for-query-title.md",sourceDirName:"snippets",slug:"/snippets/qs-for-query-title",permalink:"/aberabook/snippets/qs-for-query-title",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/snippets/qs-for-query-title.md",tags:[],version:"current",frontMatter:{}},s={},p=[],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"JavaScript query (built with the qs library):"))}u.isMDXComponent=!0},20823:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(83117),r=(n(67294),n(3905));const i={},l=void 0,o={unversionedId:"snippets/qs-intro-full",id:"snippets/qs-intro-full",title:"qs-intro-full",description:"Strapi takes advantage of the ability of the qs library to parse nested objects to create more complex queries.",source:"@site/docs/snippets/qs-intro-full.md",sourceDirName:"snippets",slug:"/snippets/qs-intro-full",permalink:"/aberabook/snippets/qs-intro-full",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/snippets/qs-intro-full.md",tags:[],version:"current",frontMatter:{}},s={},p=[],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Strapi takes advantage of the ability of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ljharb/qs"},"the ",(0,r.kt)("inlineCode",{parentName:"a"},"qs")," library")," to parse nested objects to create more complex queries."),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"qs")," directly to generate complex queries instead of creating them manually. Examples in this documentation showcase how you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"qs"),"."),(0,r.kt)("p",null,"You can also use the ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/api/rest/interactive-query-builder"},"interactive query builder")," if you prefer playing with our online tool instead of generating queries with ",(0,r.kt)("inlineCode",{parentName:"p"},"qs")," on your machine."))}u.isMDXComponent=!0}}]);