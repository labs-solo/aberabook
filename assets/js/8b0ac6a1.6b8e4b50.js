"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[6244],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(t),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||r;return t?a.createElement(f,s(s({ref:n},p),{},{components:t})):a.createElement(f,s({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,s=new Array(r);s[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<r;l++)s[l]=t[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},32114:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=t(83117),o=(t(67294),t(3905));const r={title:"CRON jobs",displayed_sidebar:"devDocsConfigSidebar",description:"Strapi allows you to configure cron jobs for execution at specific dates and times, with optional reoccurrence rules."},s="Cron jobs",i={unversionedId:"dev-docs/configurations/cron",id:"dev-docs/configurations/cron",title:"CRON jobs",description:"Strapi allows you to configure cron jobs for execution at specific dates and times, with optional reoccurrence rules.",source:"@site/docs/dev-docs/configurations/cron.md",sourceDirName:"dev-docs/configurations",slug:"/dev-docs/configurations/cron",permalink:"/aberabook/dev-docs/configurations/cron",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/configurations/cron.md",tags:[],version:"current",frontMatter:{title:"CRON jobs",displayed_sidebar:"devDocsConfigSidebar",description:"Strapi allows you to configure cron jobs for execution at specific dates and times, with optional reoccurrence rules."},sidebar:"devDocsConfigSidebar",previous:{title:"Lifecycle Functions",permalink:"/aberabook/dev-docs/configurations/functions"},next:{title:"Environment variables",permalink:"/aberabook/dev-docs/configurations/environment"}},c={},l=[{value:"Creating a cron job",id:"creating-a-cron-job",level:2},{value:"Using the object format",id:"using-the-object-format",level:3},{value:"Using the key format",id:"using-the-key-format",level:3},{value:"Enabling cron jobs",id:"enabling-cron-jobs",level:2}],p=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",n)},d=p("Tabs"),u=p("TabItem"),m={toc:l};function f(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cron-jobs"},"Cron jobs"),(0,o.kt)("admonition",{type:"prerequisites"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"cron.enabled")," configuration option should be set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"./config/server.js")," (or ",(0,o.kt)("inlineCode",{parentName:"p"},"./config/server.ts")," for TypeScript projects) ",(0,o.kt)("a",{parentName:"p",href:"/dev-docs/configurations/server"},"file"),".")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"cron")," allows scheduling arbitrary functions for execution at specific dates, with optional recurrence rules. These functions are named cron jobs. ",(0,o.kt)("inlineCode",{parentName:"p"},"cron")," only uses a single timer at any given time, rather than reevaluating upcoming jobs every second/minute."),(0,o.kt)("p",null,"This feature is powered by the ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/node-schedule"},(0,o.kt)("inlineCode",{parentName:"a"},"node-schedule"))," package."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"cron")," format consists of:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\n*    *    *    *    *    *\n\u252c    \u252c    \u252c    \u252c    \u252c    \u252c\n\u2502    \u2502    \u2502    \u2502    \u2502    |\n\u2502    \u2502    \u2502    \u2502    \u2502    \u2514 day of week (0 - 7) (0 or 7 is Sun)\n\u2502    \u2502    \u2502    \u2502    \u2514\u2500\u2500\u2500\u2500\u2500 month (1 - 12)\n\u2502    \u2502    \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of month (1 - 31)\n\u2502    \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hour (0 - 23)\n\u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 minute (0 - 59)\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 second (0 - 59, OPTIONAL)\n\n")),(0,o.kt)("p",null,"To define cron jobs and have them run at the required times:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#creating-a-cron-job"},"Create")," the appropriate file."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#enabling-cron-jobs"},"Enable")," the cron jobs in the server configuration file.")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Optionally, cron jobs can be directly created in the ",(0,o.kt)("inlineCode",{parentName:"p"},"cron.tasks")," key of the ",(0,o.kt)("a",{parentName:"p",href:"/dev-docs/configurations/server"},"server configuration file"),".")),(0,o.kt)("h2",{id:"creating-a-cron-job"},"Creating a cron job"),(0,o.kt)("p",null,"A cron job can be created using the ",(0,o.kt)("a",{parentName:"p",href:"#using-the-object-format"},"object format")," or ",(0,o.kt)("a",{parentName:"p",href:"#using-the-key-format"},"key format"),"."),(0,o.kt)("h3",{id:"using-the-object-format"},"Using the object format"),(0,o.kt)("p",null,"To define a cron job with the object format, create a file with the following structure:"),(0,o.kt)(d,{groupId:"js-ts",mdxType:"Tabs"},(0,o.kt)(u,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./config/cron-tasks.js"',title:'"./config/cron-tasks.js"'},'module.exports = {\n  /**\n   * Simple example.\n   * Every monday at 1am.\n   */\n\n  myJob: {\n    task: ({ strapi }) => {\n      // Add your own logic here (e.g. send a queue of email, create a database backup, etc.).\n    },\n    options: {\n      rule: "0 0 1 * * 1",\n    },\n  },\n};\n'))),(0,o.kt)(u,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="./config/cron-tasks.ts"',title:'"./config/cron-tasks.ts"'},'export default {\n  /**\n   * Simple example.\n   * Every monday at 1am.\n   */\n\n  myJob: {\n    task: ({ strapi }) => {\n      // Add your own logic here (e.g. send a queue of email, create a database backup, etc.).\n    },\n    options: {\n      rule: "0 0 1 * * 1",\n    },\n  },\n};\n')))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Advanced example #1: Timezones"),(0,o.kt)("p",null,"The following cron job runs on a specific timezone:"),(0,o.kt)(d,{groupId:"js-ts",mdxType:"Tabs"},(0,o.kt)(u,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./config/cron-tasks.js"',title:'"./config/cron-tasks.js"'},'module.exports = {\n  /**\n   * Cron job with timezone example.\n   * Every Monday at 1am for Asia/Dhaka timezone.\n   * List of valid timezones: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List\n   */\n\n  myJob: {\n    task: ({ strapi }) => {\n      /* Add your own logic here */\n    },\n    options: {\n      rule: "0 0 1 * * 1",\n      tz: "Asia/Dhaka",\n    },\n  },\n};\n'))),(0,o.kt)(u,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="./config/cron-tasks.ts"',title:'"./config/cron-tasks.ts"'},'export default {\n  /**\n   * Cron job with timezone example.\n   * Every Monday at 1am for Asia/Dhaka timezone.\n   * List of valid timezones: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List\n   */\n\n  myJob: {\n    task: ({ strapi }) => {\n      /* Add your own logic here */\n    },\n    options: {\n      rule: "0 0 1 * * 1",\n      tz: "Asia/Dhaka",\n    },\n  },\n};\n'))))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Advanced example #2: One-off cron jobs"),"The following cron job is run only once at a given time:",(0,o.kt)(d,{groupId:"js-ts",mdxType:"Tabs"},(0,o.kt)(u,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./config/cron-tasks.js"',title:'"./config/cron-tasks.js"'},"module.exports = {\n  myJob: {\n    task: ({ strapi }) => {\n      /* Add your own logic here */\n    },\n    // only run once after 10 seconds\n    options: new Date(Date.now() + 10000),\n  },\n};\n"))),(0,o.kt)(u,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="./config/cron-tasks.ts"',title:'"./config/cron-tasks.ts"'},"export default {\n  myJob: {\n    task: ({ strapi }) => {\n      /* Add your own logic here */\n    },\n    // only run once after 10 seconds\n    options: new Date(Date.now() + 10000),\n  },\n};\n"))))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Advanced example #3: Start and end times"),(0,o.kt)("p",null,"The following cron job uses start and end times:"),(0,o.kt)(d,{groupId:"js-ts",mdxType:"Tabs"},(0,o.kt)(u,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./config/cron-tasks.js"',title:'"./config/cron-tasks.js"'},'module.exports = {\n  myJob: {\n    task: ({ strapi }) => {\n      /* Add your own logic here */\n    },\n    options: {\n      rule: "* * * * * *",\n      // start 10 seconds from now\n      start: new Date(Date.now() + 10000),\n      // end 20 seconds from now\n      end: new Date(Date.now() + 20000),\n    },\n  },\n};\n'))),(0,o.kt)(u,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="./config/cron-tasks.ts"',title:'"./config/cron-tasks.ts"'},'export default {\n  myJob: {\n    task: ({ strapi }) => {\n      /* Add your own logic here */\n    },\n    // only run once after 10 seconds\n    options: {\n      rule: "* * * * * *",\n      // start 10 seconds from now\n      start: new Date(Date.now() + 10000),\n      // end 20 seconds from now\n      end: new Date(Date.now() + 20000),\n    },\n  },\n};\n'))))),(0,o.kt)("h3",{id:"using-the-key-format"},"Using the key format"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Using the key format creates an anonymous cron job which may cause issues when trying to disable the cron job or with some plugins. It is recommended to use the object format.")),(0,o.kt)("p",null,"To define a cron job with the key format, create a file with the following structure:"),(0,o.kt)(d,{groupId:"js-ts",mdxType:"Tabs"},(0,o.kt)(u,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./config/cron-tasks.js"',title:'"./config/cron-tasks.js"'},'module.exports = {\n  /**\n   * Simple example.\n   * Every monday at 1am.\n   */\n\n  "0 0 1 * * 1": ({ strapi }) => {\n    // Add your own logic here (e.g. send a queue of email, create a database backup, etc.).\n  },\n};\n'))),(0,o.kt)(u,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="./config/cron-tasks.ts"',title:'"./config/cron-tasks.ts"'},'export default {\n  /**\n   * Simple example.\n   * Every monday at 1am.\n   */\n\n  "0 0 1 * * 1": ({ strapi }) => {\n    // Add your own logic here (e.g. send a queue of email, create a database backup, etc.).\n  },\n};\n')))),(0,o.kt)("h2",{id:"enabling-cron-jobs"},"Enabling cron jobs"),(0,o.kt)("p",null,"To enable cron jobs, set ",(0,o.kt)("inlineCode",{parentName:"p"},"cron.enabled")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," in the ",(0,o.kt)("a",{parentName:"p",href:"/dev-docs/configurations/server"},"server configuration file")," and declare the jobs:"),(0,o.kt)(d,{groupId:"js-ts",mdxType:"Tabs"},(0,o.kt)(u,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./config/server.js"',title:'"./config/server.js"'},'const cronTasks = require("./cron-tasks");\n\nmodule.exports = ({ env }) => ({\n  host: env("HOST", "0.0.0.0"),\n  port: env.int("PORT", 1337),\n  cron: {\n    enabled: true,\n    tasks: cronTasks,\n  },\n});\n'))),(0,o.kt)(u,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="./config/server.ts"',title:'"./config/server.ts"'},'import cronTasks from "./cron-tasks";\n\nexport default ({ env }) => ({\n  host: env("HOST", "0.0.0.0"),\n  port: env.int("PORT", 1337),\n  cron: {\n    enabled: true,\n    tasks: cronTasks,\n  },\n});\n')))))}f.isMDXComponent=!0}}]);