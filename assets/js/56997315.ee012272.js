"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[3538],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),l=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(i,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(h,p(p({ref:t},u),{},{components:n})):a.createElement(h,p({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,p=new Array(o);p[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,p[1]=s;for(var l=2;l<o;l++)p[l]=n[l];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},82297:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(83117),r=(n(67294),n(3905));const o={title:"Angular",displayed_sidebar:"devDocsSidebar",description:"Integrate Strapi with Angular."},p="Getting Started with Angular",s={unversionedId:"dev-docs/integrations/angular",id:"dev-docs/integrations/angular",title:"Angular",description:"Integrate Strapi with Angular.",source:"@site/docs/dev-docs/integrations/angular.md",sourceDirName:"dev-docs/integrations",slug:"/dev-docs/integrations/angular",permalink:"/aberabook/dev-docs/integrations/angular",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/integrations/angular.md",tags:[],version:"current",frontMatter:{title:"Angular",displayed_sidebar:"devDocsSidebar",description:"Integrate Strapi with Angular."},sidebar:"devDocsSidebar",previous:{title:"11ty",permalink:"/aberabook/dev-docs/integrations/11ty"},next:{title:"Dart",permalink:"/aberabook/dev-docs/integrations/dart"}},i={},l=[{value:"Create a Angular app",id:"create-a-angular-app",level:2},{value:"Use the Angular HTTP client",id:"use-the-angular-http-client",level:2},{value:"GET Request your collection type",id:"get-request-your-collection-type",level:2},{value:"Example",id:"example",level:3},{value:"POST Request your collection type",id:"post-request-your-collection-type",level:2},{value:"Example",id:"example-1",level:3},{value:"PUT Request your collection type",id:"put-request-your-collection-type",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},c=u("Request"),d=u("Response"),m={toc:l};function h(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started-with-angular"},"Getting Started with Angular"),(0,r.kt)("p",null,"This integration guide follows the ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/quick-start"},"Quick Start Guide"),' and assumes you have fully completed the "Hands-on" path. You should be able to consume the API by browsing the URL ',(0,r.kt)("a",{parentName:"p",href:"http://localhost:1337/api/restaurants"},"http://localhost:1337/api/restaurants"),"."),(0,r.kt)("p",null,"If you haven't gone through the Quick Start Guide, the way you request a Strapi API with ",(0,r.kt)("a",{parentName:"p",href:"https://angular.io"},"Angular")," remains the same except that you do not fetch the same content."),(0,r.kt)("h2",{id:"create-a-angular-app"},"Create a Angular app"),(0,r.kt)("p",null,"Create a basic Angular application using ",(0,r.kt)("a",{parentName:"p",href:"https://angular.io/guide/setup-local"},"angular CLI"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx -p @angular/cli ng new angular-app\n")),(0,r.kt)("h2",{id:"use-the-angular-http-client"},"Use the Angular HTTP client"),(0,r.kt)("p",null,"Import the Angular HttpClientModule:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="./src/app/app.module.ts"',title:'"./src/app/app.module.ts"'},'import { NgModule } from "@angular/core";\nimport { BrowserModule } from "@angular/platform-browser";\nimport { HttpClientModule } from "@angular/common/http";\n\nimport { AppComponent } from "./app.component";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n')),(0,r.kt)("h2",{id:"get-request-your-collection-type"},"GET Request your collection type"),(0,r.kt)("p",null,"Execute a ",(0,r.kt)("inlineCode",{parentName:"p"},"GET")," request on the ",(0,r.kt)("inlineCode",{parentName:"p"},"restaurant")," collection type in order to fetch all your restaurants."),(0,r.kt)("p",null,"Be sure that you activated the ",(0,r.kt)("inlineCode",{parentName:"p"},"find")," permission for the ",(0,r.kt)("inlineCode",{parentName:"p"},"restaurant")," collection type."),(0,r.kt)(c,{title:" Example GET request",mdxType:"Request"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'// this.http is the Angular HttpClient service.\nthis.http\n  .get("http://localhost:1337/api/restaurants", {\n    params: { populate: "*" },\n  })\n  .subscribe((response) => {\n    console.log(response);\n  });\n'))),(0,r.kt)(d,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "id": 1,\n      "attributes": {\n        "name": "Biscotte Restaurant",\n        "description": "Welcome to Biscotte restaurant! Restaurant Biscotte offers a cuisine based on fresh, quality products, often local, organic when possible, and always produced by passionate producers.",\n        "createdAt": "2023-03-25T11:13:41.883Z",\n        "updatedAt": "2023-03-25T11:17:45.737Z",\n        "publishedAt": "2023-03-25T11:17:45.735Z",\n        "categories": {\n          "data": [\n            {\n              "id": 2,\n              "attributes": {\n                "name": "Brunch",\n                "createdAt": "2023-03-25T11:14:20.605Z",\n                "updatedAt": "2023-03-25T11:17:00.158Z",\n                "publishedAt": "2023-03-25T11:17:00.153Z"\n              }\n            }\n          ]\n        }\n      }\n    }\n  ],\n  "meta": {\n    "pagination": {\n      "page": 1,\n      "pageSize": 25,\n      "pageCount": 1,\n      "total": 1\n    }\n  }\n}\n'))),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="./src/app/app.component.ts"',title:'"./src/app/app.component.ts"'},'import { HttpClient, HttpErrorResponse } from "@angular/common/http";\nimport { Component, OnInit } from "@angular/core";\nimport { catchError, map, Observable, of } from "rxjs";\n\ninterface Restaurant {\n  name: string;\n  description: string;\n}\n\ninterface Entry<T> {\n  id: number;\n  attributes: T;\n}\n\ninterface Response {\n  data: Entry<Restaurant>[];\n}\n\n@Component({\n  selector: "app-root",\n  templateUrl: "./app.component.html",\n  styleUrls: ["./app.component.css"],\n})\nexport class AppComponent implements OnInit {\n  error: any | undefined;\n  restaurants$: Observable<Restaurant[]> | undefined;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    const url = "http://localhost:1337/api/restaurants";\n    const opts = { params: { populate: "*" } };\n\n    this.restaurants$ = this.http.get<Response>(url, opts).pipe(\n      catchError((error) => this.handleError(error)),\n      map((response) => response.data.map((x) => x.attributes))\n    );\n  }\n\n  private handleError(error: HttpErrorResponse): Observable<never> {\n    this.error = error;\n    return of();\n  }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="./src/app/app.component.html"',title:'"./src/app/app.component.html"'},'<div *ngIf="error">{{error}}</div>\n\n<ul *ngIf="restaurants$|async as restaurants">\n  <li *ngFor="let restaurant of restaurants">{{restaurant.name}}</li>\n</ul>\n')),(0,r.kt)("h2",{id:"post-request-your-collection-type"},"POST Request your collection type"),(0,r.kt)("p",null,"Execute a ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," request on the ",(0,r.kt)("inlineCode",{parentName:"p"},"restaurant")," collection type in order to create a restaurant."),(0,r.kt)("p",null,"Be sure that you activated the ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," permission for the ",(0,r.kt)("inlineCode",{parentName:"p"},"restaurant")," collection type and the ",(0,r.kt)("inlineCode",{parentName:"p"},"find")," permission fot the ",(0,r.kt)("inlineCode",{parentName:"p"},"category")," collection type."),(0,r.kt)("p",null,"In this example a ",(0,r.kt)("inlineCode",{parentName:"p"},"japanese")," category has been created which has the id: 3."),(0,r.kt)(c,{title:"Example POST request with axios",mdxType:"Request"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'// this.http is the Angular HttpClient service.\nthis.http\n  .post("http://localhost:1337/api/restaurants", {\n    data: {\n      name: "Dolemon Sushi",\n      description:\n        "Unmissable Japanese Sushi restaurant. The cheese and salmon makis are delicious",\n      categories: [3],\n    },\n  })\n  .subscribe((response) => {\n    console.log(response);\n  });\n'))),(0,r.kt)(d,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 2,\n  "name": "Dolemon Sushi",\n  "description": "Unmissable Japanese Sushi restaurant. The cheese and salmon makis are delicious",\n  "created_by": null,\n  "updated_by": null,\n  "created_at": "2020-08-04T09:57:11.669Z",\n  "updated_at": "2020-08-04T09:57:11.669Z",\n  "categories": [\n    {\n      "id": 3,\n      "name": "Japanese",\n      "created_by": 1,\n      "updated_by": 1,\n      "created_at": "2020-07-31T11:36:23.164Z",\n      "updated_at": "2020-07-31T11:36:23.172Z"\n    }\n  ]\n}\n'))),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="./src/app/app.module.ts"',title:'"./src/app/app.module.ts"'},'import { HttpClientModule } from "@angular/common/http";\nimport { NgModule } from "@angular/core";\nimport { FormsModule } from "@angular/forms";\nimport { BrowserModule } from "@angular/platform-browser";\n\nimport { AppComponent } from "./app.component";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, FormsModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"./src/app/app.component.ts")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder } from '@angular/forms';\nimport { catchError, map, Observable, of, tap } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\ninterface Category {\n  name: string;\n}\n\ninterface Entry<T> {\n  id: number;\n  attributes: T;\n}\n\ninterface Response<T> {\n  data: Entry<T>[];\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  allCategories$: Observable<Entry<Category>[]> | undefined;\n  error: any | undefined;\n  modifiedData = {\n    name: '',\n    description: '',\n    categories: new Array<{ id: number; checked: boolean }>(),\n  };\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.allCategories$ = this.http\n      .get<Response<Category>>('http://localhost:1337/api/categories')\n      .pipe(\n        catchError((error) => this.handleError(error)),\n        map((response) => response.data),\n        tap((data) => {\n          data.forEach((x) => {\n            this.modifiedData.categories.push({ id: x.id, checked: false });\n          });\n        })\n      );\n  }\n\n  onSubmit(): void {\n    const body = {\n      data: {\n        name: this.modifiedData.name,\n        description: this.modifiedData.description,\n        categories: this.modifiedData.categories\n          .filter((x) => x.checked)\n          .map((x) => x.id),\n      },\n    };\n\n    this.http\n      .post('http://localhost:1337/api/restaurants', body)\n      .pipe(catchError((error) => this.handleError(error)))\n      .subscribe((response) => {\n        console.log(response);\n        this.resetForm();\n      });\n  }\n\n  private handleError(error: HttpErrorResponse): Observable<never> {\n    this.error = error.message;\n    return of();\n  }\n\n  private resetForm(): void {\n    this.modifiedData.name = '';\n    this.modifiedData.description = '';\n    this.modifiedData.categories.forEach((x) => (x.checked = false));\n  }\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="./src/app/app.component.html"',title:'"./src/app/app.component.html"'},'<div *ngIf="error">{{error}}</div>\n\n<form (ngSubmit)="onSubmit()">\n  <div>\n    <label for="name"> Name </label>\n    <input name="name" type="text" [(ngModel)]="modifiedData.name" />\n  </div>\n\n  <div>\n    <label for="address"> Description </label>\n    <input\n      name="description"\n      type="text"\n      [(ngModel)]="modifiedData.description"\n    />\n  </div>\n\n  <div *ngIf="allCategories$ | async as allCategories">\n    <br />\n    Select categories\n    <div *ngFor="let category of allCategories; index as i">\n      <label\n        >{{category.attributes.name}}\n        <input\n          type="checkbox"\n          name="category{{i}}"\n          [(ngModel)]="modifiedData.categories[i].checked"\n        />\n      </label>\n    </div>\n  </div>\n\n  <button class="button" type="submit">Create</button>\n</form>\n')),(0,r.kt)("h2",{id:"put-request-your-collection-type"},"PUT Request your collection type"),(0,r.kt)("p",null,"Execute a ",(0,r.kt)("inlineCode",{parentName:"p"},"PUT")," request on the ",(0,r.kt)("inlineCode",{parentName:"p"},"restaurant")," collection type in order to update the category of a restaurant."),(0,r.kt)("p",null,"Be sure that you activated the ",(0,r.kt)("inlineCode",{parentName:"p"},"put")," permission for the ",(0,r.kt)("inlineCode",{parentName:"p"},"restaurant")," collection type."),(0,r.kt)("p",null,"We consider that the id of your restaurant is ",(0,r.kt)("inlineCode",{parentName:"p"},"2"),".\nand the id of your category is ",(0,r.kt)("inlineCode",{parentName:"p"},"2"),"."),(0,r.kt)(c,{title:"Example PUT request",mdxType:"Request"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'// this.http is the Angular HttpClient service.\nthis.http\n  .put("http://localhost:1337/api/restaurants/2", {\n    data: {\n      categories: [2],\n    },\n  })\n  .subscribe((response) => {\n    console.log(response);\n  });\n'))),(0,r.kt)(d,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 2,\n  "attributes": {\n    "name": "Dolemon Sushi",\n    "description": "Unmissable Japanese Sushi restaurant. The cheese and salmon makis are delicious",\n    "created_by": null,\n    "updated_by": null,\n    "created_at": "2020-08-04T10:21:30.219Z",\n    "updated_at": "2020-08-04T10:21:30.219Z",\n    "categories": [\n      {\n        "id": 2,\n        "name": "Brunch",\n        "created_by": 1,\n        "updated_by": 1,\n        "created_at": "2020-08-04T10:24:26.901Z",\n        "updated_at": "2020-08-04T10:24:26.911Z"\n      }\n    ]\n  }\n}\n'))))}h.isMDXComponent=!0}}]);