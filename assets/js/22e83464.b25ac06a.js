"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[7736],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),u=s(n),h=i,m=u["".concat(p,".").concat(h)]||u[h]||c[h]||l;return n?a.createElement(m,o(o({ref:t},d),{},{components:n})):a.createElement(m,o({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,o=new Array(l);o[0]=u;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r.mdxType="string"==typeof e?e:i,o[1]=r;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},27650:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>f,frontMatter:()=>l,metadata:()=>r,toc:()=>s});var a=n(83117),i=(n(67294),n(3905));const l={title:"Internationalization (i18n)",displayed_sidebar:"devDocsSidebar",toc_max_heading_level:4,description:"Instructions on how to use Strapi Content API with the Internationalization (i18n) optional plugin"},o="\ud83c\udf0d Internationalization (i18n) plugin",r={unversionedId:"dev-docs/plugins/i18n",id:"dev-docs/plugins/i18n",title:"Internationalization (i18n)",description:"Instructions on how to use Strapi Content API with the Internationalization (i18n) optional plugin",source:"@site/docs/dev-docs/plugins/i18n.md",sourceDirName:"dev-docs/plugins",slug:"/dev-docs/plugins/i18n",permalink:"/aberabook/dev-docs/plugins/i18n",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/plugins/i18n.md",tags:[],version:"current",frontMatter:{title:"Internationalization (i18n)",displayed_sidebar:"devDocsSidebar",toc_max_heading_level:4,description:"Instructions on how to use Strapi Content API with the Internationalization (i18n) optional plugin"},sidebar:"devDocsSidebar",previous:{title:"GraphQL",permalink:"/aberabook/dev-docs/plugins/graphql"},next:{title:"Sentry",permalink:"/aberabook/dev-docs/plugins/sentry"}},p={},s=[{value:"Installation",id:"installation",level:2},{value:"Configuration of the default locale",id:"configuration-of-the-default-locale",level:3},{value:"Usage with the REST API",id:"usage-with-the-rest-api",level:2},{value:"Getting localized entries with the <code>locale</code> parameter",id:"getting-localized-entries-with-the-locale-parameter",level:3},{value:"Creating a new localized entry",id:"creating-a-new-localized-entry",level:3},{value:"Creating a localization for an existing entry",id:"creating-a-localization-for-an-existing-entry",level:3},{value:"Creating a localization for a collection type",id:"creating-a-localization-for-a-collection-type",level:4},{value:"Creating a localization for a single type",id:"creating-a-localization-for-a-single-type",level:4},{value:"Updating an entry",id:"updating-an-entry",level:3},{value:"Usage with the GraphQL plugin",id:"usage-with-the-graphql-plugin",level:2},{value:"Getting localized entries with GraphQL",id:"getting-localized-entries-with-graphql",level:3},{value:"Fetching a collection type",id:"fetching-a-collection-type",level:4},{value:"Fetching a single type",id:"fetching-a-single-type",level:4},{value:"Creating new localized entries with GraphQL",id:"creating-new-localized-entries-with-graphql",level:3},{value:"Creating a new localization for a collection type",id:"creating-a-new-localization-for-a-collection-type",level:4},{value:"Creating a new localization for a single type",id:"creating-a-new-localization-for-a-single-type",level:4},{value:"Updating a localized single type with GraphQL",id:"updating-a-localized-single-type-with-graphql",level:3},{value:"Deleting a localization for a single type with GraphQL",id:"deleting-a-localization-for-a-single-type-with-graphql",level:3}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)},c=d("Tabs"),u=d("TabItem"),h=d("Request"),m=d("ApiCall"),g=d("Response"),k={toc:s};function f(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"-internationalization-i18n-plugin"},"\ud83c\udf0d Internationalization (i18n) plugin"),(0,i.kt)("p",null,'The Internationalization (i18n) plugin allows Strapi users to create, manage and distribute localized content in different languages, called "locales". For more information about the concept of internationalization, please refer to the\n',(0,i.kt)("a",{parentName:"p",href:"https://www.w3.org/International/questions/qa-i18n.en#i18n"},"W3C definition"),"."),(0,i.kt)("p",null,"The i18n plugin:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"allows admin panel users to create several localized versions of their content (see ",(0,i.kt)("a",{parentName:"li",href:"/user-docs/content-manager/translating-content"},"user guide"),")"),(0,i.kt)("li",{parentName:"ul"},"allows developers to build localized projects by fetching and consuming the right content depending on the country/language of the audience.")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The i18n plugin does not automatically translate the users' content nor adapt the admin interface to languages specificities (e.g. displaying the admin panel in Right To Left format).")),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("admonition",{type:"prerequisites"},(0,i.kt)("p",{parentName:"admonition"},"The Internationalization plugin is installed by default on all Strapi applications running on version 3.6.0 or higher. For lower versions, a migration is needed (see ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/update-version"},"Update Strapi version"),"), as well as a manual installation of the plugin.")),(0,i.kt)("p",null,"The plugin can be installed:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/user-docs/plugins/installing-plugins-via-marketplace"},"from the Marketplace"),","),(0,i.kt)("li",{parentName:"ul"},"or using the Terminal, by running one of the following commands:")),(0,i.kt)(c,{groupId:"yarn-npm",mdxType:"Tabs"},(0,i.kt)(u,{value:"yarn",label:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn strapi install i18n\n"))),(0,i.kt)(u,{value:"npm",label:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm run strapi install i18n\n")))),(0,i.kt)("h3",{id:"configuration-of-the-default-locale"},"Configuration of the default locale"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"STRAPI_PLUGIN_I18N_INIT_LOCALE_CODE")," ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/configurations/environment#strapi-s-environment-variables"},"environment variable")," can be configured to set the default locale for your environment. The value used for this variable should be an ISO country code (see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/strapi/strapi/blob/v4.0.0/packages/plugins/i18n/server/constants/iso-locales.json"},"full list of available locales"),")."),(0,i.kt)("p",null,"This is useful when a Strapi application is deployed in production, with the i18n plugin installed and enabled for your content types the first time. On a fresh i18n plugin installation, ",(0,i.kt)("inlineCode",{parentName:"p"},"en")," is set as default locale. If the database does not contain any locale, and no ",(0,i.kt)("inlineCode",{parentName:"p"},"STRAPI_PLUGIN_I18N_INIT_LOCALE_CODE")," is set for the environment, all entities of the content types, which have localization enabled, will be automatically migrated to the ",(0,i.kt)("inlineCode",{parentName:"p"},"en")," locale."),(0,i.kt)("h2",{id:"usage-with-the-rest-api"},"Usage with the REST API"),(0,i.kt)("p",null,"The i18n plugin adds new features to the ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/api/rest"},"REST API"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a new ",(0,i.kt)("a",{parentName:"li",href:"#getting-localized-entries-with-the-locale-parameter"},(0,i.kt)("inlineCode",{parentName:"a"},"locale"))," parameter to fetch content only for a specified locale"),(0,i.kt)("li",{parentName:"ul"},"the ability to create a localized entry, either ",(0,i.kt)("a",{parentName:"li",href:"#creating-a-new-localized-entry"},"from scratch")," or ",(0,i.kt)("a",{parentName:"li",href:"#creating-a-localization-for-an-existing-entry"},"for an existing localized entry"))),(0,i.kt)("h3",{id:"getting-localized-entries-with-the-locale-parameter"},"Getting localized entries with the ",(0,i.kt)("inlineCode",{parentName:"h3"},"locale")," parameter"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/api/rest/filters-locale-publication"},"API parameter")," can be used to fetch entries only for a specified locale. It takes a locale code as value (see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/strapi/strapi/blob/v4.0.0/packages/plugins/i18n/server/constants/iso-locales.json"},"full list of available locales"),")."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"To fetch content for a locale, make sure it has been already ",(0,i.kt)("a",{parentName:"p",href:"/user-docs/settings/internationalization"},"added to Strapi in the admin panel"),".")),(0,i.kt)("p",null,"The format for a GET request is the following:"),(0,i.kt)(h,{mdxType:"Request"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GET /api/{content-type}?locale={locale-code}"))),(0,i.kt)("p",null,"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"all")," as a value for the locale code, as in ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:1337/api/restaurants?locale=all"),", to fetch entries for all locales that have been configured in the admin panel."),(0,i.kt)("p",null,"If the ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," parameter isn't defined, it will be set to the default locale. ",(0,i.kt)("inlineCode",{parentName:"p"},"en")," is the default locale when the i18n plugin is installed, so by default a GET request to ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:1337/api/restaurants")," will return the same response as a request to ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:1337/api/restaurants?locale=en"),"."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Another locale can be ",(0,i.kt)("a",{parentName:"p",href:"/user-docs/settings/internationalization"},"set as the default locale")," in the admin panel.")),(0,i.kt)("p",null,"When the i18n plugin is installed, the response to requests can include fields that are specific to internationalization:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," (string) field is always included, it's the locale code for the content entry.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"localizations")," (object) can be included if specifically requested by appending ",(0,i.kt)("inlineCode",{parentName:"p"},"?populate=localizations")," to the URL (see ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/api/rest/populate-select#population"},"relations population documentation"),". It includes a ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," array with a list of objects, each of them including the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"attributes")," of the localization."))),(0,i.kt)(m,{mdxType:"ApiCall"},(0,i.kt)(h,{mdxType:"Request"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GET http://localhost:1337/api/restaurants?locale=fr"))),(0,i.kt)(g,{mdxType:"Response"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "id": 4,\n      "attributes": {\n        "name": "Can Alegria",\n        "description": "description in French",\n        "locale": "fr",\n        "createdAt": "2021-10-28T15:24:42.129Z",\n        "publishedAt": "2021-10-28T15:24:42.129Z"\n      }\n    },\n    {\n      "id": 8,\n      "attributes": {\n        "name": "She\'s Cake",\n        "description": "description in French",\n        "locale": "fr",\n        "createdAt": "2021-10-28T16:17:42.129Z",\n        "publishedAt": "2021-10-28T16:18:24.126Z"\n      }\n    }\n  ],\n  "meta": {\n    "pagination": {\n      "page": 1,\n      "pageSize": 25,\n      "pageCount": 2,\n      "total": 2\n    }\n  }\n}\n')))),(0,i.kt)("p",null,"In the example response above:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"restaurant with ",(0,i.kt)("inlineCode",{parentName:"li"},'"id": 4')," is a French (",(0,i.kt)("inlineCode",{parentName:"li"},'"locale": "fr"'),") localization of the existing restaurant with ",(0,i.kt)("inlineCode",{parentName:"li"},'"id": 3')," (created for the default ",(0,i.kt)("inlineCode",{parentName:"li"},"en")," locale)."),(0,i.kt)("li",{parentName:"ul"},"restaurant with ",(0,i.kt)("inlineCode",{parentName:"li"},'"id": "8"')," was created from scratch using the API, passing the ",(0,i.kt)("inlineCode",{parentName:"li"},"locale: fr")," in the request body (see ",(0,i.kt)("a",{parentName:"li",href:"#creating-a-new-localized-entry"},"creating a new localized entry"),").")),(0,i.kt)("h3",{id:"creating-a-new-localized-entry"},"Creating a new localized entry"),(0,i.kt)("p",null,"To create a localized entry from scratch, send a POST request to the Content API."),(0,i.kt)("p",null,"If no locale has been passed in the request body, the entry is created using the default locale for the application:"),(0,i.kt)(m,{mdxType:"ApiCall"},(0,i.kt)(h,{mdxType:"Request"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"POST http://localhost:1337/api/restaurants")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "name": "Oplato",\n    "description": "description in English"\n  }\n}\n'))),(0,i.kt)(g,{mdxType:"Response"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "id": 3,\n    "attributes": {\n      "name": "Oplato",\n      "description": "description in English",\n      "createdAt": "2021-10-28T16:57:26.352Z",\n      "updatedAt": "2021-10-28T16:57:26.352Z",\n      "publishedAt": "2021-10-28T16:57:26.345Z",\n      "locale": "en"\n    }\n  },\n  "meta": {}\n}\n')))),(0,i.kt)("p",null,"To create a localized entry for a locale different from the default one, add the ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," attribute to the body of the POST request:"),(0,i.kt)(m,{mdxType:"ApiCall"},(0,i.kt)(h,{mdxType:"Request"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"POST http://localhost:1337/api/restaurants")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "name": "She\'s Cake",\n    "description": "description in French",\n    "locale": "fr"\n  }\n}\n'))),(0,i.kt)(g,{mdxType:"Response"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "id": 8,\n    "attributes": {\n      "name": "She\'s Cake",\n      "description": "description in French",\n      "createdAt": "2021-10-28T17:01:47.089Z",\n      "updatedAt": "2021-10-28T17:01:47.089Z",\n      "publishedAt": "2021-10-28T17:01:47.082Z",\n      "locale": "fr"\n    }\n  },\n  "meta": {}\n}\n')))),(0,i.kt)("h3",{id:"creating-a-localization-for-an-existing-entry"},"Creating a localization for an existing entry"),(0,i.kt)("p",null,"To create another localization for an existing localized entry, send a POST request to the appropriate URL depending on the type of content:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Content-Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Request URL format"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Collection type"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"POST /api/{content-type}/:id/localizations"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Single type"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"POST /api/{content-type}/localizations"))))),(0,i.kt)("p",null,"When creating a localization for existing localized entries, the body of the POST request can only accept localized fields."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"The Content-Type should have the ",(0,i.kt)("a",{parentName:"p",href:"/user-docs/users-roles-permissions/configuring-administrator-roles#collection-and-single-types"},(0,i.kt)("inlineCode",{parentName:"a"},"createLocalization")," permission")," enabled, otherwise the POST request will return a ",(0,i.kt)("inlineCode",{parentName:"p"},"403: Forbidden")," status.")),(0,i.kt)("h4",{id:"creating-a-localization-for-a-collection-type"},"Creating a localization for a collection type"),(0,i.kt)("p",null,"When sending a POST request to a collection type, Strapi will:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"use the ",(0,i.kt)("inlineCode",{parentName:"li"},"id")," as a base entry for the non-localized fields and copy them in the new entry"),(0,i.kt)("li",{parentName:"ol"},"then create a new entry for the given locale and link it with the base entry.")),(0,i.kt)(m,{noSideBySide:!0,mdxType:"ApiCall"},(0,i.kt)(h,{mdxType:"Request"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"POST http://localhost:1337/api/restaurants/8/localizations")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "locale": "en",\n  "name": "She\'s Cake",\n  "description": "description in English"\n}\n'))),(0,i.kt)("p",null,"This request:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"creates a new entry in ",(0,i.kt)("inlineCode",{parentName:"li"},"en")),(0,i.kt)("li",{parentName:"ol"},"links the created entry with ",(0,i.kt)("inlineCode",{parentName:"li"},"restaurant:8")," (they will share the same ",(0,i.kt)("inlineCode",{parentName:"li"},"localizations")," object)"),(0,i.kt)("li",{parentName:"ol"},"copies every non-localized fields from ",(0,i.kt)("inlineCode",{parentName:"li"},"restaurant:8")," into the new entry and keeps the localized fields from the request's body")),(0,i.kt)(g,{mdxType:"Response"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 9,\n  "name": "She\'s Cake",\n  "description": "description in English",\n  "createdAt": "2021-10-29T08:39:29.709Z",\n  "updatedAt": "2021-10-29T08:39:29.709Z",\n  "publishedAt": null,\n  "locale": "en",\n  "localizations": [\n    {\n      "id": 8,\n      "name": "She\'s Cake",\n      "description": "description in French",\n      "createdAt": "2021-10-28T16:57:26.352Z",\n      "updatedAt": "2021-10-29T08:38:04.106Z",\n      "publishedAt": "2021-10-28T16:57:26.345Z",\n      "locale": "fr"\n    }\n  ]\n}\n')))),(0,i.kt)("h4",{id:"creating-a-localization-for-a-single-type"},"Creating a localization for a single type"),(0,i.kt)(m,{mdxType:"ApiCall"},(0,i.kt)(h,{mdxType:"Request"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"POST http://localhost:1337/api/homepage/localizations")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "Bienvenue sur FoodAdvisor !",\n  "locale": "fr"\n}\n'))),(0,i.kt)(g,{mdxType:"Response"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 2,\n  "title": "Bienvenue sur FoodAdvisor!",\n  "locale": "fr",\n  // ...\n  "localizations": [\n    {\n      "id": 1,\n      "locale": "en"\n      // ...\n    }\n  ]\n}\n')))),(0,i.kt)("h3",{id:"updating-an-entry"},"Updating an entry"),(0,i.kt)("p",null,"To update an existing localized entry, send a ",(0,i.kt)("inlineCode",{parentName:"p"},"PUT")," request to the appropriate URL depending on the type of content:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Content-Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Request URL format"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Collection type"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"PUT /api/{localized-content-type}/:id"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Single type"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"PUT /api/{localized-content-type}/?locale={locale}"))))),(0,i.kt)("p",null,"When updating a localization for existing localized entries, the body of the ",(0,i.kt)("inlineCode",{parentName:"p"},"PUT")," request can only accept localized fields."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"It is not possible to change the locale of an existing localized entry. When updating a localized entry, if you set a ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," attribute in the request body it will be ignored.")),(0,i.kt)("h2",{id:"usage-with-the-graphql-plugin"},"Usage with the GraphQL plugin"),(0,i.kt)("p",null,"The i18n plugin adds new features to the ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/plugins/graphql"},"GraphQL plugin"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"locale")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"localizations")," fields are added to the ",(0,i.kt)("a",{parentName:"li",href:"https://graphql.org/"},"GraphQL")," schema."),(0,i.kt)("li",{parentName:"ul"},"The GraphQL ",(0,i.kt)("a",{parentName:"li",href:"/dev-docs/api/graphql"},"query API")," can be used to:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/dev-docs/plugins/i18n#usage-with-the-graphql-plugin"},"query with the ",(0,i.kt)("inlineCode",{parentName:"a"},"locale")," argument")," on collection types and single types"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/dev-docs/plugins/i18n#creating-new-localized-entries-with-graphql"},"create new localizations with a mutation")," for collection types and single types"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/dev-docs/plugins/i18n#updating-a-localized-single-type-with-graphql"},"update")," and ",(0,i.kt)("a",{parentName:"li",href:"/dev-docs/plugins/i18n#deleting-a-localization-for-a-single-type-with-graphql"},"delete")," a localization with a mutation on single types")))),(0,i.kt)("h3",{id:"getting-localized-entries-with-graphql"},"Getting localized entries with GraphQL"),(0,i.kt)("p",null,"Queries can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," argument to fetch entries only for a specified locale."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"To fetch entries for all locales, use ",(0,i.kt)("inlineCode",{parentName:"p"},'locale: "all"')," in the query.")),(0,i.kt)("h4",{id:"fetching-a-collection-type"},"Fetching a collection type"),(0,i.kt)(m,{mdxType:"ApiCall"},(0,i.kt)(h,{mdxType:"Request"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},'query {\n  restaurants(locale: "en") {\n    data {\n      id\n      attributes {\n        name\n        locale\n        localizations {\n          data {\n            id\n            attributes {\n              name\n              description\n            }\n          }\n        }\n      }\n    }\n  }\n}\n'))),(0,i.kt)(g,{mdxType:"Response"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "restaurants": {\n      "data": [\n        {\n          "id": "1",\n          "attributes": {\n            "name": "can alegria",\n            "locale": "en",\n            "localizations": {\n              "data": [\n                {\n                  "id": "2",\n                  "attributes": {\n                    "name": "can alegria (fr)",\n                    "description": "description en fran\xe7ais"\n                  }\n                }\n              ]\n            }\n          }\n        },\n        {\n          "id": "2",\n          ...\n        },\n        ...\n      ]\n    }\n  }\n}\n')))),(0,i.kt)("h4",{id:"fetching-a-single-type"},"Fetching a single type"),(0,i.kt)(m,{mdxType:"ApiCall"},(0,i.kt)(h,{title:"Example query",mdxType:"Request"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},'query {\n  homepage(locale: "en") {\n    data {\n      id\n      attributes {\n        title\n      }\n    }\n  }\n}\n'))),(0,i.kt)(g,{title:"Example response",mdxType:"Response"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "homepage": {\n      "data": {\n        "id": "1",\n        "attributes": {\n          "title": "Welcome on FoodAdvisor!"\n        }\n      }\n    }\n  }\n}\n')))),(0,i.kt)("h3",{id:"creating-new-localized-entries-with-graphql"},"Creating new localized entries with GraphQL"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," field can be passed in the ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," object of the mutation to create a localized entry for this specific locale (for more information, see ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/api/graphql#create-a-new-entry"},"create a new entry with the GraphQL plugin"),")."),(0,i.kt)("h4",{id:"creating-a-new-localization-for-a-collection-type"},"Creating a new localization for a collection type"),(0,i.kt)(m,{noSideBySide:!0,mdxType:"ApiCall"},(0,i.kt)(h,{title:"Example mutation",mdxType:"Request"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},'mutation {\n  createRestaurantLocalization(\n    id: 8\n    locale: "en"\n    data: { name: "She\'s Cake", description: "description in english" }\n  ) {\n    data {\n      id\n      attributes {\n        name\n        description\n        locale\n        localizations {\n          data {\n            attributes {\n              locale\n              description\n            }\n          }\n        }\n      }\n    }\n  }\n}\n'))),(0,i.kt)(g,{mdxType:"Response"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "createRestaurantLocalization": {\n      "id": "9",\n      "locale": "en",\n      "name": "She\'s Cake",\n      "description": "description in English",\n      "localizations": [\n        {\n          "id": "8",\n          "locale": "fr",\n          "description": "description in French"\n        }\n      ]\n    }\n  }\n}\n{\n  "data": {\n    "createRestaurantLocalization": {\n      "data": {\n        "id": "6",\n        "attributes": {\n          "name": "She\'s Cake",\n          "description": "description in English",\n          "locale": "fr",\n          "localizations": {\n            "data": [\n              {\n                "attributes": {\n                  "locale": "en",\n                  "description": "description in English"\n                }\n              },\n              {\n                "attributes": {\n                  "locale": "fr",\n                  "description": "description in French"\n                }\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n\n')))),(0,i.kt)("h4",{id:"creating-a-new-localization-for-a-single-type"},"Creating a new localization for a single type"),(0,i.kt)(m,{noSideBySide:!0,mdxType:"ApiCall"},(0,i.kt)(h,{title:"Example mutation",mdxType:"Request"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},'mutation {\n  createHomepageLocalization(locale: "fr", data: { title: "Bienvenue sur FoodAdvisor !" }) {\n    data {\n      id\n      attributes {\n        locale\n        title\n      }\n    }\n  }\n}\n'))),(0,i.kt)(g,{mdxType:"Response"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "createHomepageLocalization": {\n      "data": {\n        "id": "2",\n        "attributes": {\n          "locale": "fr",\n          "title": "Bienvenue sur FoodAdvisor !"\n        }\n      }\n    }\n  }\n}\n')))),(0,i.kt)("h3",{id:"updating-a-localized-single-type-with-graphql"},"Updating a localized single type with GraphQL"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," argument can be passed in the mutation to update content for a given locale (for more information, see ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/api/graphql#update-an-existing-entry"},"update an existing entry with the GraphQL plugin"),")."),(0,i.kt)("p",null,"Currently, it is not possible to change the locale of an existing localized entry. If you set a ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," field in the ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," object of the mutation, it will be ignored."),(0,i.kt)(m,{mdxType:"ApiCall"},(0,i.kt)(h,{title:"Example mutation",mdxType:"Request"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},'mutation {\n  updateHomepage(locale: "fr", data: { title: "Bienvenue sur l\'annuaire FoodAdvisor !" }) {\n    data {\n      id\n      attributes {\n        title\n      }\n    }\n  }\n}\n'))),(0,i.kt)(g,{mdxType:"Response"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "updateHomepage": {\n      "data": {\n        "id": "1",\n        "attributes": {\n          "title": "Bienvenue sur l\'annuaire FoodAdvisor !"\n        }\n      }\n    }\n  }\n}\n')))),(0,i.kt)("h3",{id:"deleting-a-localization-for-a-single-type-with-graphql"},"Deleting a localization for a single type with GraphQL"),(0,i.kt)("p",null,"Pass the ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," argument in the mutation to delete a specific localization for a single type:"),(0,i.kt)(m,{noSideBySide:!0,mdxType:"ApiCall"},(0,i.kt)(h,{title:"Example mutation",mdxType:"Request"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},'mutation {\n  deleteHomepage(locale: "fr") {\n    data {\n      id\n      attributes {\n        title\n      }\n    }\n  }\n}\n'))),(0,i.kt)(g,{mdxType:"Response"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "deleteHomepage": {\n      "data": {\n        "id": "1",\n        "attributes": {\n          "title": "Bienvenue sur l\'annuaire FoodAdvisor !"\n        }\n      }\n    }\n  }\n}\n'))),(0,i.kt)("p",null,"The response returns the entry that has just been deleted.")))}f.isMDXComponent=!0}}]);