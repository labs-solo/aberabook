"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[2295,2642],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=s(a),c=o,h=m["".concat(p,".").concat(c)]||m[c]||u[c]||r;return a?n.createElement(h,i(i({ref:t},d),{},{components:a})):n.createElement(h,i({ref:t},d))}));function c(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},18469:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var n=a(83117),o=(a(67294),a(3905)),r=a(14188);const i={title:"DigitalOcean Droplet Deployment",displayed_sidebar:"devDocsSidebar",description:"Learn in this guide how to deploy your Strapi application on DigitalOcean Droplets."},l="DigitalOcean Droplets",p={unversionedId:"dev-docs/deployment/digitalocean",id:"dev-docs/deployment/digitalocean",title:"DigitalOcean Droplet Deployment",description:"Learn in this guide how to deploy your Strapi application on DigitalOcean Droplets.",source:"@site/docs/dev-docs/deployment/digitalocean.md",sourceDirName:"dev-docs/deployment",slug:"/dev-docs/deployment/digitalocean",permalink:"/aberabook/dev-docs/deployment/digitalocean",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/deployment/digitalocean.md",tags:[],version:"current",frontMatter:{title:"DigitalOcean Droplet Deployment",displayed_sidebar:"devDocsSidebar",description:"Learn in this guide how to deploy your Strapi application on DigitalOcean Droplets."},sidebar:"devDocsSidebar",previous:{title:"DigitalOcean App Platform",permalink:"/aberabook/dev-docs/deployment/digitalocean-app-platform"},next:{title:"Heroku",permalink:"/aberabook/dev-docs/deployment/heroku"}},s={},d=[{value:"Create a &quot;Droplet&quot;",id:"create-a-droplet",level:3},{value:"Setup production server and install Node.js",id:"setup-production-server-and-install-nodejs",level:3},{value:"Setting up a production server",id:"setting-up-a-production-server",level:4},{value:"Installing and configuring Node.js and npm",id:"installing-and-configuring-nodejs-and-npm",level:4},{value:"Install and configure Git versioning on your server",id:"install-and-configure-git-versioning-on-your-server",level:3},{value:"Install the database for your project",id:"install-the-database-for-your-project",level:3},{value:"Configure for local development",id:"configure-for-local-development",level:3},{value:"Deploy from GitHub",id:"deploy-from-github",level:3},{value:"Install and configure Nginx web server",id:"install-and-configure-nginx-web-server",level:3},{value:"Install and configure pm2",id:"install-and-configure-pm2",level:3},{value:"Configure the <code>ecosystem.config.js</code> and <code>.env</code> files",id:"configure-the-ecosystemconfigjs-and-env-files",level:3},{value:"Configure <code>.env</code> to launch Strapi on system startup",id:"configure-env-to-launch-strapi-on-system-startup",level:4},{value:"Set up a webhook on DigitalOcean/GitHub",id:"set-up-a-webhook-on-digitaloceangithub",level:3},{value:"Further steps to take",id:"further-steps-to-take",level:3}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},m=u("Tabs"),c=u("TabItem"),h={toc:d};function g(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"digitalocean-droplets"},"DigitalOcean Droplets"),(0,o.kt)("p",null,"This is a step-by-step guide for deploying a Strapi project to a ",(0,o.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/docs/droplets/"},"DigitalOcean Droplet"),". Alternatively, you can also choose to deploy to DigitalOcean's Platform-as-a-Service (PaaS) called ",(0,o.kt)("a",{parentName:"p",href:"/dev-docs/deployment/digitalocean-app-platform"},"App Platform")," if database-related requirements and budget better fit with your use case."),(0,o.kt)("p",null,"This guide covers hosting the database on a DigitalOcean Droplet. Another option is to host the database externally as a service using ",(0,o.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/products/managed-databases/"},"DigitalOcean Managed Databases"),"."),(0,o.kt)("admonition",{type:"prerequisites"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"You have created a ",(0,o.kt)("a",{parentName:"li",href:"https://tute.io/install-configure-strapi-postgresql"},"Strapi project with a local PostgreSQL database"),"."),(0,o.kt)("li",{parentName:"ul"},"You have read through the ",(0,o.kt)("a",{parentName:"li",href:"/dev-docs/deployment#application-configuration"},"general deployment configuration")," section."),(0,o.kt)("li",{parentName:"ul"},"You have created a DigitalOcean account. You can use ",(0,o.kt)("a",{parentName:"li",href:"https://try.digitalocean.com/strapi/"},"this referral link"),"."))),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"When creating your Strapi project, don't use the ",(0,o.kt)("inlineCode",{parentName:"p"},"--quickstart")," flag as the quick start installation uses SQLite, which is not desired for remote hosting.")),(0,o.kt)(r.default,{mdxType:"ConsiderStrapiCloud"}),(0,o.kt)("h3",{id:"create-a-droplet"},'Create a "Droplet"'),(0,o.kt)("p",null,"DigitalOcean calls a virtual private server, a ",(0,o.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/docs/droplets/"},"Droplet"),". Create a new Droplet to host your Strapi project:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Log in to your ",(0,o.kt)("a",{parentName:"li",href:"https://cloud.digitalocean.com/login"},"DigitalOcean account"),"."),(0,o.kt)("li",{parentName:"ol"},"Select the ",(0,o.kt)("em",{parentName:"li"},"Create")," dropdown near the top right, then select ",(0,o.kt)("strong",{parentName:"li"},"Droplets"),"."),(0,o.kt)("li",{parentName:"ol"},"Choose a ",(0,o.kt)("em",{parentName:"li"},"Region")," and ",(0,o.kt)("em",{parentName:"li"},"Datacenter")," closest to your users' location."),(0,o.kt)("li",{parentName:"ol"},"Select Ubuntu ",(0,o.kt)("strong",{parentName:"li"},"22.04 (LTS) x64")," as the image from the ",(0,o.kt)("em",{parentName:"li"},"OS")," tab."),(0,o.kt)("li",{parentName:"ol"},"Choose an appropriate droplet size and pricing plan, depending on your needs. Strapi ",(0,o.kt)("a",{parentName:"li",href:"/dev-docs/deployment#hardware-and-software-requirements"},"requires")," at least 2GB of RAM to build and deploy the admin interface."),(0,o.kt)("li",{parentName:"ol"},"Choose ",(0,o.kt)("strong",{parentName:"li"},"SSH Key"),"."),(0,o.kt)("li",{parentName:"ol"},"In a terminal instance on your computer, run the following command: ",(0,o.kt)("inlineCode",{parentName:"li"},"pbcopy < ~/.ssh/id_rsa.pub"),". The command copies the existing SSH public key on your development computer to the clipboard."),(0,o.kt)("li",{parentName:"ol"},"Back on the DigitalOcean website, paste your public SSH key into the ",(0,o.kt)("em",{parentName:"li"},"New SSH Key")," field. Name this SSH key and click on ",(0,o.kt)("strong",{parentName:"li"},"Save"),". "),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"(optional)")," Select additional options as required, for example ",(0,o.kt)("strong",{parentName:"li"},"IPv6"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"(optional)")," Choose a ",(0,o.kt)("em",{parentName:"li"},"Hostname")," or leave as-is."),(0,o.kt)("li",{parentName:"ol"},"Click the ",(0,o.kt)("strong",{parentName:"li"},"Create Droplet")," button at the bottom right.")),(0,o.kt)("p",null,"DigitalOcean will create your Droplet and indicate the progress with a loading bar. Once complete, proceed to setting up a production server and installing Node.js."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Additional instructions on creating and using SSH Keys can be found ",(0,o.kt)("a",{parentName:"p",href:"https://docs.digitalocean.com/products/droplets/how-to/add-ssh-keys/create-with-openssh/"},"on the official DigitalOcean documentation"),".")),(0,o.kt)("h3",{id:"setup-production-server-and-install-nodejs"},"Setup production server and install Node.js"),(0,o.kt)("p",null,"The following next steps will help you to set up a production server and a non-root user for managing the server."),(0,o.kt)("h4",{id:"setting-up-a-production-server"},"Setting up a production server"),(0,o.kt)("p",null,"Follow the official DigitalOcean documentation for initial ",(0,o.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-22-04"},"server set-up")," using Ubuntu 22.04."),(0,o.kt)("h4",{id:"installing-and-configuring-nodejs-and-npm"},"Installing and configuring Node.js and npm"),(0,o.kt)("p",null,"Now the server has been set up, install Node using a personal package archive (PPA), as described in the ",(0,o.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-22-04#option-2-installing-node-js-with-apt-using-a-nodesource-ppa"},"official DigitalOcean documentation"),"."),(0,o.kt)("p",null,"After installing Node (which also installs ",(0,o.kt)("inlineCode",{parentName:"p"},"npm")," by default), you will manually change ",(0,o.kt)("inlineCode",{parentName:"p"},"npm"),"'s default directory. The following steps are based on ",(0,o.kt)("a",{parentName:"p",href:"https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally"},"how to resolve access permissions")," from the official Node documentation:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a ",(0,o.kt)("inlineCode",{parentName:"li"},".npm-global")," directory and set the path to this directory for ",(0,o.kt)("inlineCode",{parentName:"li"},"node_modules")," by running the following commands:",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir ~/.npm-global\nnpm config set prefix '~/.npm-global'\n"))),(0,o.kt)("li",{parentName:"ol"},"Create (or modify) a ",(0,o.kt)("inlineCode",{parentName:"li"},"~/.profile")," file by running the following command:",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano ~/.profile\n"))),(0,o.kt)("li",{parentName:"ol"},"Paste the following lines into the first 2 lines of the open ",(0,o.kt)("inlineCode",{parentName:"li"},"~/.profile")," file:",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# set PATH so global node modules install without permission issues\nexport PATH=~/.npm-global/bin:$PATH\n")),"Then press ",(0,o.kt)("inlineCode",{parentName:"li"},"Ctrl+X")," to exit, ",(0,o.kt)("inlineCode",{parentName:"li"},"y")," to save and ",(0,o.kt)("inlineCode",{parentName:"li"},"Enter")," to accept."),(0,o.kt)("li",{parentName:"ol"},"Update your system variables by running the following command:",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"source ~/.profile\n")))),(0,o.kt)("p",null,"You are now ready to install and configure Git versioning on your server."),(0,o.kt)("h3",{id:"install-and-configure-git-versioning-on-your-server"},"Install and configure Git versioning on your server"),(0,o.kt)("p",null,"A convenient way to maintain your Strapi application and update it during and after initial development is to use ",(0,o.kt)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control"},"Git"),". In order to use Git, you will need to have it installed on your Droplet."),(0,o.kt)("p",null,"Droplets should have Git installed by default. Check if Git is installed by running the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git --version\n")),(0,o.kt)("p",null,"If the terminal returns ",(0,o.kt)("inlineCode",{parentName:"p"},"git version")," followed by some version number (e.g., ",(0,o.kt)("inlineCode",{parentName:"p"},"git version 2.x.x"),"), Git is already installed, and you can proceed to ",(0,o.kt)("a",{parentName:"p",href:"#install-the-database-for-your-project"},"installing the database for your project"),"."),(0,o.kt)("p",null,"If Git is not installed:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install Git by following the DigitalOcean documentation on ",(0,o.kt)("a",{parentName:"li",href:"https://www.digitalocean.com/community/tutorials/how-to-install-git-on-ubuntu-22-04"},"how to install Git on Ubuntu 22.04"),"."),(0,o.kt)("li",{parentName:"ol"},"Configure Git by setting up the username and email as described in the ",(0,o.kt)("a",{parentName:"li",href:"https://www.digitalocean.com/community/tutorials/how-to-install-git-on-ubuntu-22-04#setting-up-git"},"DigitalOcean documentation"),".")),(0,o.kt)("h3",{id:"install-the-database-for-your-project"},"Install the database for your project"),(0,o.kt)("p",null,"Install PostgreSQL on Ubuntu 22.04 by following the ",(0,o.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-22-04"},"DigitalOcean documentation"),' through to "Step 4 - Creating a New Database". Once done, PostgreSQL is installed and a user and a database are created.'),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"To connect to a PostgreSQL database with Strapi, the database:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"either needs to have a password,"),(0,o.kt)("li",{parentName:"ul"},"or specifically states there is no password by declaring an empty string (",(0,o.kt)("inlineCode",{parentName:"li"},"''"),") as the password."))),(0,o.kt)("p",null,"To connect to the PostgreSQL database with Strapi: "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"(optional)")," If you have switched away from the ",(0,o.kt)("inlineCode",{parentName:"p"},"postgres@")," user, run the following:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'sudo -u postgres psql\n[sudo] password for your-name: # this auth prompt appears\npsql (14.8 (Ubuntu 14.8-0ubuntu0.22.04.1)) # shell response after password\nType "help" for help.\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run the following commands to alter the user you created and add a password, replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"your-name")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"'your-password'")," by your own values:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"psql\n# Enter SQL command below including quotation marks and semicolon.\npostgres=# ALTER USER your-name PASSWORD 'your-password';\nALTER ROLE # shell response after SQL command\n# Then quit with the \\q command as we don't want to alter role.\npostgres=# \\q\nexit\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"(optional)")," The ",(0,o.kt)("inlineCode",{parentName:"p"},"pg")," package is automatically installed locally if you chose ",(0,o.kt)("inlineCode",{parentName:"p"},"PostgreSQL")," as the initial database choice when you first set up Strapi. If your Strapi project uses SQLite, install the ",(0,o.kt)("inlineCode",{parentName:"p"},"pg")," dependency package. On your development machine, run the following command in your Strapi project folder:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install pg --save\n")))),(0,o.kt)("p",null,"Note the database name, username and password for later use."),(0,o.kt)("h3",{id:"configure-for-local-development"},"Configure for local development"),(0,o.kt)("admonition",{type:"prerequisites"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"You must have ",(0,o.kt)("inlineCode",{parentName:"li"},"git")," ",(0,o.kt)("a",{parentName:"li",href:"https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup"},"installed and set-up locally"),"."),(0,o.kt)("li",{parentName:"ul"},"Git should be ",(0,o.kt)("a",{parentName:"li",href:"https://git-scm.com/docs/git-init"},"initialized")," for your previously created Strapi project."))),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Replace the content of the ",(0,o.kt)("inlineCode",{parentName:"p"},"config/database.js")," with the following:"),(0,o.kt)(m,{groupId:"js-ts",mdxType:"Tabs"},(0,o.kt)(c,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="path: ./config/database.js"',title:'"path:','./config/database.js"':!0},"\nmodule.exports = ({ env }) => ({\n  connection: {\n    client: 'postgres', \n  connection: {\n        host: env('DATABASE_HOST', '127.0.0.1'),\n        port: env.int('DATABASE_PORT', 5432),\n        database: env('DATABASE_NAME', 'strapidb'),\n        user: env('DATABASE_USERNAME', ''),\n        password: env('DATABASE_PASSWORD', ''),\n        ssl: env.bool(\"DATABASE_SSL\", false) && {\n          rejectUnauthorized:env.bool('DATABASE_SSL_SELF', false),\n      },\n      },\n      debug: false,\n  },\n});\n"))),(0,o.kt)(c,{value:"typescript",label:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="path: ./config/database.ts"',title:'"path:','./config/database.ts"':!0},"\nexport default ({ env }) => ({\n  connection: {\n    client: 'postgres', \n  connection: {\n        host: env('DATABASE_HOST', '127.0.0.1'),\n        port: env.int('DATABASE_PORT', 5432),\n        database: env('DATABASE_NAME', 'strapidb'),\n        user: env('DATABASE_USERNAME', ''),\n        password: env('DATABASE_PASSWORD', ''),\n        ssl: env.bool(\"DATABASE_SSL\", false) && {\n          rejectUnauthorized:env.bool('DATABASE_SSL_SELF', false),\n      },\n      },\n      debug: false,\n  },\n});\n"))))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Push these changes to Github by running the following commands:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'git add .\ngit commit -m "Configured production/database.json"\ngit push\n')))),(0,o.kt)("h3",{id:"deploy-from-github"},"Deploy from GitHub"),(0,o.kt)("p",null,"You will now deploy your Strapi project to your Droplet by cloning it from GitHub."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"From your terminal, logged in as the non-root user to your Droplet, run the following commands, replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"your-handle")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"your-project")," with your GitHub username and project's name:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~\ngit clone https://github.com/your-handle/your-project.git\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"(",(0,o.kt)("em",{parentName:"p"},"optional"),") If using password-based authentication instead of a SSH key:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"You will be prompted to enter ",(0,o.kt)("inlineCode",{parentName:"p"},"your-handle")," and a password when attempting to clone. This is actually a ",(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens"},"personal access token")," (PAT) as passwords have been ",(0,o.kt)("a",{parentName:"p",href:"https://github.blog/changelog/2021-08-12-git-password-authentication-is-shutting-down"},"deprecated"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In order to overcome an ",(0,o.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/22147574/github-fatal-could-not-read-username-for-https-github-com-no-such-file-o"},"issue")," with webhooks later on, run the following commands, replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"your-handle"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"your-pat"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"your-project")," with the appropriate values:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'cd ~/your-project\ngit remote add origin https://your-handle:your-pat@github.com/your-handle/your-project.git\n\n# If response is "fatal: remote origin already exists.", then run:\ngit remote set-url origin https://your-handle:your-pat@github.com/your-handle/your-project.git\n'))))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Navigate to your project's folder, which is the root folder for Strapi, and install the npm packages for your project by running the following commands, replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"your-project")," by your project's name on GitHub:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd your-project\nnpm install\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Build Strapi's admin panel by running the following command:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"NODE_ENV=production npm run build\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"As Strapi uses port 1337 by default, you must configure your ",(0,o.kt)("inlineCode",{parentName:"p"},"ufw")," firewall to allow access to this port for testing and installation purposes, by running the following commands:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~\nsudo ufw allow 1337/tcp\nsudo ufw enable\n")),(0,o.kt)("p",{parentName:"li"},"Press ",(0,o.kt)("inlineCode",{parentName:"p"},"y")," to answer yes to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Command may disrupt existing ssh connections. Proceed with operation (y|n)?")," message. "))),(0,o.kt)("p",null,"Your Strapi project is now installed on your DigitalOcean Droplet. Before being able to create your first user, you must install and configure ",(0,o.kt)("a",{parentName:"p",href:"#install-and-configure-nginx-web-server"},"Nginx")," and ",(0,o.kt)("a",{parentName:"p",href:"#install-and-configure-pm2"},"pm2"),", configure the ",(0,o.kt)("a",{parentName:"p",href:"#configure-the-ecosystemconfigjs-and-env-files"},(0,o.kt)("inlineCode",{parentName:"a"},"ecosystem.config.js")," file and environment variables"),", and ",(0,o.kt)("a",{parentName:"p",href:"#set-up-a-webhook-on-digitalocean--github"},"setup webhooks"),"."),(0,o.kt)("h3",{id:"install-and-configure-nginx-web-server"},"Install and configure Nginx web server"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Follow the guide on the ",(0,o.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-22-04"},"official DigitalOcean documentation")," to install and configure Nginx, keeping in mind the following specificities:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"You can add a domain name or use a subdomain name for your Strapi project.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"References to ",(0,o.kt)("inlineCode",{parentName:"p"},"your_domain"),' in "Step 5 \u2013 Setting Up Server Blocks" should include the TLD, (e.g. ',(0,o.kt)("inlineCode",{parentName:"p"},"example.com"),").")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'The location field in "Step 5 \u2013 Setting Up Server Blocks", specified as ',(0,o.kt)("inlineCode",{parentName:"p"},"try_files $uri $uri/ =404;"),", must be replaced with the following:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"proxy_pass http://localhost:1337;\nproxy_http_version 1.1;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection 'upgrade';\nproxy_set_header Host $host;\nproxy_cache_bypass $http_upgrade;\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Nginx has a ",(0,o.kt)("a",{parentName:"p",href:"http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size"},"configuration setting")," called ",(0,o.kt)("inlineCode",{parentName:"p"},"client_max_body_size")," that will prevent file uploads greater than the specified amount. This will need to be adjusted since its default is only 1MB. Note that strapi middleware is already in charge of parsing requests of file sizes up to 200MB."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"...\nhttp {\n  ...\n  client_max_body_size 200m; # Or 0 to disable\n  ...\n}\n...\n"))))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Close the port to outside traffic by running the following commands:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~\nsudo ufw deny 1337\n")))),(0,o.kt)("h3",{id:"install-and-configure-pm2"},"Install and configure pm2"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://pm2.keymetrics.io"},"pm2")," allows you to keep your Strapi project alive and to reload it without downtime."),(0,o.kt)("p",null,"Ensure you are logged in as a non-root user and install pm2 globally by running the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install pm2@latest -g\n")),(0,o.kt)("h3",{id:"configure-the-ecosystemconfigjs-and-env-files"},"Configure the ",(0,o.kt)("inlineCode",{parentName:"h3"},"ecosystem.config.js")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},".env")," files"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"ecosystem.config.js")," manages the database connection variables that Strapi needs to connect to your database. ",(0,o.kt)("inlineCode",{parentName:"p"},"ecosystem.config.js")," is also used by ",(0,o.kt)("inlineCode",{parentName:"p"},"pm2")," to restart your project whenever any changes are made to files within the Strapi file system itself, such as when an update arrives from GitHub. You can read more about the ",(0,o.kt)("inlineCode",{parentName:"p"},"ecosystem.config.js")," file in the ",(0,o.kt)("a",{parentName:"p",href:"https://pm2.keymetrics.io/docs/usage/pm2-doc-single-page/"},"official pm2 documentation"),"."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create the ",(0,o.kt)("inlineCode",{parentName:"p"},"ecosystem.config.js")," file with the command below and open it. We'll use the ",(0,o.kt)("inlineCode",{parentName:"p"},"nano")," editor:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~\npm2 init\nsudo nano ecosystem.config.js\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Replace the boilerplate content in the file with the following:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  apps: [\n    {\n      name: 'strapi-app',\n      cwd: '/home/your-name/your-project', // must have absolute path\n      script: 'npm',\n      args: 'start',\n      env: {\n        NODE_ENV: 'production',\n      },\n    },\n  ],\n};\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Go to ",(0,o.kt)("inlineCode",{parentName:"p"},"your-project")," folder to create and open a ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," file:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/your-project\nsudo nano .env\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Copy the contents of the local ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," file for the Strapi application to the one currently open in ",(0,o.kt)("inlineCode",{parentName:"p"},"nano"),". Replace the database name and credentials with the ones ",(0,o.kt)("a",{parentName:"p",href:"#install-the-database-for-your-project"},"specified")," during database setup."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"HOST=0.0.0.0\nPORT=1337\nAPP_KEYS=your-app-keys # auto-generated\nAPI_TOKEN_SALT=your-api-token-salt # auto-generated\nADMIN_JWT_SECRET=your-admin-jwt-secret # auto-generated\nTRANSFER_TOKEN_SALT=your-transfer-token-salt # auto-generated\n# Database\nDATABASE_CLIENT=postgres\nDATABASE_HOST=127.0.0.1\nDATABASE_PORT=5432\nDATABASE_NAME=your-database-name # specified during database setup\nDATABASE_USERNAME=your-database-username # specified during database setup\nDATABASE_PASSWORD=your-database-password # specified during database setup\nDATABASE_SSL=false\nJWT_SECRET=your-jwt-secret # auto-generated\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run the following commands to start ",(0,o.kt)("inlineCode",{parentName:"p"},"pm2"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~\npm2 start ecosystem.config.js\n")))),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"pm2")," is now set-up to use an ",(0,o.kt)("inlineCode",{parentName:"p"},"ecosystem.config.js")," to manage restarting your application upon changes. This is a recommended best practice."),(0,o.kt)("h4",{id:"configure-env-to-launch-strapi-on-system-startup"},"Configure ",(0,o.kt)("inlineCode",{parentName:"h4"},".env")," to launch Strapi on system startup"),(0,o.kt)("p",null,"The following steps are modified from the DigitalOcean ",(0,o.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-22-04#step-2-installing-pm2"},"documentation for setting up PM2"),":"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Generate a startup script to launch PM2 by running:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ cd ~\n$ pm2 startup systemd\n\n# Shell output\n[PM2] Init System found: systemd\n[PM2] To setup the Startup Script, copy/paste the following command:\nsudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u your-name --hp /home/your-name\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Copy the generated command from above and paste to the terminal:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u your-name --hp /home/your-name\n\n# Shell output\n[PM2] Init System found: systemd\nPlatform systemd\n\n# ...\n\n[PM2] [v] Command successfully executed.\n+---------------------------------------+\n[PM2] Freeze a process list on reboot via:\n  $ pm2 save\n\n[PM2] Remove init script via:\n  $ pm2 unstartup systemd\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Save the new PM2 process list and environment:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pm2 save\n\n# Shell output\n[PM2] Saving current process list...\n[PM2] Successfully saved in /home/your-name/.pm2/dump.pm2\n\n")))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can test to see if the script above works whenever your system reboots with the ",(0,o.kt)("inlineCode",{parentName:"p"},"sudo reboot")," command. Login again with your non-root user and run ",(0,o.kt)("inlineCode",{parentName:"p"},"pm2 list")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"systemctl status pm2-your-name")," to verify everything is working. You can also check logs with ",(0,o.kt)("inlineCode",{parentName:"p"},"pm2 logs strapi-app --lines 20"),".")),(0,o.kt)("p",null,"The Strapi production server should now be available at the domain that was ",(0,o.kt)("a",{parentName:"p",href:"#install-and-configure-nginx-web-server"},"specified")," during Nginx setup. The login screen is available at the ",(0,o.kt)("inlineCode",{parentName:"p"},"/admin")," endpoint to that same domain."),(0,o.kt)("h3",{id:"set-up-a-webhook-on-digitaloceangithub"},"Set up a webhook on DigitalOcean/GitHub"),(0,o.kt)("p",null,"Providing that your project is set up on GitHub, you must configure your Strapi project repository there with a webhook."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"More information can be found on webhooks in general in the ",(0,o.kt)("a",{parentName:"p",href:"https://developer.github.com/webhooks/creating/"},"GitHub documentation")," and ",(0,o.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/community/tutorials/how-to-use-node-js-and-github-webhooks-to-keep-remote-projects-in-sync"},"DigitalOcean documentation"),".")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Go to ",(0,o.kt)("inlineCode",{parentName:"p"},"your-project")," on GitHub and set up a webhook by following ",(0,o.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/community/tutorials/how-to-use-node-js-and-github-webhooks-to-keep-remote-projects-in-sync#step-1-setting-up-a-webhook"},"step 1")," from the DigitalOcean article. Make note of what was entered for ",(0,o.kt)("inlineCode",{parentName:"p"},"your-webhook-secret")," for later.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create a webhook script on your server. The following commands create a new file called ",(0,o.kt)("inlineCode",{parentName:"p"},"webhook.js")," which will hold 2 variables:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~\nmkdir NodeWebhooks\ncd NodeWebhooks\nsudo nano webhook.js\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In the open ",(0,o.kt)("inlineCode",{parentName:"p"},"nano")," editor, paste the following script, ensuring to update the values for the ",(0,o.kt)("inlineCode",{parentName:"p"},"secret")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"repo")," variables at the top of the file. Then save and exit."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"var secret = 'your-webhook-secret'; // created in GitHub earlier\nvar repo = '~/your-project';\n\nconst http = require('http');\nconst crypto = require('crypto');\nconst exec = require('child_process').exec;\n\nconst PM2_CMD = 'cd ~ && pm2 startOrRestart ecosystem.config.js';\n\nhttp\n  .createServer(function(req, res) {\n    req.on('data', function(chunk) {\n      let sig =\n        'sha1=' +\n        crypto\n          .createHmac('sha1', secret)\n          .update(chunk.toString())\n          .digest('hex');\n\n      if (req.headers['x-hub-signature'] == sig) {\n        exec(`cd ${repo} && git pull && NODE_ENV=production npm run build && ${PM2_CMD}`, (error, stdout, stderr) => {\n          if (error) {\n            console.error(`exec error: ${error}`);\n            return;\n          }\n          console.log(`stdout: ${stdout}`);\n          console.log(`stderr: ${stderr}`);\n        });\n      }\n    });\n\n    res.end();\n  })\n  .listen(8080);\n")),(0,o.kt)("admonition",{parentName:"li",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The script above declares a variable called ",(0,o.kt)("inlineCode",{parentName:"p"},"PM2_CMD")," which is used after pulling from GitHub to update your project. The script first changes to the home directory and then runs the variable ",(0,o.kt)("inlineCode",{parentName:"p"},"PM2_CMD")," as ",(0,o.kt)("inlineCode",{parentName:"p"},"pm2 restart strapi"),"."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Allow the port to communicate with outside web traffic for port 8080 by running the following scripts:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ufw allow 8080/tcp\nsudo ufw enable\n")),(0,o.kt)("p",{parentName:"li"},"  Press ",(0,o.kt)("inlineCode",{parentName:"p"},"y")," to accept the ",(0,o.kt)("inlineCode",{parentName:"p"},"Command may disrupt existing ssh connections. Proceed with operation (y|n)?")," message."),(0,o.kt)("p",{parentName:"li"},"Earlier you setup ",(0,o.kt)("inlineCode",{parentName:"p"},"pm2")," to start the services for ",(0,o.kt)("inlineCode",{parentName:"p"},"your-project")," whenever the Droplet reboots or is started. You will now do the same for the ",(0,o.kt)("inlineCode",{parentName:"p"},"webhook.js")," script.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Install the webhook as a ",(0,o.kt)("inlineCode",{parentName:"p"},"systemd")," service. First run ",(0,o.kt)("inlineCode",{parentName:"p"},"echo $PATH")," and copy the output for use in the next step."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"echo $PATH\n\n# Shell output\n/home/your-name/.npm-global/bin:/home/your-name/bin:/home/your-name/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create a ",(0,o.kt)("inlineCode",{parentName:"p"},"webhook.service")," file:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/system/webhook.service\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Paste the configuration details below into the open ",(0,o.kt)("inlineCode",{parentName:"p"},"nano")," editor. Make sure to replace ",(0,o.kt)("inlineCode",{parentName:"p"},"your-name")," in both places with your username. Following that, paste the path that was outputted to the shell above in place of ",(0,o.kt)("inlineCode",{parentName:"p"},"your-path"),", then save and exit:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"[Unit]\nDescription=Github webhook\nAfter=network.target\n\n[Service]\nEnvironment=PATH=your-path\nType=simple\nUser=your-name\nExecStart=/usr/bin/node /home/your-name/NodeWebhooks/webhook.js\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Enable and start the new service so it starts when the system boots:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable webhook.service\nsudo systemctl start webhook\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Check the status of the webhook:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl status webhook\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"(",(0,o.kt)("em",{parentName:"p"},"optional"),") Test your webhook as shown ",(0,o.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/community/tutorials/how-to-use-node-js-and-github-webhooks-to-keep-remote-projects-in-sync#step-4-testing-the-webhook"},"in the DigitalOcean documentation")," except using the ",(0,o.kt)("inlineCode",{parentName:"p"},"node webhook.js")," command since ",(0,o.kt)("inlineCode",{parentName:"p"},"nodejs")," is depreciated. Sometimes GitHub will show a successful recent delivery even if there is an authentication failure. The most reliable way is to push code changes to the GitHub repository and then run ",(0,o.kt)("inlineCode",{parentName:"p"},"sudo systemctl status webhook")," again to see if the latest commit SHA has been registered."))),(0,o.kt)("h3",{id:"further-steps-to-take"},"Further steps to take"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"To install SSL, you will need to ",(0,o.kt)("a",{parentName:"li",href:"https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-22-04"},"install and run Certbot")," by Let's Encrypt."),(0,o.kt)("li",{parentName:"ul"},"Set-up ",(0,o.kt)("a",{parentName:"li",href:"https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-with-http-2-support-on-ubuntu-22-04"},"Nginx with HTTP/2 Support")," for Ubuntu 22.04.")),(0,o.kt)("p",null,"\ud83e\udd73 Your Strapi project has been installed on a DigitalOcean Droplet using Ubuntu 22.04."))}g.isMDXComponent=!0},14188:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var n=a(83117),o=(a(67294),a(3905));const r={},i=void 0,l={unversionedId:"snippets/consider-strapi-cloud",id:"snippets/consider-strapi-cloud",title:"consider-strapi-cloud",description:"You can also use Strapi Cloud to quickly deploy and host your project.",source:"@site/docs/snippets/consider-strapi-cloud.md",sourceDirName:"snippets",slug:"/snippets/consider-strapi-cloud",permalink:"/aberabook/snippets/consider-strapi-cloud",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/snippets/consider-strapi-cloud.md",tags:[],version:"current",frontMatter:{}},p={},s=[],d={toc:s};function u(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"\u2601\ufe0f Strapi Cloud",type:"callout"},(0,o.kt)("p",{parentName:"admonition"},"You can also use ",(0,o.kt)("a",{parentName:"p",href:"/cloud/intro"},"Strapi Cloud")," to quickly deploy and host your project.")))}u.isMDXComponent=!0}}]);