"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[3564],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=d(n),k=r,c=u["".concat(o,".").concat(k)]||u[k]||m[k]||i;return n?a.createElement(c,l(l({ref:t},s),{},{components:n})):a.createElement(c,l({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},74351:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>b,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var a=n(83117),r=(n(67294),n(3905));const i={title:"REST API reference",description:"Interact with your Content-Types using the REST API endpoints Strapi generates for you.",displayed_sidebar:"restApiSidebar"},l="REST API",p={unversionedId:"dev-docs/api/rest",id:"dev-docs/api/rest",title:"REST API reference",description:"Interact with your Content-Types using the REST API endpoints Strapi generates for you.",source:"@site/docs/dev-docs/api/rest.md",sourceDirName:"dev-docs/api",slug:"/dev-docs/api/rest",permalink:"/aberabook/dev-docs/api/rest",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/api/rest.md",tags:[],version:"current",frontMatter:{title:"REST API reference",description:"Interact with your Content-Types using the REST API endpoints Strapi generates for you.",displayed_sidebar:"restApiSidebar"},sidebar:"restApiSidebar",next:{title:"Interactive Query Builder",permalink:"/aberabook/dev-docs/api/rest/interactive-query-builder"}},o={},d=[{value:"Endpoints",id:"endpoints",level:2},{value:"Requests",id:"requests",level:2},{value:"Get entries",id:"get-entries",level:3},{value:"Get an entry",id:"get-an-entry",level:3},{value:"Create an entry",id:"create-an-entry",level:3},{value:"Update an entry",id:"update-an-entry",level:3},{value:"Delete an entry",id:"delete-an-entry",level:3}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},m=s("Tabs"),u=s("TabItem"),k=s("SideBySideContainer"),c=s("SideBySideColumn"),y=s("ApiCall"),N=s("Request"),g=s("Response"),h={toc:d};function b(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rest-api"},"REST API"),(0,r.kt)("p",null,"The REST API allows accessing the ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/backend-customization/models"},"content-types")," through API endpoints. Strapi automatically creates ",(0,r.kt)("a",{parentName:"p",href:"#endpoints"},"API endpoints")," when a content-type is created. ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/api/rest/parameters"},"API parameters")," can be used when querying API endpoints to refine the results."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"All content types are private by default and need to be either made public or queries need to be authenticated with the proper permissions. See the ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/quick-start#step-3-set-roles--permissions"},"Quick Start Guide"),", the user guide for the ",(0,r.kt)("a",{parentName:"p",href:"/user-docs/users-roles-permissions/configuring-end-users-roles"},"Users & Permissions plugin"),", and ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/configurations/api-tokens"},"API tokens configuration documentation")," for more details.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"By default, the REST API responses only include top-level fields and does not populate any relations, media fields, components, or dynamic zones. Use the ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/api/rest/populate-select"},(0,r.kt)("inlineCode",{parentName:"a"},"populate")," parameter")," to populate specific fields. Ensure that the find permission is given to the field(s) for the relation(s) you populate.")),(0,r.kt)("p",null,":::strapi Upload plugin API\nThe Upload plugin (which handles media found in the ",(0,r.kt)("a",{parentName:"p",href:"/user-docs/media-library"},"Media Library"),") has a specific API described in the ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/plugins/upload"},"Upload plugin documentation"),".\n:::"),(0,r.kt)("h2",{id:"endpoints"},"Endpoints"),(0,r.kt)("p",null,"For each Content-Type, the following endpoints are automatically generated:"),(0,r.kt)(m,{groupId:"collection-single",mdxType:"Tabs"},(0,r.kt)(u,{value:"collection-type",label:"Collection type",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"URL"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/:pluralApiId")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#get-entries"},"Get a list of entries"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"POST")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/:pluralApiId")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#create-an-entry"},"Create an entry"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/:pluralApiId/:documentId")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#get-an-entry"},"Get an entry"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PUT")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/:pluralApiId/:documentId")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#update-an-entry"},"Update an entry"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"DELETE")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/:pluralApiId/:documentId")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#delete-an-entry"},"Delete an entry")))))),(0,r.kt)(u,{value:"single-type",label:"Single type",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"URL"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/:singularApiId")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#get-an-entry"},"Get an entry"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PUT")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/:singularApiId")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#update-an-entry"},"Update/Create an entry"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"DELETE")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/:singularApiId")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#delete-an-entry"},"Delete an entry"))))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Examples:"),(0,r.kt)(m,{groupId:"collection-single",mdxType:"Tabs"},(0,r.kt)(u,{value:"collection-type",label:"Collection type",mdxType:"TabItem"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Restaurant")," ",(0,r.kt)("strong",{parentName:"p"},"Content type")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"URL"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GET"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/restaurants")),(0,r.kt)("td",{parentName:"tr",align:null},"Get a list of restaurants")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"POST"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/restaurants")),(0,r.kt)("td",{parentName:"tr",align:null},"Create a restaurant")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GET"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/restaurants/:id")),(0,r.kt)("td",{parentName:"tr",align:null},"Get a specific restaurant")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DELETE"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/restaurants/:id")),(0,r.kt)("td",{parentName:"tr",align:null},"Delete a restaurant")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"PUT"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/restaurants/:id")),(0,r.kt)("td",{parentName:"tr",align:null},"Update a restaurant"))))),(0,r.kt)(u,{value:"single-type",label:"Single type",mdxType:"TabItem"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Homepage")," ",(0,r.kt)("strong",{parentName:"p"},"Content type")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"URL"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GET"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/homepage")),(0,r.kt)("td",{parentName:"tr",align:null},"Get the homepage content")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"PUT"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/homepage")),(0,r.kt)("td",{parentName:"tr",align:null},"Update/create the homepage content")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DELETE"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/api/homepage")),(0,r.kt)("td",{parentName:"tr",align:null},"Delete the homepage content"))))))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"/dev-docs/backend-customization/models#components"},"Components")," don't have API endpoints.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"API endpoints are prefixed with ",(0,r.kt)("inlineCode",{parentName:"p"},"/api")," by default. This can be changed by setting a different value for the ",(0,r.kt)("inlineCode",{parentName:"p"},"rest.prefix")," configuration parameter (see ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/configurations/api"},"API calls configuration"),").")),(0,r.kt)("h2",{id:"requests"},"Requests"),(0,r.kt)("p",null,"Requests return a response as an object which usually includes the following keys:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"data"),": the response data itself, which could be:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"a single entry, as an object with the following keys:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," (number)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"attributes")," (object)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"meta")," (object)"))),(0,r.kt)("li",{parentName:"ul"},"a list of entries, as an array of objects"),(0,r.kt)("li",{parentName:"ul"},"a custom response"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"meta")," (object): information about pagination, publication state, available locales, etc.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"error")," (object, ",(0,r.kt)("em",{parentName:"p"},"optional"),"): information about any ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/error-handling"},"error")," thrown by the request"))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Some plugins (including Users & Permissions and Upload) may not follow this response format.")),(0,r.kt)(k,{mdxType:"SideBySideContainer"},(0,r.kt)(c,{mdxType:"SideBySideColumn"},(0,r.kt)("h3",{id:"get-entries"},"Get entries"),(0,r.kt)("p",null,"Returns entries matching the query filters (see ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/api/rest/parameters"},"API parameters")," documentation).")),(0,r.kt)(c,{mdxType:"SideBySideColumn"},(0,r.kt)(y,{mdxType:"ApiCall"},(0,r.kt)(N,{mdxType:"Request"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GET http://localhost:1337/api/restaurants"))),(0,r.kt)(g,{mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "id": 1,\n      "attributes": {\n        "title": "Restaurant A",\n        "description": "Restaurant A\'s description"\n      },\n      "meta": {\n        "availableLocales": []\n      }\n    },\n    {\n      "id": 2,\n      "attributes": {\n        "title": "Restaurant B",\n        "description": "Restaurant B\'s description"\n      },\n      "meta": {\n        "availableLocales": []\n      }\n    },\n  ],\n  "meta": {}\n}\n\n')))))),(0,r.kt)(k,{mdxType:"SideBySideContainer"},(0,r.kt)(c,{mdxType:"SideBySideColumn"},(0,r.kt)("h3",{id:"get-an-entry"},"Get an entry"),(0,r.kt)("p",null,"Returns an entry by ",(0,r.kt)("inlineCode",{parentName:"p"},"id"),".")),(0,r.kt)(c,{mdxType:"SideBySideColumn"},(0,r.kt)(y,{mdxType:"ApiCall"},(0,r.kt)(N,{title:"Example request",mdxType:"Request"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GET http://localhost:1337/api/restaurants/1"))),(0,r.kt)(g,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "id": 1,\n    "attributes": {\n      "title": "Restaurant A",\n      "description": "Restaurant A\'s description"\n    },\n    "meta": {\n      "availableLocales": []\n    }\n  },\n  "meta": {}\n}\n\n')))))),(0,r.kt)(k,{mdxType:"SideBySideContainer"},(0,r.kt)(c,{mdxType:"SideBySideColumn"},(0,r.kt)("h3",{id:"create-an-entry"},"Create an entry"),(0,r.kt)("p",null,"Creates an entry and returns its value."),(0,r.kt)("p",null,"If the ",(0,r.kt)("a",{parentName:"p",href:"/aberabook/dev-docs/plugins/i18n"},"Internationalization (i18n) plugin")," is installed, it's possible to use POST requests to the REST API to ",(0,r.kt)("a",{parentName:"p",href:"/aberabook/dev-docs/plugins/i18n#creating-a-new-localized-entry"},"create localized entries"),"."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"While creating an entry, you can define its relations and their order (see ",(0,r.kt)("a",{parentName:"p",href:"/aberabook/dev-docs/api/rest/relations"},"Managing relations through the REST API")," for more details)."))),(0,r.kt)(c,{mdxType:"SideBySideColumn"},(0,r.kt)(y,{mdxType:"ApiCall"},(0,r.kt)(N,{title:"Example request",mdxType:"Request"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"POST http://localhost:1337/api/restaurants")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "title": "Hello",\n    "relation_field_a": 2,\n    "relation_field_b": [2, 4],\n    "link": {\n      "id": 1,\n      "type": "abc"\n    }\n  }\n}\n'))),(0,r.kt)(g,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "id": 1,\n    "attributes": { \u2026 },\n    "meta": {}\n  },\n  "meta": {}\n}\n')))))),(0,r.kt)(k,{mdxType:"SideBySideContainer"},(0,r.kt)(c,{mdxType:"SideBySideColumn"},(0,r.kt)("h3",{id:"update-an-entry"},"Update an entry"),(0,r.kt)("p",null,"Partially updates an entry by ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," and returns its value."),(0,r.kt)("p",null,"Fields that aren't sent in the query are not changed in the database. Send a ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," value to clear fields."),(0,r.kt)("admonition",{title:"NOTES",type:"note"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Even with the ",(0,r.kt)("a",{parentName:"li",href:"/dev-docs/plugins/i18n"},"Internationalization (i18n) plugin")," installed, it's currently not possible to ",(0,r.kt)("a",{parentName:"li",href:"/dev-docs/plugins/i18n#updating-an-entry"},"update the locale of an entry"),"."),(0,r.kt)("li",{parentName:"ul"},"While updating an entry, you can define its relations and their order (see ",(0,r.kt)("a",{parentName:"li",href:"/aberabook/dev-docs/api/rest/relations"},"Managing relations through the REST API")," for more details).")))),(0,r.kt)(c,{mdxType:"SideBySideColumn"},(0,r.kt)(y,{mdxType:"ApiCall"},(0,r.kt)(N,{title:"Example request",mdxType:"Request"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"PUT http://localhost:1337/api/restaurants/1")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "title": "Hello",\n    "relation_field_a": 2,\n    "relation_field_b": [2, 4],\n  }\n}\n'))),(0,r.kt)(g,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "id": 1,\n    "attributes": {},\n    "meta": {}\n  },\n  "meta": {}\n}\n')))))),(0,r.kt)(k,{mdxType:"SideBySideContainer"},(0,r.kt)(c,{mdxType:"SideBySideColumn"},(0,r.kt)("h3",{id:"delete-an-entry"},"Delete an entry"),(0,r.kt)("p",null,"Deletes an entry by ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," and returns its value.")),(0,r.kt)(c,{mdxType:"SideBySideColumn"},(0,r.kt)(y,{mdxType:"ApiCall"},(0,r.kt)(N,{title:"Example request",mdxType:"Request"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DELETE http://localhost:1337/api/restaurants/1"))),(0,r.kt)(g,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "id": 1,\n    "attributes": {},\n    "meta": {}\n  },\n  "meta": {}\n}\n')))))))}b.isMDXComponent=!0}}]);