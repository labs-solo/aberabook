"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[5312,1077,8689],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,y=u["".concat(d,".").concat(m)]||u[m]||p[m]||a;return n?r.createElement(y,o(o({ref:t},l),{},{components:n})):r.createElement(y,o({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},78990:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>b,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var r=n(83117),i=(n(67294),n(3905)),a=n(11165);n(41207);const o={title:"Query Engine API",description:"Strapi provides a Query Engine API to give unrestricted internal access to the database layer at a lower level.",displayed_sidebar:"devDocsSidebar"},s="Query Engine API",d={unversionedId:"dev-docs/api/query-engine",id:"dev-docs/api/query-engine",title:"Query Engine API",description:"Strapi provides a Query Engine API to give unrestricted internal access to the database layer at a lower level.",source:"@site/docs/dev-docs/api/query-engine.md",sourceDirName:"dev-docs/api",slug:"/dev-docs/api/query-engine",permalink:"/aberabook/dev-docs/api/query-engine",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/api/query-engine.md",tags:[],version:"current",frontMatter:{title:"Query Engine API",description:"Strapi provides a Query Engine API to give unrestricted internal access to the database layer at a lower level.",displayed_sidebar:"devDocsSidebar"},sidebar:"devDocsSidebar",previous:{title:"Components and Dynamic Zones",permalink:"/aberabook/dev-docs/api/entity-service/components-dynamic-zones"},next:{title:"Single Operations",permalink:"/aberabook/dev-docs/api/query-engine/single-operations"}},c={},l=[{value:"Basic usage",id:"basic-usage",level:2},{value:"Available operations",id:"available-operations",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)},u=p("CustomDocCardsWrapper"),m=p("CustomDocCard"),y={toc:l};function b(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"query-engine-api"},"Query Engine API"),(0,i.kt)("admonition",{type:"prerequisites"},(0,i.kt)("p",{parentName:"admonition"},"Before diving deeper into the Query Engine API documentation, it is recommended that you read the following introductions:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"the ",(0,i.kt)("a",{parentName:"li",href:"/dev-docs/backend-customization"},"backend customization introduction"),","),(0,i.kt)("li",{parentName:"ul"},"and the ",(0,i.kt)("a",{parentName:"li",href:"/dev-docs/api/content-api"},"Content API introduction"),"."))),(0,i.kt)("p",null,"The Strapi backend provides a Query Engine API to interact with the database layer at a lower level. The Query Engine API should mostly be used by plugin developers and developers adding custom business logic to their applications."),(0,i.kt)("p",null,"\ud83d\udc49  In most use cases, it's recommended to use the ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/api/entity-service/"},"Entity Service API")," instead of the Query Engine API."),(0,i.kt)("p",null,":::strapi Entity Service API vs. Query Engine API"),(0,i.kt)(a.default,{components:n.components,mdxType:"EntityQueryKnex"}),":::",(0,i.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,i.kt)("p",null,"The Query Engine is available through ",(0,i.kt)("inlineCode",{parentName:"p"},"strapi.db.query"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"strapi.db.query('api::blog.article').findMany({ // uid syntax: 'api::api-name.content-type-name'\n  where: {\n    title: {\n      $startsWith: '2021',\n      $endsWith: 'v4',\n    },\n  },\n  populate: {\n    category: true,\n  },\n});\n")),(0,i.kt)("h2",{id:"available-operations"},"Available operations"),(0,i.kt)("p",null,"The Query Engine allows the following operations on database entries:"),(0,i.kt)(u,{mdxType:"CustomDocCardsWrapper"},(0,i.kt)(m,{emoji:"",title:"Single operations",description:"Create, read, update, and delete single database entries with the Query Engine API.",link:"/dev-docs/api/query-engine/single-operations",mdxType:"CustomDocCard"}),(0,i.kt)(m,{emoji:"",title:"Bulk operations",description:"Create, read, update, and delete multiple database entries with the Query Engine API.",link:"/dev-docs/api/query-engine/bulk-operations",mdxType:"CustomDocCard"}),(0,i.kt)(m,{emoji:"",title:"Filters",description:"Get exactly what you need by filtering database entries with the Query Engine API.",link:"/dev-docs/api/query-engine/filtering",mdxType:"CustomDocCard"}),(0,i.kt)(m,{emoji:"",title:"Populate",description:"Get additional data with your Query Engine API queries by populating relations.",link:"/dev-docs/api/query-engine/populating",mdxType:"CustomDocCard"}),(0,i.kt)(m,{emoji:"",title:"Order & Pagination",description:"Sort and paginate the results of your Query Engine API queries.",link:"/dev-docs/api/query-engine/order-pagination",mdxType:"CustomDocCard"})))}b.isMDXComponent=!0},41207:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(83117),i=(n(67294),n(3905));const a={},o=void 0,s={unversionedId:"snippets/backend-custom-intro-crosslink",id:"snippets/backend-custom-intro-crosslink",title:"backend-custom-intro-crosslink",description:"For a general overview and understanding of the Strapi backend elements, please refer to the backend customization introduction and diagram.",source:"@site/docs/snippets/backend-custom-intro-crosslink.md",sourceDirName:"snippets",slug:"/snippets/backend-custom-intro-crosslink",permalink:"/aberabook/snippets/backend-custom-intro-crosslink",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/snippets/backend-custom-intro-crosslink.md",tags:[],version:"current",frontMatter:{}},d={},c=[],l={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"For a general overview and understanding of the Strapi backend elements, please refer to the backend customization ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/backend-customization"},"introduction")," and ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/backend-customization#interactive-diagram"},"diagram"),"."))}p.isMDXComponent=!0},11165:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(83117),i=(n(67294),n(3905));const a={},o=void 0,s={unversionedId:"snippets/entity-query-knex",id:"snippets/entity-query-knex",title:"entity-query-knex",description:"Strapi v4 offers several layers to interact with the backend and build your queries:",source:"@site/docs/snippets/entity-query-knex.md",sourceDirName:"snippets",slug:"/snippets/entity-query-knex",permalink:"/aberabook/snippets/entity-query-knex",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/snippets/entity-query-knex.md",tags:[],version:"current",frontMatter:{}},d={},c=[],l={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Strapi v4 offers several layers to interact with the backend and build your queries:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The Entity Service API is the recommended API to interact with your application's database. The Entity Service is the layer that handles Strapi's complex data structures like components and dynamic zones, which the lower-level layers are not aware of."),(0,i.kt)("li",{parentName:"ul"},"The Query Engine API interacts with the database layer at a lower level and is used under the hood to execute database queries. It gives unrestricted internal access to the database layer, but should be used only if the Entity Service API does not cover your use case."),(0,i.kt)("li",{parentName:"ul"},"If you need direct access to ",(0,i.kt)("inlineCode",{parentName:"li"},"knex")," functions, use ",(0,i.kt)("inlineCode",{parentName:"li"},"strapi.db.connection"),".")))}p.isMDXComponent=!0}}]);