"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[3852],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>g});var a=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,i=function(t,e){if(null==t)return{};var n,a,i={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var s=a.createContext({}),m=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=m(t.components);return a.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,i=t.mdxType,r=t.originalType,s=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),d=m(n),g=i,u=d["".concat(s,".").concat(g)]||d[g]||c[g]||r;return n?a.createElement(u,o(o({ref:e},p),{},{components:n})):a.createElement(u,o({ref:e},p))}));function g(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:i,o[1]=l;for(var m=2;m<r;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},73656:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>y,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var a=n(83117),i=(n(67294),n(3905));const r={title:"SQL relations cheatsheet",description:"Learn how model schemas and entity relationship diagrams differ between Strapi v3 and v4",displayed_sidebar:"devDocsSidebar"},o="Data migration: SQL relations in Strapi v3 and v4",l={unversionedId:"dev-docs/migration/v3-to-v4/data/sql-relations",id:"dev-docs/migration/v3-to-v4/data/sql-relations",title:"SQL relations cheatsheet",description:"Learn how model schemas and entity relationship diagrams differ between Strapi v3 and v4",source:"@site/docs/dev-docs/migration/v3-to-v4/data/sql-relations.md",sourceDirName:"dev-docs/migration/v3-to-v4/data",slug:"/dev-docs/migration/v3-to-v4/data/sql-relations",permalink:"/aberabook/dev-docs/migration/v3-to-v4/data/sql-relations",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/migration/v3-to-v4/data/sql-relations.md",tags:[],version:"current",frontMatter:{title:"SQL relations cheatsheet",description:"Learn how model schemas and entity relationship diagrams differ between Strapi v3 and v4",displayed_sidebar:"devDocsSidebar"},sidebar:"devDocsSidebar",previous:{title:"SQL v3 to v4 migration",permalink:"/aberabook/dev-docs/migration/v3-to-v4/data/sql"},next:{title:"MongoDB v3 to SQL v3 migration",permalink:"/aberabook/dev-docs/migration/v3-to-v4/data/mongo"}},s={},m=[{value:"One-to-one relations (1-1)",id:"one-to-one-relations-1-1",level:2},{value:"One-to-many relations (1-N)",id:"one-to-many-relations-1-n",level:2},{value:"Many-to-one relations (N-1)",id:"many-to-one-relations-n-1",level:2},{value:"Many-to-many relations (N-N)",id:"many-to-many-relations-n-n",level:2},{value:"One-way relations (unidirectional N-1)",id:"one-way-relations-unidirectional-n-1",level:2},{value:"Many-way relations (unidirectional N-N)",id:"many-way-relations-unidirectional-n-n",level:2},{value:"Polymorphic relations",id:"polymorphic-relations",level:2},{value:"Circular relations",id:"circular-relations",level:2},{value:"Relations to components",id:"relations-to-components",level:2}],p=t=>function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)},c=p("Columns"),d=p("ColumnLeft"),g=p("ColumnRight"),u={toc:m};function y(t){let{components:e,...r}=t;return(0,i.kt)("wrapper",(0,a.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"data-migration-sql-relations-in-strapi-v3-and-v4"},"Data migration: SQL relations in Strapi v3 and v4"),(0,i.kt)("p",null,"This documentation is part of the ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/migration/v3-to-v4/data/sql"},"SQL migration guide")," included in the ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/migration/v3-to-v4/data-migration"},"data migration guide")," and designed to help you migrate from Strapi v3.6.x to Strapi v4.0.x."),(0,i.kt)("p",null,":::strapi v3 / v4 comparison"),(0,i.kt)("p",null,"In Strapi v3, only many-to-many relations (both bidirectional and unidirectional) and polymorphic relations trigger the creation of SQL join tables."),(0,i.kt)("p",null,"In Strapi v4, every type of ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/backend-customization/models#relations"},"relation")," between 2 entities triggers the creation of a SQL join table.\n:::"),(0,i.kt)("p",null,"This documentation is built around an example using 2 different database entities: ",(0,i.kt)("inlineCode",{parentName:"p"},"article")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"category"),". The example simulates adding a relation to the ",(0,i.kt)("inlineCode",{parentName:"p"},"article")," entity pointing towards the ",(0,i.kt)("inlineCode",{parentName:"p"},"category")," entity. For each relation type, the following sections illustrate:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"the definition of attributes in the ",(0,i.kt)("a",{parentName:"li",href:"/dev-docs/backend-customization/models#model-schema"},"model schema")," for each entity's model"),(0,i.kt)("li",{parentName:"ul"},"and the entity relationship diagrams.")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Legend for entity relationship diagrams"),"Entity relationship diagrams use the following color code:",(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"for tables and relations:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Strapi v3 items are in orange"),(0,i.kt)("li",{parentName:"ul"},"Strapi v4 items are in purple"))),(0,i.kt)("li",{parentName:"ul"},"for table names (e.g. articles_category_links):",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"entity names (singular or plural) are in blue"),(0,i.kt)("li",{parentName:"ul"},"attribute names from a schema are in green"),(0,i.kt)("li",{parentName:"ul"},"all the other parts of a table name are in black")))),(0,i.kt)("p",null,"Entity relationship diagrams also use the following abbreviations:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"PK for primary key"),(0,i.kt)("li",{parentName:"ul"},"FK for foreign key"))),(0,i.kt)("h2",{id:"one-to-one-relations-1-1"},"One-to-one relations (1-1)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Model schemas (attributes only)"),":"),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/article.settings.json"',title:'"article/article.settings.json"'},'{\n  "category": {\n    "model": "category",\n    "via": "article"\n  }\n}\n'))),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/schema.json"',title:'"article/schema.json"'},'{\n  "category": {\n    "type": "relation",\n    "relation": "oneToOne",\n    "target": "api::category.category",\n    "inversedBy": "article"\n  }\n}\n')))),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{mdxType:"ColumnLeft"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="category/category.settings.json"',title:'"category/category.settings.json"'},'{\n  "article": {\n    "model": "article",\n    "via": "category"\n  }\n}\n'))),(0,i.kt)(g,{mdxType:"ColumnRight"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="category/schema.json"',title:'"category/schema.json"'},'{\n  "article": {\n    "type": "relation",\n    "relation": "oneToOne",\n    "target": "api::article.article",\n    "mappedBy": "category"\n  }\n}\n')))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Database structures"),":"),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("img",{src:"/img/assets/data-migration/v3-one-to-one.png"})),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("img",{src:"/img/assets/data-migration/v4-one-to-one.png"}))),(0,i.kt)("h2",{id:"one-to-many-relations-1-n"},"One-to-many relations (1-N)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Model schemas (attributes only)"),":"),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/article.settings.json"',title:'"article/article.settings.json"'},'{\n  "categories": {\n    "collection": "category",\n    "via": "article"\n  }\n}\n'))),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/schema.json"',title:'"article/schema.json"'},'{\n  "categories": {\n    "type": "relation",\n    "relation": "oneToMany",\n    "target": "api::category.category",\n    "mappedBy": "article"\n  }\n}\n')))),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{mdxType:"ColumnLeft"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="category/category.settings.json"',title:'"category/category.settings.json"'},'{\n  "article": {\n    "model": "article",\n    "via": "categories"\n  }\n}\n'))),(0,i.kt)(g,{mdxType:"ColumnRight"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="category/schema.json"',title:'"category/schema.json"'},'{\n  "article": {\n    "type": "relation",\n    "relation": "manyToOne",\n    "target": "api::article.article",\n    "inversedBy": "categories"\n  }\n}\n')))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Database structures:")),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("img",{src:"/img/assets/data-migration/v3-one-to-many.png"})),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("img",{src:"/img/assets/data-migration/v4-one-to-many.png"}))),(0,i.kt)("h2",{id:"many-to-one-relations-n-1"},"Many-to-one relations (N-1)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Model schemas (attributes only)"),":"),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/article.settings.json"',title:'"article/article.settings.json"'},'{\n  "category": {\n    "model": "category",\n    "via": "articles"\n  }\n}\n'))),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/schema.json"',title:'"article/schema.json"'},'{\n  "category": {\n    "type": "relation",\n    "relation": "manyToOne",\n    "target": "api::category.category",\n    "inversedBy": "articles"\n  }\n}\n')))),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{mdxType:"ColumnLeft"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="category/category.settings.json"',title:'"category/category.settings.json"'},'{\n  "articles": {\n    "collection": "article",\n    "via": "category"\n  }\n}\n'))),(0,i.kt)(g,{mdxType:"ColumnRight"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="category/schema.json"',title:'"category/schema.json"'},'{\n  "articles": {\n    "type": "relation",\n    "relation": "oneToMany",\n    "target": "api::article.article",\n    "mappedBy": "category"\n  }\n}\n')))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Database structures:")),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("img",{src:"/img/assets/data-migration/v3-many-to-one.png"})),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("img",{src:"/img/assets/data-migration/v4-many-to-one.png"}))),(0,i.kt)("h2",{id:"many-to-many-relations-n-n"},"Many-to-many relations (N-N)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Model schemas (attributes only)"),":"),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/article.settings.json"',title:'"article/article.settings.json"'},'{\n  "categories": {\n    "collection": "category",\n    "via": "articles",\n    "dominant": true\n  }\n}\n'))),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/schema.json"',title:'"article/schema.json"'},'{\n  "categories": {\n    "type": "relation",\n    "relation": "manyToMany",\n    "target": "api::category.category",\n    "inversedBy": "articles"\n  }\n}\n')))),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{mdxType:"ColumnLeft"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="category/category.settings.json"',title:'"category/category.settings.json"'},'{\n  "articles": {\n    "collection": "article",\n    "via": "categories"\n  }\n}\n'))),(0,i.kt)(g,{mdxType:"ColumnRight"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="category/schema.json"',title:'"category/schema.json"'},'{\n  "articles": {\n    "type": "relation",\n    "relation": "manyToMany",\n    "target": "api::article.article",\n    "mappedBy": "categories"\n  }\n}\n')))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Database structures:")),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("img",{src:"/img/assets/data-migration/v3-many-to-many.png"})),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("img",{src:"/img/assets/data-migration/v4-many-to-many.png"}))),(0,i.kt)("h2",{id:"one-way-relations-unidirectional-n-1"},"One-way relations (unidirectional N-1)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Model schemas (attributes only):")),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/article.settings.json"',title:'"article/article.settings.json"'},'{\n  "category": {\n    "model": "category"\n  }\n}\n'))),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/schema.json"',title:'"article/schema.json"'},'{\n  "category": {\n    "type": "relation",\n    "relation": "oneToOne",\n    "target": "api::category.category"\n  }\n}\n')))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Database structures:")),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("img",{src:"/img/assets/data-migration/v3-one-way.png"})),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("img",{src:"/img/assets/data-migration/v4-one-way.png"}))),(0,i.kt)("h2",{id:"many-way-relations-unidirectional-n-n"},"Many-way relations (unidirectional N-N)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Model schemas (attributes only)"),":"),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/article.settings.json"',title:'"article/article.settings.json"'},'{\n  "categories": {\n    "collection": "category"\n  }\n}\n'))),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/schema.json"',title:'"article/schema.json"'},'{\n  "categories": {\n    "type": "relation",\n    "relation": "oneToMany",\n    "target": "api::category.category"\n  }\n}\n')))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Database structures:")),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("img",{src:"/img/assets/data-migration/v3-many-way.png"})),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("img",{src:"/img/assets/data-migration/v4-many-way.png"}))),(0,i.kt)("h2",{id:"polymorphic-relations"},"Polymorphic relations"),(0,i.kt)("p",null,":::strapi v3 / v4 comparison\nIn Strapi v3, table names for polymorphic relations end with ",(0,i.kt)("inlineCode",{parentName:"p"},"_morph")," (singular), and the ",(0,i.kt)("inlineCode",{parentName:"p"},"attribute_type")," points to an entity name."),(0,i.kt)("p",null,"In Strapi v4, table names for polymorphic relations end with ",(0,i.kt)("inlineCode",{parentName:"p"},"_morphs")," (plural), and the ",(0,i.kt)("inlineCode",{parentName:"p"},"attribute_type")," must point to an entity unique identifier.\n:::"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Polymorphic relations should always have ",(0,i.kt)("inlineCode",{parentName:"p"},"\u201cconfigurable\u201d: false")," defined in the attributes of the schema to prevent their modification in the admin panel.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Model schemas (attributes only)"),":"),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/article.settings.json"',title:'"article/article.settings.json"'},'{\n  "related": {\n    "collection": "*",\n    "filter": "field",\n    "configurable": false\n  }\n}\n'))),(0,i.kt)(g,{mdxType:"ColumnRight"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="category/category.settings.json"',title:'"category/category.settings.json"'},'{\n  "articles": {\n    "collection": "article",\n    "via": "related"\n  }\n}\n')))),(0,i.kt)("p",null,"In Strapi v3, only one morph table is created for every entity. Whenever a polymorphic relation attribute is added to the entity schema, 2 new columns are added to the ",(0,i.kt)("inlineCode",{parentName:"p"},"entity_morph")," table: ",(0,i.kt)("inlineCode",{parentName:"p"},"attribute_id")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"attribute_type"),"."),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v4",mdxType:"ColumnLeft"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="article/schema.json"',title:'"article/schema.json"'},'{\n  "related": {\n    "type": "relation",\n    "relation": "morphToMany",\n    "configurable": false\n  }\n}\n'))),(0,i.kt)(g,{mdxType:"ColumnRight"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="category/schema.json"',title:'"category/schema.json"'},'{\n  "article": {\n    "type": "relation",\n    "relation": "morphMany",\n    "target": "article",\n    "morphBy": "related"\n  }\n}\n')))),(0,i.kt)("p",null,"In Strapi v4, a morph table is created for every entity/morph relation defined in the schema. If a single entity has 2 morph relations, 2 different tables are created and named using the following format: ",(0,i.kt)("inlineCode",{parentName:"p"},"entity_attribute_morphs"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Database structures:")),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("img",{src:"/img/assets/data-migration/v3-morph-many.png"})),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("img",{src:"/img/assets/data-migration/v4-morph-many.png"}))),(0,i.kt)("h2",{id:"circular-relations"},"Circular relations"),(0,i.kt)("p",null,"Circular relations are relations that point to the same entity (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"article")," \u2192 ",(0,i.kt)("inlineCode",{parentName:"p"},"article"),"). In the schema definitions, circular relations are defined the same way as other relations."),(0,i.kt)("p",null,"In Strapi v4, ",(0,i.kt)("inlineCode",{parentName:"p"},"entity_id")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"inv_entity_id")," are used to differentiate the relation to the initial entry from the related entry in the SQL join table."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Database structures example in Strapi v4"),":"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"v4-circular-many-many.png",src:n(53304).Z,width:"430",height:"409"})),(0,i.kt)("h2",{id:"relations-to-components"},"Relations to components"),(0,i.kt)("p",null,"The schema definition for components is the same in Strapi v3 and in Strapi v4, but database structures differ."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Model schemas (attributes only):")),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "component-name": {\n    "type": "component",\n    "component": "default.comp"\n  }\n}\n'))),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "component-name": {\n    "type": "component",\n    "component": "default.comp"\n  }\n}\n')))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Database structures:")),(0,i.kt)(c,{mdxType:"Columns"},(0,i.kt)(d,{title:"Strapi v3",mdxType:"ColumnLeft"},(0,i.kt)("img",{src:"/img/assets/data-migration/v3-components.png"})),(0,i.kt)(g,{title:"Strapi v4",mdxType:"ColumnRight"},(0,i.kt)("img",{src:"/img/assets/data-migration/v4-components.png"}))))}y.isMDXComponent=!0},53304:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/v4-circular-many-many-ea0fe9c9f1ce5381b4bc81c8020a8dd0.png"}}]);