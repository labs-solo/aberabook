"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[8289,9523],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=r.createContext({}),p=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,y=u["".concat(d,".").concat(m)]||u[m]||c[m]||a;return n?r.createElement(y,o(o({ref:t},l),{},{components:n})):r.createElement(y,o({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},22830:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var r=n(83117),i=(n(67294),n(3905)),a=n(13528);const o={title:"Ordering & Pagination",description:"Use Strapi's Query Engine API to order and paginate the results of your queries.",displayed_sidebar:"devDocsSidebar"},s="Ordering & Paginating",d={unversionedId:"dev-docs/api/query-engine/order-pagination",id:"dev-docs/api/query-engine/order-pagination",title:"Ordering & Pagination",description:"Use Strapi's Query Engine API to order and paginate the results of your queries.",source:"@site/docs/dev-docs/api/query-engine/order-pagination.md",sourceDirName:"dev-docs/api/query-engine",slug:"/dev-docs/api/query-engine/order-pagination",permalink:"/aberabook/dev-docs/api/query-engine/order-pagination",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/api/query-engine/order-pagination.md",tags:[],version:"current",frontMatter:{title:"Ordering & Pagination",description:"Use Strapi's Query Engine API to order and paginate the results of your queries.",displayed_sidebar:"devDocsSidebar"},sidebar:"devDocsSidebar",previous:{title:"Populating",permalink:"/aberabook/dev-docs/api/query-engine/populating"},next:{title:"Admin panel customization",permalink:"/aberabook/dev-docs/admin-panel-customization"}},p={},l=[{value:"Ordering",id:"ordering",level:2},{value:"Single",id:"single",level:3},{value:"Multiple",id:"multiple",level:3},{value:"Relational ordering",id:"relational-ordering",level:3},{value:"Pagination",id:"pagination",level:2}],c={toc:l};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ordering--paginating"},"Ordering & Paginating"),(0,i.kt)(a.default,{mdxType:"RecommendEntityService"}),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/api/query-engine"},"Query Engine API")," offers the ability to ",(0,i.kt)("a",{parentName:"p",href:"#ordering"},"order")," and ",(0,i.kt)("a",{parentName:"p",href:"#pagination"},"paginate")," results."),(0,i.kt)("h2",{id:"ordering"},"Ordering"),(0,i.kt)("p",null,"To order results returned by the Query Engine, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"orderBy")," parameter. Results can be ordered based on a ",(0,i.kt)("a",{parentName:"p",href:"#single"},"single")," or on ",(0,i.kt)("a",{parentName:"p",href:"#multiple"},"multiple")," attributes and can also use ",(0,i.kt)("a",{parentName:"p",href:"#relational-ordering"},"relational ordering"),"."),(0,i.kt)("h3",{id:"single"},"Single"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"strapi.db.query('api::article.article').findMany({\n  orderBy: 'id',\n});\n\n// single with direction\nstrapi.db.query('api::article.article').findMany({\n  orderBy: { id: 'asc' },\n});\n")),(0,i.kt)("h3",{id:"multiple"},"Multiple"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"strapi.db.query('api::article.article').findMany({\n  orderBy: ['id', 'name'],\n});\n\n// multiple with direction\nstrapi.db.query('api::article.article').findMany({\n  orderBy: [{ title: 'asc' }, { publishedAt: 'desc' }],\n});\n")),(0,i.kt)("h3",{id:"relational-ordering"},"Relational ordering"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"strapi.db.query('api::article.article').findMany({\n  orderBy: {\n    author: {\n      name: 'asc',\n    },\n  },\n});\n")),(0,i.kt)("h2",{id:"pagination"},"Pagination"),(0,i.kt)("p",null,"To paginate results returned by the Query Engine API, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"offset")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"limit")," parameters:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"strapi.db.query('api::article.article').findMany({\n  offset: 15, \n  limit: 10,\n});\n")))}u.isMDXComponent=!0},13528:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(83117),i=(n(67294),n(3905));const a={},o=void 0,s={unversionedId:"snippets/recommend-entity-service",id:"snippets/recommend-entity-service",title:"recommend-entity-service",description:"The Entity Service API is the recommended API to interact with your application's database. Only use QueryEngine if EntityService does not cover your use case.",source:"@site/docs/snippets/recommend-entity-service.md",sourceDirName:"snippets",slug:"/snippets/recommend-entity-service",permalink:"/aberabook/snippets/recommend-entity-service",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/snippets/recommend-entity-service.md",tags:[],version:"current",frontMatter:{}},d={},p=[],l={toc:p};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,":::strapi Have you considered the Entity Service API?\nThe ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/api/entity-service"},"Entity Service API")," is the recommended API to interact with your application's database. Only use QueryEngine if EntityService does not cover your use case.\n:::"))}c.isMDXComponent=!0}}]);