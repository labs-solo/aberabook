"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[4300],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),s=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=s(a),c=r,g=m["".concat(o,".").concat(c)]||m[c]||u[c]||l;return a?n.createElement(g,p(p({ref:t},d),{},{components:a})):n.createElement(g,p({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,p=new Array(l);p[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,p[1]=i;for(var s=2;s<l;s++)p[s]=a[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},81547:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>k,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var n=a(83117),r=(a(67294),a(3905));const l={title:"Plugin creation & setup",description:"Learn how to create a Strapi plugin and how to start the development servers"},p="Plugin creation and setup",i={unversionedId:"dev-docs/plugins/development/create-a-plugin",id:"dev-docs/plugins/development/create-a-plugin",title:"Plugin creation & setup",description:"Learn how to create a Strapi plugin and how to start the development servers",source:"@site/docs/dev-docs/plugins/development/create-a-plugin.md",sourceDirName:"dev-docs/plugins/development",slug:"/dev-docs/plugins/development/create-a-plugin",permalink:"/aberabook/dev-docs/plugins/development/create-a-plugin",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/plugins/development/create-a-plugin.md",tags:[],version:"current",frontMatter:{title:"Plugin creation & setup",description:"Learn how to create a Strapi plugin and how to start the development servers"}},o={},s=[{value:"Create the plugin using the CLI generator",id:"create-the-plugin-using-the-cli-generator",level:2},{value:"Enable the plugin",id:"enable-the-plugin",level:2},{value:"Install dependencies, build the admin panel, and start servers",id:"install-dependencies-build-the-admin-panel-and-start-servers",level:2},{value:"Servers and hot reloading",id:"servers-and-hot-reloading",level:3},{value:"Start only the backend server",id:"start-only-the-backend-server",level:4},{value:"Start both the backend and admin panel servers",id:"start-both-the-backend-and-admin-panel-servers",level:4}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},u=d("Tabs"),m=d("TabItem"),c=d("PluginsConfigurationFile"),g=d("HeadlessCms"),h={toc:s};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"plugin-creation-and-setup"},"Plugin creation and setup"),(0,r.kt)("p",null,"To start developing a Strapi plugin, you need to:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"create the plugin,"),(0,r.kt)("li",{parentName:"ol"},"enable the plugin,"),(0,r.kt)("li",{parentName:"ol"},"install dependencies, build the admin panel, and start the server(s).")),(0,r.kt)("admonition",{type:"prerequisites"},(0,r.kt)("p",{parentName:"admonition"},"You created a Strapi project."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Use the CLI to create a project:"),(0,r.kt)("p",{parentName:"admonition"},"Run the corresponding command in a terminal window, replacing ",(0,r.kt)("inlineCode",{parentName:"p"},"my-project")," with the name of your choice:"),(0,r.kt)(u,{groupId:"yarn-npm",mdxType:"Tabs"},(0,r.kt)(m,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn create strapi-app my-project --quickstart\n"))),(0,r.kt)(m,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx create-strapi-app@latest my-project --quickstart\n")))),(0,r.kt)("p",{parentName:"admonition"},"More details can be found in the ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/installation/cli"},"CLI installation guide"),"."))),(0,r.kt)("h2",{id:"create-the-plugin-using-the-cli-generator"},"Create the plugin using the CLI generator"),(0,r.kt)("p",null,"The fastest way to create a Strapi plugin is to use the CLI generator. To do so:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Navigate to the root of an existing Strapi project, or create a new one.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run the following command in a terminal window to start the interactive CLI:"),(0,r.kt)(u,{groupId:"yarn-npm",mdxType:"Tabs"},(0,r.kt)(m,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"  yarn strapi generate plugin\n"))),(0,r.kt)(m,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm run strapi generate plugin\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Choose either ",(0,r.kt)("inlineCode",{parentName:"p"},"JavaScript")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"TypeScript")," for the plugin language."))),(0,r.kt)("admonition",{title:"\ud83d\udea7 Experimental plugin CLI",type:"callout"},(0,r.kt)("p",{parentName:"admonition"},"Strapi now also offers a ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/plugins/development/plugin-cli"},"plugin CLI"),", but use it at your own risk as it's still experimental.")),(0,r.kt)("h2",{id:"enable-the-plugin"},"Enable the plugin"),(0,r.kt)("p",null,"Once the ",(0,r.kt)("inlineCode",{parentName:"p"},"strapi generate plugin")," CLI script has finished running, the minimum required code for the plugin to work is created for you, but the plugin is not enabled yet."),(0,r.kt)("p",null,"To enable a plugin:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If it does not exist already, create the ",(0,r.kt)("strong",{parentName:"p"},"plugins configuration file")," ",(0,r.kt)(c,{mdxType:"PluginsConfigurationFile"})," file at the root of the Strapi project.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enable the plugin by adding the following code to the plugins configuration file:"),(0,r.kt)(u,{mdxType:"Tabs"},(0,r.kt)(m,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./config/plugins.js"',title:'"./config/plugins.js"'},'module.exports = {\n  // ...\n  "my-plugin": {\n    // name of your plugin, kebab-cased\n    enabled: true,\n    resolve: "./src/plugins/my-plugin", // path to the plugin folder\n  },\n  // ...\n};\n'))),(0,r.kt)(m,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=./config/plugins.ts",title:"./config/plugins.ts"},'export default {\n  // ...\n  "my-plugin": {\n    enabled: true,\n    resolve: "./src/plugins/my-plugin", // path to plugin folder\n  },\n  // ...\n};\n')))))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you plan to use the plugin outside the Strapi project it was created in, move your plugin file outside the Strapi project and change the ",(0,r.kt)("inlineCode",{parentName:"p"},"resolve")," value to the absolute directory path of your plugin.")),(0,r.kt)("h2",{id:"install-dependencies-build-the-admin-panel-and-start-servers"},"Install dependencies, build the admin panel, and start servers"),(0,r.kt)("p",null,"Once the plugin code has been generated and the plugin is enabled, the next steps slighly differ depending on whether you created a vanilla JavaScript-based plugin or a TypeScript-based plugin (see ",(0,r.kt)("a",{parentName:"p",href:"#create-the-plugin-using-the-cli-generator"},"step 3")," of the CLI generator instructions)."),(0,r.kt)(u,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(m,{value:"js",label:"JavaScript-based plugin",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Navigate to the folder of the plugin.",(0,r.kt)("br",null),"If created from a Strapi project using the CLI generator, plugins are located in the ",(0,r.kt)("inlineCode",{parentName:"p"},"src/plugins")," folder (see ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/project-structure"},"project structure"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run the following command in the newly-created plugin directory to install plugin dependencies:"),(0,r.kt)(u,{groupId:"yarn-npm",mdxType:"Tabs"},(0,r.kt)(m,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"yarn\n"))),(0,r.kt)(m,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Navigate back to the Strapi project root with ",(0,r.kt)("inlineCode",{parentName:"p"},"cd ../../..")," and run the following command to build the admin panel and start the server(s):"),(0,r.kt)(u,{groupId:"yarn-npm",mdxType:"Tabs"},(0,r.kt)(m,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"yarn develop\n"))),(0,r.kt)(m,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm run develop\n"))))))),(0,r.kt)(m,{label:"TypeScript-based plugin",value:"ts",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Navigate to the folder of the plugin.",(0,r.kt)("br",null),"If created from a Strapi project using the CLI generator, plugins are located in the ",(0,r.kt)("inlineCode",{parentName:"p"},"src/plugins")," folder (see ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/project-structure"},"project structure"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run the following command in the newly-created plugin directory to install plugin dependencies:"),(0,r.kt)(u,{groupId:"yarn-npm",mdxType:"Tabs"},(0,r.kt)(m,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"yarn\n"))),(0,r.kt)(m,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Still in the plugin directory (e.g., ",(0,r.kt)("inlineCode",{parentName:"p"},"src/plugins/my-plugin"),"), run the following command:"),(0,r.kt)(u,{groupId:"yarn-npm",mdxType:"Tabs"},(0,r.kt)(m,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"yarn build\n"))),(0,r.kt)(m,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm run build\n")))),(0,r.kt)("p",{parentName:"li"},"This step transpiles the TypeScript files and outputs the JavaScript files to a ",(0,r.kt)("inlineCode",{parentName:"p"},"dist")," directory that is unique to the plugin.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Navigate back to the Strapi project root with ",(0,r.kt)("inlineCode",{parentName:"p"},"cd ../../..")," and run the following command to build the admin panel and start the server(s):"),(0,r.kt)(u,{groupId:"yarn-npm",mdxType:"Tabs"},(0,r.kt)(m,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"yarn develop\n"))),(0,r.kt)(m,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm run develop\n")))))))),(0,r.kt)("p",null,"You should now be ready to start developing your plugin."),(0,r.kt)("p",null,":::strapi What to read next?\nYou can either jump to the ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/plugins/development/plugin-structure"},"plugin structure")," documentation or read the ",(0,r.kt)("a",{parentName:"p",href:"#servers-and-hot-reloading"},"servers and hot reloading")," section to learn more about different ways to start the server.\n:::"),(0,r.kt)("h3",{id:"servers-and-hot-reloading"},"Servers and hot reloading"),(0,r.kt)("p",null,"Strapi itself is ",(0,r.kt)("strong",{parentName:"p"},"headless")," ",(0,r.kt)(g,{mdxType:"HeadlessCms"}),". The admin panel is completely separate from the server."),(0,r.kt)("mermaid",{value:"graph LR\n    A{Server} --\x3e|Axios instance| B{Admin Panel}\n    B --\x3e A"}),(0,r.kt)("p",null,"The server can be started in 2 different ways: you can run the backend server only or start both the server and admin panel servers."),(0,r.kt)("h4",{id:"start-only-the-backend-server"},"Start only the backend server"),(0,r.kt)("p",null,"To start only the backend server, run the following command:"),(0,r.kt)(u,{groupId:"yarn-npm",mdxType:"Tabs"},(0,r.kt)(m,{label:"Yarn",value:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn develop\n"))),(0,r.kt)(m,{label:"NPM",value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run develop\n")))),(0,r.kt)("p",null,"This will run the server on ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost:1337")," and enable hot reloading only on the back-end server, i.e. it will only auto-reload when changes are made to the server. If you are only doing development in the ",(0,r.kt)("inlineCode",{parentName:"p"},"./server")," directory of your plugin, this will be faster."),(0,r.kt)("h4",{id:"start-both-the-backend-and-admin-panel-servers"},"Start both the backend and admin panel servers"),(0,r.kt)("p",null,"If you are doing development on both the ",(0,r.kt)("inlineCode",{parentName:"p"},"/server")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"/admin")," directories of your plugin, run the following command:"),(0,r.kt)(u,{groupId:"yarn-npm",mdxType:"Tabs"},(0,r.kt)(m,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn develop --watch-admin\n"))),(0,r.kt)(m,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run develop -- --watch-admin\n")))),(0,r.kt)("p",null,"This will run the server on ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost:1337")," and enable hot reloading on both the back-end and front-end servers, i.e.it will auto-reload when changes are made to the server or the admin panel of Strapi."))}k.isMDXComponent=!0}}]);