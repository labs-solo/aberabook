"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[4381],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,g=d["".concat(i,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(g,l(l({ref:t},u),{},{components:n})):a.createElement(g,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},22540:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(83117),r=(n(67294),n(3905));const o={title:"GraphQL",displayed_sidebar:"devDocsSidebar",description:"Integrate Strapi with GraphQL."},l="Getting Started with GraphQL",s={unversionedId:"dev-docs/integrations/graphql",id:"dev-docs/integrations/graphql",title:"GraphQL",description:"Integrate Strapi with GraphQL.",source:"@site/docs/dev-docs/integrations/graphql.md",sourceDirName:"dev-docs/integrations",slug:"/dev-docs/integrations/graphql",permalink:"/aberabook/dev-docs/integrations/graphql",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/integrations/graphql.md",tags:[],version:"current",frontMatter:{title:"GraphQL",displayed_sidebar:"devDocsSidebar",description:"Integrate Strapi with GraphQL."},sidebar:"devDocsSidebar",previous:{title:"Go",permalink:"/aberabook/dev-docs/integrations/go"},next:{title:"Jekyll",permalink:"/aberabook/dev-docs/integrations/jekyll"}},i={},p=[{value:"Install the GraphQL plugin",id:"install-the-graphql-plugin",level:2},{value:"Fetch your Restaurant collection type",id:"fetch-your-restaurant-collection-type",level:2},{value:"Examples",id:"examples",level:3},{value:"Fetch your Category collection type",id:"fetch-your-category-collection-type",level:2},{value:"Examples",id:"examples-1",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},c=u("Tabs"),d=u("TabItem"),m=u("ApiCall"),g=u("Request"),h=u("Response"),y={toc:p};function f(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started-with-graphql"},"Getting Started with GraphQL"),(0,r.kt)("p",null,"This integration guide follows the ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/quick-start"},"Quick Start Guide"),' and assumes you have you have fully completed the "Hands-on" path. You should be able to consume the API by browsing the URL ',(0,r.kt)("a",{parentName:"p",href:"http://localhost:1337/api/restaurants"},"http://localhost:1337/api/restaurants"),"."),(0,r.kt)("p",null,"If you haven't gone through the Quick Start Guide, the way you request a Strapi API with ",(0,r.kt)("a",{parentName:"p",href:"https://graphql.org/"},"GraphQL")," remains the same except that you will not fetch the same content."),(0,r.kt)("h2",{id:"install-the-graphql-plugin"},"Install the GraphQL plugin"),(0,r.kt)("p",null,"Install the GraphQL plugin in your Strapi project."),(0,r.kt)(c,{groupId:"yarn-npm",mdxType:"Tabs"},(0,r.kt)(d,{value:"yarn",label:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn strapi install graphql\n"))),(0,r.kt)(d,{value:"npm",label:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run strapi install graphql\n")))),(0,r.kt)("h2",{id:"fetch-your-restaurant-collection-type"},"Fetch your Restaurant collection type"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:1337/graphql"},"GraphQL Playground")," to fetch your content."),(0,r.kt)(m,{noSideBySide:!0,mdxType:"ApiCall"},(0,r.kt)(g,{title:"Example query",mdxType:"Request"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"query Restaurants {\n  restaurants {\n    id\n    name\n    description\n    categories {\n      name\n    }\n  }\n}\n"))),(0,r.kt)(h,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "restaurants": [\n      {\n        "id": "1",\n        "name": "Biscotte Restaurant",\n        "description": "Welcome to Biscotte restaurant! Restaurant Biscotte offers a cuisine based on fresh, quality products, often local, organic when possible, and always produced by passionate producers.",\n        "categories": [\n          {\n            "name": "French Food"\n          }\n        ]\n      }\n    ]\n  }\n}\n')))),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("p",null,"These examples do not include configuring your client with Apollo for your ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:1337/graphql"},"GraphQL endpoint"),". Please follow the associated documentation for ",(0,r.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/react/get-started/"},"React")," or ",(0,r.kt)("a",{parentName:"p",href:"https://apollo.vuejs.org/guide/installation.html#_1-apollo-client"},"Vue.js"),"."),(0,r.kt)(c,{groupId:"react-vue",mdxType:"Tabs"},(0,r.kt)(d,{value:"React",label:"React",mdxType:"TabItem"},(0,r.kt)("p",null,"Using ",(0,r.kt)("a",{parentName:"p",href:"/aberabook/dev-docs/integrations/react"},"React")," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.apollographql.com/"},"Apollo")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { gql, useQuery } from '@apollo/client';\n\nfunction Restaurants() {\n  const { loading, error, data } = useQuery(gql`\n    query Restaurants {\n      restaurants {\n        id\n        name\n        description\n        categories {\n          name\n        }\n      }\n    }\n  `);\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <ul>\n      {data.restaurants.map(restaurant => (\n        <li key={restaurant.id}>{restaurant.name}</li>\n      ))}\n    </ul>\n  );\n}\n"))),(0,r.kt)(d,{value:"Vue.js",label:"Vue.js",mdxType:"TabItem"},(0,r.kt)("p",null,"Using ",(0,r.kt)("a",{parentName:"p",href:"/aberabook/dev-docs/integrations/vue-js"},"Vue.js")," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.apollographql.com/"},"Apollo")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'<template>\n  <div>\n    <ul>\n      <li v-for="restaurant in restaurants" :key="restaurant.id">\n        {{ restaurant.name }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport gql from "graphql-tag";\n\nexport default {\n  data() {\n    return {\n      restaurants: []\n    };\n  },\n  apollo: {\n    restaurants: gql`\n      query Restaurants {\n        restaurants {\n          id\n          name\n          description\n          categories {\n            name\n          }\n        }\n      }`\n  }\n};\n<\/script>\n')))),(0,r.kt)("h2",{id:"fetch-your-category-collection-type"},"Fetch your Category collection type"),(0,r.kt)(m,{noSideBySide:!0,mdxType:"ApiCall"},(0,r.kt)(g,{title:"Example request",mdxType:"Request"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"query Category {\n  category(id: 1) {\n    id\n    name\n    restaurants {\n      id\n      name\n      description\n    }\n  }\n}\n"))),(0,r.kt)(h,{title:"Example response",mdxType:"Response"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "category": {\n      "id": "1",\n      "name": "French Food",\n      "restaurants": [\n        {\n          "id": "1",\n          "name": "Biscotte Restaurant",\n          "description": "Welcome to Biscotte restaurant! Restaurant Biscotte offers a cuisine based on fresh, quality products, often local, organic when possible, and always produced by passionate producers."\n        }\n      ]\n    }\n  }\n}\n')))),(0,r.kt)("h2",{id:"examples-1"},"Examples"),(0,r.kt)(c,{groupId:"react-vue",mdxType:"Tabs"},(0,r.kt)(d,{value:"React",label:"React",mdxType:"TabItem"},(0,r.kt)("p",null,"Using ",(0,r.kt)("a",{parentName:"p",href:"/aberabook/dev-docs/integrations/react"},"React")," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.apollographql.com/"},"Apollo")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { gql, useQuery } from '@apollo/client';\n\nfunction Category({ id }) {\n  const { loading, error, data } = useQuery(\n    gql`\n      query Category($id: ID!) {\n        category(id: $id) {\n          id\n          name\n          restaurants {\n            id\n            name\n            description\n          }\n        }\n      }\n    `,\n    { variables: { id } }\n  );\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <div>\n      <h1>{data.category.name}</h1>\n      <ul>\n        {data.category.restaurants.map(restaurant => (\n          <li key={restaurant.id}>{restaurant.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"))),(0,r.kt)(d,{value:"Vue.js",label:"Vue.js",mdxType:"TabItem"},(0,r.kt)("p",null,"Using ",(0,r.kt)("a",{parentName:"p",href:"/aberabook/dev-docs/integrations/vue-js"},"Vue.js")," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.apollographql.com/"},"Apollo")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'<template>\n  <div>\n    <h1>{{ category.name }}\n    <ul>\n      <li v-for="restaurant in category.restaurants" :key="restaurant.id">\n        {{ restaurant.name }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport gql from "graphql-tag";\n\nexport default {\n  data() {\n    return {\n      category: {},\n      routeParam: this.$route.params.id\n    };\n  },\n  apollo: {\n    category: {\n      query: gql`\n      query Category($id: ID!) {\n        category(id: $id) {\n          id\n          name\n          restaurants {\n            id\n            name\n            description\n          }\n        }\n      }\n      `,\n      variables() {\n        return {\n          id: this.routeParam\n        };\n      }\n    }\n  }\n};\n<\/script>\n')))))}f.isMDXComponent=!0}}]);