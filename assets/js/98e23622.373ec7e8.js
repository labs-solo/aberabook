"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[1589,7553],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=s(t),u=o,k=m["".concat(p,".").concat(u)]||m[u]||c[u]||i;return t?a.createElement(k,r(r({ref:n},d),{},{components:t})):a.createElement(k,r({ref:n},d))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var s=2;s<i;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},68465:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var a=t(83117),o=(t(67294),t(3905)),i=t(34190);const r={title:"Docker",displayed_sidebar:"devDocsSidebar",description:"Quickly create a Docker container from a local project."},l="Running Strapi in a Docker container",p={unversionedId:"dev-docs/installation/docker",id:"dev-docs/installation/docker",title:"Docker",description:"Quickly create a Docker container from a local project.",source:"@site/docs/dev-docs/installation/docker.md",sourceDirName:"dev-docs/installation",slug:"/dev-docs/installation/docker",permalink:"/aberabook/dev-docs/installation/docker",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/installation/docker.md",tags:[],version:"current",frontMatter:{title:"Docker",displayed_sidebar:"devDocsSidebar",description:"Quickly create a Docker container from a local project."},sidebar:"devDocsSidebar",previous:{title:"CLI",permalink:"/aberabook/dev-docs/installation/cli"},next:{title:"Project structure",permalink:"/aberabook/dev-docs/project-structure"}},s={},d=[{value:"Development and/or Staging environments",id:"development-andor-staging-environments",level:2},{value:"Development Dockerfile",id:"development-dockerfile",level:3},{value:"(Optional) Docker Compose",id:"optional-docker-compose",level:3},{value:"(Optional) .dockerignore",id:"optional-dockerignore",level:3},{value:"Why Use .dockerignore?",id:"why-use-dockerignore",level:4},{value:"Security",id:"security",level:4},{value:"Cleaner Images",id:"cleaner-images",level:4},{value:"Reduced Image Size",id:"reduced-image-size",level:4},{value:"Production Environments",id:"production-environments",level:2},{value:"Production Dockerfile",id:"production-dockerfile",level:3},{value:"Building the production container",id:"building-the-production-container",level:3},{value:"(Optional) Publishing the container to a registry",id:"optional-publishing-the-container-to-a-registry",level:3},{value:"Community tools",id:"community-tools",level:2},{value:"@strapi-community/dockerize",id:"strapi-communitydockerize",level:3},{value:"@strapi-community/deployify",id:"strapi-communitydeployify",level:3},{value:"Docker FAQ",id:"docker-faq",level:2},{value:"Why doesn&#39;t Strapi provide official Docker images?",id:"why-doesnt-strapi-provide-official-docker-images",level:3},{value:"Why do we have different Dockerfiles for development and production?",id:"why-do-we-have-different-dockerfiles-for-development-and-production",level:3}],c=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",n)},m=c("Tabs"),u=c("TabItem"),k={toc:d};function g(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"running-strapi-in-a-docker-container"},"Running Strapi in a Docker container"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Strapi does not build any official container images. The following instructions are provided as a courtesy to the community. If you have any questions please reach out on ",(0,o.kt)("a",{parentName:"p",href:"https://discord.strapi.io"},"Discord"),".")),(0,o.kt)("admonition",{type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Strapi applications are not meant to be connected to a pre-existing database, not created by a Strapi application, nor connected to a Strapi v3 database. The Strapi team will not support such attempts. Attempting to connect to an unsupported database may, and most likely will, result in lost data such as dropped tables.")),(0,o.kt)("p",null,"The following documentation will guide you through building a custom ",(0,o.kt)("a",{parentName:"p",href:"https://www.docker.com/"},"Docker")," container with an existing Strapi project."),(0,o.kt)("p",null,"Docker is an open platform that allows developing, shipping, and running applications by using containers (i.e. packages containing all the parts an application needs to function, such as libraries and dependencies). Containers are isolated from each other and bundle their own software, libraries, and configuration files; they can communicate with each other through well-defined channels."),(0,o.kt)("admonition",{type:"prerequisites"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.docker.com/"},"Docker")," installed on your machine"),(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("a",{parentName:"li",href:"/aberabook/dev-docs/installation/cli#step-1-make-sure-requirements-are-met"},"supported version of Node.js")),(0,o.kt)("li",{parentName:"ul"},"An existing Strapi v4 project, or a new one created with the ",(0,o.kt)("a",{parentName:"li",href:"/aberabook/dev-docs/quick-start"},"Quick Start guide")),(0,o.kt)("li",{parentName:"ul"},"(",(0,o.kt)("em",{parentName:"li"},"optional"),") ",(0,o.kt)("a",{parentName:"li",href:"https://yarnpkg.com/"},"Yarn")," installed on your machine"),(0,o.kt)("li",{parentName:"ul"},"(",(0,o.kt)("em",{parentName:"li"},"optional"),") ",(0,o.kt)("a",{parentName:"li",href:"https://docs.docker.com/compose/"},"Docker Compose")," installed on your machine"))),(0,o.kt)("h2",{id:"development-andor-staging-environments"},"Development and/or Staging environments"),(0,o.kt)("p",null,"For working with Strapi locally on your host machine you can use the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/reference/builder/"},"Dockerfile"),", and if needed the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/compose-file/"},"docker-compose.yml")," can also be used to start up a database container."),(0,o.kt)("p",null,"Both methods require an existing Strapi project or a new one created (see ",(0,o.kt)("a",{parentName:"p",href:"/aberabook/dev-docs/quick-start"},"Quick Start guide"),")."),(0,o.kt)("h3",{id:"development-dockerfile"},"Development Dockerfile"),(0,o.kt)("p",null,"The following ",(0,o.kt)("inlineCode",{parentName:"p"},"Dockerfile")," can be used to build a non-production Docker image for a Strapi project."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"If you are using ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose"),", you can skip setting the environment variables manually, as they will be set in the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file or a ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," file.")),(0,o.kt)(i.default,{components:t.components,mdxType:"DockerEnvTable"}),(0,o.kt)("p",null,"For more information on the ",(0,o.kt)("inlineCode",{parentName:"p"},"Dockerfile")," and its commands, please refer to the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/reference/commandline/cli/"},"official Docker documentation"),"."),(0,o.kt)("p",null,"Sample ",(0,o.kt)("inlineCode",{parentName:"p"},"Dockerfile"),":"),(0,o.kt)(m,{groupId:"yarn-npm",mdxType:"Tabs"},(0,o.kt)(u,{value:"yarn",label:"yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dockerfile",metastring:'title="./Dockerfile"',title:'"./Dockerfile"'},'FROM node:18-alpine3.18\n# Installing libvips-dev for sharp Compatibility\nRUN apk update && apk add --no-cache build-base gcc autoconf automake zlib-dev libpng-dev nasm bash vips-dev git\nARG NODE_ENV=development\nENV NODE_ENV=${NODE_ENV}\n\nWORKDIR /opt/\nCOPY package.json yarn.lock ./\nRUN yarn global add node-gyp\nRUN yarn config set network-timeout 600000 -g && yarn install\nENV PATH /opt/node_modules/.bin:$PATH\n\nWORKDIR /opt/app\nCOPY . .\nRUN chown -R node:node /opt/app\nUSER node\nRUN ["yarn", "build"]\nEXPOSE 1337\nCMD ["yarn", "develop"]\n'))),(0,o.kt)(u,{value:"npm",label:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dockerfile",metastring:'title="./Dockerfile"',title:'"./Dockerfile"'},'FROM node:18-alpine\n# Installing libvips-dev for sharp Compatibility\nRUN apk update && apk add --no-cache build-base gcc autoconf automake zlib-dev libpng-dev nasm bash vips-dev git\nARG NODE_ENV=development\nENV NODE_ENV=${NODE_ENV}\n\nWORKDIR /opt/\nCOPY package.json package-lock.json ./\nRUN npm install -g node-gyp\nRUN npm config set fetch-retry-maxtimeout 600000 -g && npm install\nENV PATH /opt/node_modules/.bin:$PATH\n\nWORKDIR /opt/app\nCOPY . .\nRUN chown -R node:node /opt/app\nUSER node\nRUN ["npm", "run", "build"]\nEXPOSE 1337\nCMD ["npm", "run", "develop"]\n\n')))),(0,o.kt)("h3",{id:"optional-docker-compose"},"(Optional) Docker Compose"),(0,o.kt)("p",null,"The following ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," can be used to start up a database container and a Strapi container along with a shared network for communication between the two."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"For more information about running Docker compose and its commands, please refer to the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/"},"Docker Compose documentation"),".")),(0,o.kt)("p",null,"Sample ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),":"),(0,o.kt)(m,{groupId:"databases",mdxType:"Tabs"},(0,o.kt)(u,{value:"mysql",label:"MySQL",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="./docker-compose.yml"',title:'"./docker-compose.yml"'},'version: "3"\nservices:\n  strapi:\n    container_name: strapi\n    build: .\n    image: strapi:latest\n    restart: unless-stopped\n    env_file: .env\n    environment:\n      DATABASE_CLIENT: ${DATABASE_CLIENT}\n      DATABASE_HOST: strapiDB\n      DATABASE_PORT: ${DATABASE_PORT}\n      DATABASE_NAME: ${DATABASE_NAME}\n      DATABASE_USERNAME: ${DATABASE_USERNAME}\n      DATABASE_PASSWORD: ${DATABASE_PASSWORD}\n      JWT_SECRET: ${JWT_SECRET}\n      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}\n      APP_KEYS: ${APP_KEYS}\n      NODE_ENV: ${NODE_ENV}\n    volumes:\n      - ./config:/opt/app/config\n      - ./src:/opt/app/src\n      - ./package.json:/opt/package.json\n      - ./yarn.lock:/opt/yarn.lock\n      - ./.env:/opt/app/.env\n      - ./public/uploads:/opt/app/public/uploads\n    ports:\n      - "1337:1337"\n    networks:\n      - strapi\n    depends_on:\n      - strapiDB\n\n  strapiDB:\n    container_name: strapiDB\n    platform: linux/amd64 #for platform error on Apple M1 chips\n    restart: unless-stopped\n    env_file: .env\n    image: mysql:5.7\n    command: --default-authentication-plugin=mysql_native_password\n    environment:\n      MYSQL_USER: ${DATABASE_USERNAME}\n      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}\n      MYSQL_PASSWORD: ${DATABASE_PASSWORD}\n      MYSQL_DATABASE: ${DATABASE_NAME}\n    volumes:\n      - strapi-data:/var/lib/mysql\n      #- ./data:/var/lib/mysql # if you want to use a bind folder\n    ports:\n      - "3306:3306"\n    networks:\n      - strapi\n\nvolumes:\n  strapi-data:\n\nnetworks:\n  strapi:\n    name: Strapi\n    driver: bridge\n'))),(0,o.kt)(u,{value:"mariadb",label:"MariaDB",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="./docker-compose.yml"',title:'"./docker-compose.yml"'},'version: "3"\nservices:\n  strapi:\n    container_name: strapi\n    build: .\n    image: strapi:latest\n    restart: unless-stopped\n    env_file: .env\n    environment:\n      DATABASE_CLIENT: ${DATABASE_CLIENT}\n      DATABASE_HOST: strapiDB\n      DATABASE_PORT: ${DATABASE_PORT}\n      DATABASE_NAME: ${DATABASE_NAME}\n      DATABASE_USERNAME: ${DATABASE_USERNAME}\n      DATABASE_PASSWORD: ${DATABASE_PASSWORD}\n      JWT_SECRET: ${JWT_SECRET}\n      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}\n      APP_KEYS: ${APP_KEYS}\n      NODE_ENV: ${NODE_ENV}\n    volumes:\n      - ./config:/opt/app/config\n      - ./src:/opt/app/src\n      - ./package.json:/opt/package.json\n      - ./yarn.lock:/opt/yarn.lock\n      - ./.env:/opt/app/.env\n      - ./public/uploads:/opt/app/public/uploads\n    ports:\n      - "1337:1337"\n    networks:\n      - strapi\n    depends_on:\n      - strapiDB\n\n  strapiDB:\n    container_name: strapiDB\n    platform: linux/amd64 #for platform error on Apple M1 chips\n    restart: unless-stopped\n    env_file: .env\n    image: mariadb:latest\n    environment:\n      MYSQL_USER: ${DATABASE_USERNAME}\n      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}\n      MYSQL_PASSWORD: ${DATABASE_PASSWORD}\n      MYSQL_DATABASE: ${DATABASE_NAME}\n    volumes:\n      - strapi-data:/var/lib/mysql\n      #- ./data:/var/lib/mysql # if you want to use a bind folder\n    ports:\n      - "3306:3306"\n    networks:\n      - strapi\n\nvolumes:\n  strapi-data:\n\nnetworks:\n  strapi:\n    name: Strapi\n    driver: bridge\n'))),(0,o.kt)(u,{value:"postgresql",label:"PostgreSQL",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="./docker-compose.yml"',title:'"./docker-compose.yml"'},'version: "3"\nservices:\n  strapi:\n    container_name: strapi\n    build: .\n    image: strapi:latest\n    restart: unless-stopped\n    env_file: .env\n    environment:\n      DATABASE_CLIENT: ${DATABASE_CLIENT}\n      DATABASE_HOST: strapiDB\n      DATABASE_PORT: ${DATABASE_PORT}\n      DATABASE_NAME: ${DATABASE_NAME}\n      DATABASE_USERNAME: ${DATABASE_USERNAME}\n      DATABASE_PASSWORD: ${DATABASE_PASSWORD}\n      JWT_SECRET: ${JWT_SECRET}\n      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}\n      APP_KEYS: ${APP_KEYS}\n      NODE_ENV: ${NODE_ENV}\n    volumes:\n      - ./config:/opt/app/config\n      - ./src:/opt/app/src\n      - ./package.json:/opt/package.json\n      - ./yarn.lock:/opt/yarn.lock\n      - ./.env:/opt/app/.env\n      - ./public/uploads:/opt/app/public/uploads\n    ports:\n      - "1337:1337"\n    networks:\n      - strapi\n    depends_on:\n      - strapiDB\n\n  strapiDB:\n    container_name: strapiDB\n    platform: linux/amd64 #for platform error on Apple M1 chips\n    restart: unless-stopped\n    env_file: .env\n    image: postgres:12.0-alpine\n    environment:\n      POSTGRES_USER: ${DATABASE_USERNAME}\n      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}\n      POSTGRES_DB: ${DATABASE_NAME}\n    volumes:\n      - strapi-data:/var/lib/postgresql/data/ #using a volume\n      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder\n\n    ports:\n      - "5432:5432"\n    networks:\n      - strapi\n\nvolumes:\n  strapi-data:\n\nnetworks:\n  strapi:\n    name: Strapi\n    driver: bridge\n')))),(0,o.kt)("h3",{id:"optional-dockerignore"},"(Optional) .dockerignore"),(0,o.kt)("p",null,"When building Docker images, it's essential to include only the files necessary for running the application inside the container. This is where the ",(0,o.kt)("inlineCode",{parentName:"p"},".dockerignore")," file comes into play. Similar to how ",(0,o.kt)("inlineCode",{parentName:"p"},".gitignore")," works for Git, specifying files and directories that should not be tracked or uploaded, ",(0,o.kt)("inlineCode",{parentName:"p"},".dockerignore")," tells Docker which files and directories to ignore when building an image."),(0,o.kt)("p",null,"Sample ",(0,o.kt)("inlineCode",{parentName:"p"},".dockerignore"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},".tmp/\n.cache/\n.git/\n.env\nbuild/\nnode_modules/\n# Ignoring folders that might be used in starter templates\ndata/\nbackup/\n")),(0,o.kt)("h4",{id:"why-use-dockerignore"},"Why Use .dockerignore?"),(0,o.kt)("p",null,"Including unnecessary files in a Docker build context can significantly slow down the build process. By excluding files and directories like .tmp, .cache, .git, build, node_modules, and .env through .dockerignore, the amount of data sent to the Docker daemon is reduced. This leads to faster build times since Docker has fewer files to process and include in the image."),(0,o.kt)("h4",{id:"security"},"Security"),(0,o.kt)("p",null,"Excluding files and directories can also enhance the security of the Docker image. Sensitive files, such as ",(0,o.kt)("inlineCode",{parentName:"p"},".env"),", which might contain environment-specific secrets or credentials, should not be included in Docker images. This prevents accidental exposure of sensitive information."),(0,o.kt)("h4",{id:"cleaner-images"},"Cleaner Images"),(0,o.kt)("p",null,"A Docker image cluttered with unnecessary files can lead to potential confusion and issues, especially when the image is shared across teams or used in production. By keeping the image clean and focused only on the essentials, it becomes easier to maintain and troubleshoot."),(0,o.kt)("h4",{id:"reduced-image-size"},"Reduced Image Size"),(0,o.kt)("p",null,"Smaller Docker images are more efficient to store, transfer, and launch. By excluding non-essential files, the final image size can be significantly reduced, leading to quicker pull and start times, especially in distributed and cloud environments."),(0,o.kt)("h2",{id:"production-environments"},"Production Environments"),(0,o.kt)("p",null,"The Docker image in production is different from the one used in development/staging environments because of the differences in the admin build process in addition to the command used to run the application. Typical production environments will use a reverse proxy to serve the application and the admin panel. The Docker image is built with the production build of the admin panel and the command used to run the application is ",(0,o.kt)("inlineCode",{parentName:"p"},"strapi start"),"."),(0,o.kt)("p",null,"Once the ",(0,o.kt)("a",{parentName:"p",href:"#production-dockerfile"},"Dockerfile")," is created, the ",(0,o.kt)("a",{parentName:"p",href:"#building-the-production-container"},"production container")," can be built. Optionally, the container can be published to a ",(0,o.kt)("a",{parentName:"p",href:"#optional-publishing-the-container-to-a-registry"},"registry")," to make it available to the community. ",(0,o.kt)("a",{parentName:"p",href:"#community-tools"},"Community tools")," can help you\nin the process of building a production Docker image and deploying it to a production environment."),(0,o.kt)("h3",{id:"production-dockerfile"},"Production Dockerfile"),(0,o.kt)("p",null,"The following ",(0,o.kt)("inlineCode",{parentName:"p"},"Dockerfile")," can be used to build a production Docker image for a Strapi project."),(0,o.kt)(m,{groupId:"yarn-npm",mdxType:"Tabs"},(0,o.kt)(u,{value:"yarn",label:"yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dockerfile",metastring:'title="./Dockerfile.prod"',title:'"./Dockerfile.prod"'},'# Creating multi-stage build for production\nFROM node:18-alpine as build\nRUN apk update && apk add --no-cache build-base gcc autoconf automake zlib-dev libpng-dev vips-dev git > /dev/null 2>&1\nENV NODE_ENV=production\n\nWORKDIR /opt/\nCOPY package.json yarn.lock ./\nRUN yarn global add node-gyp\nRUN yarn config set network-timeout 600000 -g && yarn install --production\nENV PATH /opt/node_modules/.bin:$PATH\nWORKDIR /opt/app\nCOPY . .\nRUN yarn build\n\n# Creating final production image\nFROM node:18-alpine\nRUN apk add --no-cache vips-dev\nENV NODE_ENV=production\nWORKDIR /opt/\nCOPY --from=build /opt/node_modules ./node_modules\nWORKDIR /opt/app\nCOPY --from=build /opt/app ./\nENV PATH /opt/node_modules/.bin:$PATH\n\nRUN chown -R node:node /opt/app\nUSER node\nEXPOSE 1337\nCMD ["yarn", "start"]\n'))),(0,o.kt)(u,{value:"npm",label:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dockerfile",metastring:'title="./Dockerfile.prod"',title:'"./Dockerfile.prod"'},'# Creating multi-stage build for production\nFROM node:18-alpine as build\nRUN apk update && apk add --no-cache build-base gcc autoconf automake zlib-dev libpng-dev vips-dev git > /dev/null 2>&1\nARG NODE_ENV=production\nENV NODE_ENV=${NODE_ENV}\n\nWORKDIR /opt/\nCOPY package.json package-lock.json ./\nRUN npm install -g node-gyp\nRUN npm config set fetch-retry-maxtimeout 600000 -g && npm install --only=production\nENV PATH /opt/node_modules/.bin:$PATH\nWORKDIR /opt/app\nCOPY . .\nRUN npm run build\n\n# Creating final production image\nFROM node:18-alpine\nRUN apk add --no-cache vips-dev\nARG NODE_ENV=production\nENV NODE_ENV=${NODE_ENV}\nWORKDIR /opt/\nCOPY --from=build /opt/node_modules ./node_modules\nWORKDIR /opt/app\nCOPY --from=build /opt/app ./\nENV PATH /opt/node_modules/.bin:$PATH\n\nRUN chown -R node:node /opt/app\nUSER node\nEXPOSE 1337\nCMD ["npm", "run", "start"]\n\n')))),(0,o.kt)("h3",{id:"building-the-production-container"},"Building the production container"),(0,o.kt)("p",null,"Building production Docker images can have several options. The following example uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker build")," command to build a production Docker image for a Strapi project. However, it is recommended you review the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/reference/commandline/build/"},"Docker documentation")," for more information on building Docker images with more advanced options."),(0,o.kt)("p",null,"To build a production Docker image for a Strapi project, run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker build \\\n  --build-arg NODE_ENV=production \\\n  # --build-arg STRAPI_URL=https://api.example.com \\ # Uncomment to set the Strapi Server URL\n  -t mystrapiapp:latest \\ # Replace with your image name\n  -f Dockerfile.prod .\n")),(0,o.kt)("h3",{id:"optional-publishing-the-container-to-a-registry"},"(Optional) Publishing the container to a registry"),(0,o.kt)("p",null,"After you have built a production Docker image for a Strapi project, you can publish the image to a Docker registry. Ideally for production usage this should be a private registry as your Docker image will contain sensitive information."),(0,o.kt)("p",null,"Depending on your hosting provider you may need to use a different command to publish your image. It is recommended you review the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/reference/commandline/push/"},"Docker documentation")," for more information on publishing Docker images with more advanced options."),(0,o.kt)("p",null,"Some popular hosting providers are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://aws.amazon.com/ecr/"},"AWS ECR")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://azure.microsoft.com/en-us/services/container-registry/"},"Azure Container Registry")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://cloud.google.com/container-registry"},"GCP Container Registry")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.digitalocean.com/products/container-registry/"},"Digital Ocean Container Registry")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.ibm.com/cloud/container-registry"},"IBM Cloud Container Registry")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry"},"GitHub Container Registry")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.gitlab.com/ee/user/packages/container_registry/"},"Gitlab Container Registry"))),(0,o.kt)("h2",{id:"community-tools"},"Community tools"),(0,o.kt)("p",null,"Several community tools are available to assist you in deploying Strapi to various cloud providers and setting up Docker in a development or production environment."),(0,o.kt)("p",null,"We strongly support our community efforts and encourage you to check out the following tools, please help support them by contributing to their development."),(0,o.kt)("p",null,"If you would like to add your tool to this list, please open a pull request on the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/strapi/documentation"},"Strapi documentation repository"),"."),(0,o.kt)("h3",{id:"strapi-communitydockerize"},"@strapi-community/dockerize"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@strapi-community/dockerize")," package is a CLI tool that can be used to generate a ",(0,o.kt)("inlineCode",{parentName:"p"},"Dockerfile")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file for a Strapi project."),(0,o.kt)("p",null,"To get started run ",(0,o.kt)("inlineCode",{parentName:"p"},"npx @strapi-community/dockerize@latest")," within an existing Strapi project folder and follow the CLI prompts."),(0,o.kt)("p",null,"For more information please see the official ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/strapi-community/strapi-tool-dockerize"},"GitHub repository")," or the ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@strapi-community/dockerize"},"npm package"),"."),(0,o.kt)("h3",{id:"strapi-communitydeployify"},"@strapi-community/deployify"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@strapi-community/deployify")," package is a CLI tool that can be used to deploy your application to various cloud providers and hosting services. Several of these also support deploying a Strapi project with a Docker container and will call on the ",(0,o.kt)("inlineCode",{parentName:"p"},"@strapi-community/dockerize")," package to generate the required files if they don't already exist."),(0,o.kt)("p",null,"To get started run ",(0,o.kt)("inlineCode",{parentName:"p"},"npx @strapi-community/deployify@latest")," within an existing Strapi project folder and follow the CLI prompts."),(0,o.kt)("p",null,"For more information please see the official ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/strapi-community/strapi-tool-deployify"},"GitHub repository")," or the ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@strapi-community/deployify"},"npm package"),"."),(0,o.kt)("h2",{id:"docker-faq"},"Docker FAQ"),(0,o.kt)("h3",{id:"why-doesnt-strapi-provide-official-docker-images"},"Why doesn't Strapi provide official Docker images?"),(0,o.kt)("p",null,"Strapi is a framework that can be used to build many different types of applications. As such, it is not possible to provide a single Docker image that can be used for all use cases."),(0,o.kt)("h3",{id:"why-do-we-have-different-dockerfiles-for-development-and-production"},"Why do we have different Dockerfiles for development and production?"),(0,o.kt)("p",null,"The primary reason for various Docker images is due to the way our Admin panel is built. The Admin panel is built using React and is bundled into the Strapi application during the build process. This means that the Strapi backend is acting as a web server to serve the Admin panel and thus certain environment variables are statically compiled into the built Admin panel."),(0,o.kt)("p",null,"It is generally considered a best practice with Strapi to build different Docker images for development and production environments. This is because the development environment is not optimized for performance and is not intended to be exposed to the public internet."))}g.isMDXComponent=!0},34190:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=t(83117),o=(t(67294),t(3905));const i={},r=void 0,l={unversionedId:"snippets/docker-env-table",id:"snippets/docker-env-table",title:"docker-env-table",description:"The following environment variables are required in order to run Strapi in a Docker container:",source:"@site/docs/snippets/docker-env-table.md",sourceDirName:"snippets",slug:"/snippets/docker-env-table",permalink:"/aberabook/snippets/docker-env-table",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/snippets/docker-env-table.md",tags:[],version:"current",frontMatter:{}},p={},s=[],d={toc:s};function c(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The following environment variables are required in order to run Strapi in a Docker container:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Variable name"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"NODE_ENV")),(0,o.kt)("td",{parentName:"tr",align:null},"The environment in which the application is running.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"DATABASE_CLIENT")),(0,o.kt)("td",{parentName:"tr",align:null},"The database client to use.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"DATABASE_HOST")),(0,o.kt)("td",{parentName:"tr",align:null},"The database host.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"DATABASE_PORT")),(0,o.kt)("td",{parentName:"tr",align:null},"The database port.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"DATABASE_NAME")),(0,o.kt)("td",{parentName:"tr",align:null},"The database name.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"DATABASE_USERNAME")),(0,o.kt)("td",{parentName:"tr",align:null},"The database username.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"DATABASE_PASSWORD")),(0,o.kt)("td",{parentName:"tr",align:null},"The database password.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"JWT_SECRET")),(0,o.kt)("td",{parentName:"tr",align:null},"The secret used to sign the JWT for the Users-Permissions plugin.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ADMIN_JWT_SECRET")),(0,o.kt)("td",{parentName:"tr",align:null},"The secret used to sign the JWT for the Admin panel.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"APP_KEYS")),(0,o.kt)("td",{parentName:"tr",align:null},"The secret keys used to sign the session cookies.")))),(0,o.kt)("p",null,"You can also set some ",(0,o.kt)("a",{parentName:"p",href:"/dev-docs/configurations/environment#strapi-s-environment-variables"},"optional environment variables"),"."))}c.isMDXComponent=!0}}]);