"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[9666],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(n),g=i,m=c["".concat(p,".").concat(g)]||c[g]||d[g]||r;return n?a.createElement(m,o(o({ref:t},s),{},{components:n})):a.createElement(m,o({ref:t},s))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8050:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=n(83117),i=(n(67294),n(3905));const r={title:"How to use the Plugin CLI to build and publish a Strapi plugin",description:"Learn how to use the Plugin CLI to build and publish a Strapi plugin",sidebar_label:"Use the Plugin CLI",displayed_sidebar:"devDocsSidebar"},o="How to use the Plugin CLI to create and publish a Strapi plugin",l={unversionedId:"dev-docs/plugins/guides/use-the-plugin-cli",id:"dev-docs/plugins/guides/use-the-plugin-cli",title:"How to use the Plugin CLI to build and publish a Strapi plugin",description:"Learn how to use the Plugin CLI to build and publish a Strapi plugin",source:"@site/docs/dev-docs/plugins/guides/use-the-plugin-cli.md",sourceDirName:"dev-docs/plugins/guides",slug:"/dev-docs/plugins/guides/use-the-plugin-cli",permalink:"/aberabook/dev-docs/plugins/guides/use-the-plugin-cli",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/plugins/guides/use-the-plugin-cli.md",tags:[],version:"current",frontMatter:{title:"How to use the Plugin CLI to build and publish a Strapi plugin",description:"Learn how to use the Plugin CLI to build and publish a Strapi plugin",sidebar_label:"Use the Plugin CLI",displayed_sidebar:"devDocsSidebar"},sidebar:"devDocsSidebar",previous:{title:"Pass data from server to admin",permalink:"/aberabook/dev-docs/plugins/guides/pass-data-from-server-to-admin"},next:{title:"Upgrade Strapi version",permalink:"/aberabook/dev-docs/update-version"}},p={},u=[{value:"Getting started with the Plugin CLI",id:"getting-started-with-the-plugin-cli",level:2},{value:"Creating the plugin",id:"creating-the-plugin",level:3},{value:"Linking the plugin to your project",id:"linking-the-plugin-to-your-project",level:3},{value:"Building the plugin for publishing",id:"building-the-plugin-for-publishing",level:3},{value:"Working with the plugin CLI in a monorepo environment",id:"working-with-the-plugin-cli-in-a-monorepo-environment",level:2}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)},d=s("Tabs"),c=s("TabItem"),g={toc:u};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-to-use-the-plugin-cli-to-create-and-publish-a-strapi-plugin"},"How to use the Plugin CLI to create and publish a Strapi plugin"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"The Plugin CLI is currently experimental.")),(0,i.kt)("p",null,"The Plugin CLI is set of commands orientated around developing plugins to use them as local plugins or to publish them on NPM and/or submit them to the Marketplace."),(0,i.kt)("p",null,"As opposed to the ",(0,i.kt)("inlineCode",{parentName:"p"},"strapi generate plugin")," command (see ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/plugins/development/create-a-plugin"},"plugin creation and setup"),") you do not need to set up a Strapi project to use the Plugin CLI."),(0,i.kt)("p",null,"The present guide covers creating a plugin from scratch, linking it to an existing Strapi project, and publishing the plugin. If you already have an existing plugin, you can instead retrofit the plugin setup to utilise the Plugin CLI commands (please refer to the ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/plugins/development/plugin-cli"},"Plugin CLI reference")," for a full list of available commands)."),(0,i.kt)("h2",{id:"getting-started-with-the-plugin-cli"},"Getting started with the Plugin CLI"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"This guide assumes you want to develop a plugin external to your Strapi project. However, the steps largely remain the same if you want to develop a plugin within your existing project. If you are not ",(0,i.kt)("a",{parentName:"p",href:"#working-with-the-plugin-cli-in-a-monorepo-environment"},"using a monorepo")," the steps are exactly the same.")),(0,i.kt)("h3",{id:"creating-the-plugin"},"Creating the plugin"),(0,i.kt)("p",null,"To create your plugin, ensure you are in the parent directory of where you want it to be created and run the following command:"),(0,i.kt)(d,{groupId:"yarn-npm",mdxType:"Tabs"},(0,i.kt)(c,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn dlx @strapi/strapi plugin:init my-strapi-plugin\n"))),(0,i.kt)(c,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx @strapi/strapi plugin:init my-strapi-plugin\n")))),(0,i.kt)("p",null,"The path ",(0,i.kt)("inlineCode",{parentName:"p"},"my-strapi-plugin")," can be replaced with whatever you want to call your plugin, including the path to where it should be created (e.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"code/strapi-plugins/my-new-strapi-plugin"),")."),(0,i.kt)("p",null,"You will be ran through a series of prompts to help you setup your plugin. If you selected yes to all options the final structure will be similar to the default ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/plugins/development/plugin-structure"},"plugin structure"),"."),(0,i.kt)("h3",{id:"linking-the-plugin-to-your-project"},"Linking the plugin to your project"),(0,i.kt)("p",null,"Once you created your plugin, you will want to register it with the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/wclr/yalc"},"yalc")," repository (it's local to your machine). To do this, run the following command:"),(0,i.kt)(d,{groupId:"yarn-npm",mdxType:"Tabs"},(0,i.kt)(c,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd my-strapi-plugin\nyarn install\nyarn link-watch\n"))),(0,i.kt)(c,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd my-strapi-plugin\nnpm install\nnpm run link-watch\n")))),(0,i.kt)("p",null,"This will then produce an output explaing how to link your plugin to your Strapi project. Open a new terminal window to do the next steps:"),(0,i.kt)(d,{groupId:"yarn-npm",mdxType:"Tabs"},(0,i.kt)(c,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd /path/to/strapi/project\nyarn dlx yalc add --link my-strapi-plugin && yarn install\n"))),(0,i.kt)(c,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd /path/to/strapi/project\nnpx yalc add --link my-strapi-plugin && npm run install\n")))),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"In the above examples we use the name of the plugin when linking it to the project. This is the name of the package, not the name of the folder.")),(0,i.kt)("p",null,"Because this plugin is installed via ",(0,i.kt)("inlineCode",{parentName:"p"},"node_modules")," you won't need to explicity add it to your ",(0,i.kt)("inlineCode",{parentName:"p"},"plugins")," ",(0,i.kt)("a",{parentName:"p",href:"/dev-docs/configurations/plugins"},"configuration file"),", so running the ",(0,i.kt)("a",{parentName:"p",href:"/aberabook/dev-docs/cli#strapi-develop"},(0,i.kt)("inlineCode",{parentName:"a"},"develop command"))," will automatically pick up your plugin. However, to improve your experience we recommend you run Strapi with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--watch-admin")," flag so that your admin panel is automatically rebuilt when you make changes to your plugin:"),(0,i.kt)(d,{groupId:"yarn-npm",mdxType:"Tabs"},(0,i.kt)(c,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn develop --watch-admin\n"))),(0,i.kt)(c,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm run develop --watch-admin\n")))),(0,i.kt)("p",null,"You are now ready to develop your plugin how you see fit! If you are making server changes, you will need to restart your server for them to take effect."),(0,i.kt)("h3",{id:"building-the-plugin-for-publishing"},"Building the plugin for publishing"),(0,i.kt)("p",null,"When you are ready to publish your plugin, you will need to build it. To do this, run the following command:"),(0,i.kt)(d,{groupId:"yarn-npm",mdxType:"Tabs"},(0,i.kt)(c,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn build && yarn verify\n"))),(0,i.kt)(c,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm run build && npm run verify\n")))),(0,i.kt)("p",null,"The above commands will not only build the plugin, but also verify that the output is valid and ready to be published. You can then publish your plugin to NPM as you would any other package."),(0,i.kt)("h2",{id:"working-with-the-plugin-cli-in-a-monorepo-environment"},"Working with the plugin CLI in a monorepo environment"),(0,i.kt)("p",null,"If you are working with a monorepo environment to develop your plugin, you don't need to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"link-watch")," command because the monorepo workspace setup will handle the symlink. You can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"watch")," command instead."),(0,i.kt)("p",null,"However, if you are writing admin code, you might add an ",(0,i.kt)("inlineCode",{parentName:"p"},"alias")," that targets the source code of your plugin to make it easier to work with within the context of the admin panel:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import path from "node:path";\n\nexport default (config, webpack) => {\n  config.resolve.alias = {\n    ...config.resolve.alias,\n    "my-strapi-plugin": path.resolve(\n      __dirname,\n      // We\'ve assumed the plugin is local.\n      "../plugins/my-strapi-plugin/admin/src"\n    ),\n  };\n\n  return config;\n};\n')),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Because the server looks at the ",(0,i.kt)("inlineCode",{parentName:"p"},"strapi-server.js")," file to import your plugin code, you must use the ",(0,i.kt)("inlineCode",{parentName:"p"},"watch")," command otherwise the code will not be transpiled and the server will not be able to find your plugin.")))}m.isMDXComponent=!0}}]);