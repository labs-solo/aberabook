"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[860],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(a),c=r,m=d["".concat(s,".").concat(c)]||d[c]||f[c]||i;return a?n.createElement(m,l(l({ref:t},p),{},{components:a})):n.createElement(m,l({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},43752:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var n=a(83117),r=(a(67294),a(3905));const i={title:"Features configuration",sidebar_label:"Features",description:"Enable experimental Strapi features",displayed_sidebar:"devDocsConfigSidebar"},l="Features configuration",o={unversionedId:"dev-docs/configurations/features",id:"dev-docs/configurations/features",title:"Features configuration",description:"Enable experimental Strapi features",source:"@site/docs/dev-docs/configurations/features.md",sourceDirName:"dev-docs/configurations",slug:"/dev-docs/configurations/features",permalink:"/aberabook/dev-docs/configurations/features",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/configurations/features.md",tags:[],version:"current",frontMatter:{title:"Features configuration",sidebar_label:"Features",description:"Enable experimental Strapi features",displayed_sidebar:"devDocsConfigSidebar"},sidebar:"devDocsConfigSidebar",previous:{title:"Single Sign-on (SSO)",permalink:"/aberabook/dev-docs/configurations/sso"},next:{title:"Configurations",permalink:"/aberabook/dev-docs/configurations"}},s={},u=[{value:"Enabling a future flag",id:"enabling-a-future-flag",level:2},{value:"Future flags API",id:"future-flags-api",level:2},{value:"Available future flags",id:"available-future-flags",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},f=p("FutureBadge"),d=p("Tabs"),c=p("TabItem"),m={toc:u};function g(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"features-configuration"},"Features configuration"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"config/features.js|ts")," file is used to enable feature flags. Currently this file only includes a ",(0,r.kt)("inlineCode",{parentName:"p"},"future")," object used to enable experimental features through ",(0,r.kt)("strong",{parentName:"p"},"future flags"),"."),(0,r.kt)("p",null,"Some incoming Strapi features are not yet ready to be shipped to all users, but Strapi still offers community users the opportunity to provide early feedback on these new features or changes. With these experimental features, developers have the flexibility to choose and integrate new features and changes into their Strapi applications as they become available in the current major version as well as assist us in shaping these new features."),(0,r.kt)("p",null,"Such experimental features are indicated by a ",(0,r.kt)(f,{mdxType:"FutureBadge"})," badge throughout the documentation and enabling these features requires enabling the corresponding future flags. Future flags differ from features that are in alpha in that future flags are disabled by default."),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"Enable future flags at your own risk. Experimental features may be subject to change or removal, may contain breaking changes, may be unstable or not fully ready for use, and some parts may still be under development or using mock data.")),(0,r.kt)("h2",{id:"enabling-a-future-flag"},"Enabling a future flag"),(0,r.kt)("p",null,"To enable a future flag:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"(",(0,r.kt)("em",{parentName:"p"},"optional"),") If the server is running, stop it with ",(0,r.kt)("inlineCode",{parentName:"p"},"Ctrl-C"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open the ",(0,r.kt)("inlineCode",{parentName:"p"},"config/features.js|ts")," file or create it if the file does not exist yet. The file will export a ",(0,r.kt)("inlineCode",{parentName:"p"},"future")," object with all the future flags to enable.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To enable a future flag, add its property name (see ",(0,r.kt)("a",{parentName:"p",href:"#available-future-flags"},"full list"),") to the ",(0,r.kt)("inlineCode",{parentName:"p"},"future")," object and ensure the property's value is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". The following example shows how to enable the ",(0,r.kt)("inlineCode",{parentName:"p"},"contentReleasesScheduling")," future flag:"),(0,r.kt)(d,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(c,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/config/features.ts"',title:'"/config/features.ts"'},"module.export = ({ env }) => ({\n  future: {\n    // You could also simply write: contentReleases: true\n    contentReleasesScheduling: env.bool('STRAPI_FUTURE_CONTENT_RELEASES_SCHEDULING', false),\n  },\n})\n\n")),(0,r.kt)("p",{parentName:"li"},"This example assumes that you have an ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," environment file at the root of your application and that the file includes the following line:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title=".env"',title:'".env"'},"STRAPI_FUTURE_CONTENT_RELEASES_SCHEDULING=true\n")),(0,r.kt)("p",{parentName:"li"},"If your environment file does not include this value, the ",(0,r.kt)("inlineCode",{parentName:"p"},"contentReleasesScheduling")," future flag property value  will default to ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," and the experimental feature will not be enabled.")),(0,r.kt)(c,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/config/features.ts"',title:'"/config/features.ts"'},"export default {\n  future: {\n    // You could also simply write: contentReleases: true\n    contentReleasesScheduling: env.bool('STRAPI_FUTURE_CONTENT_RELEASES_SCHEDULING', false),\n  },\n};\n")),(0,r.kt)("p",{parentName:"li"},"This example assumes that you have an ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," environment file at the root of your application and that the file includes the following line:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title=".env"',title:'".env"'},"STRAPI_FUTURE_CONTENT_RELEASES_SCHEDULING=true\n")),(0,r.kt)("p",{parentName:"li"},"If your environment file does not include this value, the ",(0,r.kt)("inlineCode",{parentName:"p"},"contentReleases")," future flag property value will default to ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," and the experimental feature will not be enabled.")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Rebuild the admin panel and restart the server:"),(0,r.kt)(d,{groupId:"yarn-npm",mdxType:"Tabs"},(0,r.kt)(c,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"  yarn develop\n"))),(0,r.kt)(c,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"  npm run develop\n")))))),(0,r.kt)("h2",{id:"future-flags-api"},"Future flags API"),(0,r.kt)("p",null,"Developers can use the following APIs to interact with future flags:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Features configuration is part of the ",(0,r.kt)("inlineCode",{parentName:"p"},"config")," object and can be read with ",(0,r.kt)("inlineCode",{parentName:"p"},"strapi.config.get('features')")," or with ",(0,r.kt)("inlineCode",{parentName:"p"},"strapi.features.config"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"strapi.features.future")," returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"isEnabled()")," that can be used to determine if a future flag is enabled, using the following method: ",(0,r.kt)("inlineCode",{parentName:"p"},"strapi.features.future.isEnabled('featureName')"),"."))),(0,r.kt)("h2",{id:"available-future-flags"},"Available future flags"),(0,r.kt)("p",null,"There are currently no available future flags. This section will be updated once new experimental features are available for testing."))}g.isMDXComponent=!0}}]);