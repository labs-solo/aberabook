"use strict";(self.webpackChunkstrapi_docs=self.webpackChunkstrapi_docs||[]).push([[4767,1077,8689],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),d=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},l=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=d(n),m=r,y=l["".concat(c,".").concat(m)]||l[m]||u[m]||a;return n?i.createElement(y,o(o({ref:t},p),{},{components:n})):i.createElement(y,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=l;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var d=2;d<a;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}l.displayName="MDXCreateElement"},524:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>v,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var i=n(83117),r=(n(67294),n(3905)),a=n(11165);n(41207);const o={title:"Entity Service API",description:"The Entity Service is the layer that handles Strapi's complex data structures like components and dynamic zones, and uses the Query Engine API under the hood to execute database queries.",displayed_sidebar:"devDocsSidebar"},s="Entity Service API",c={unversionedId:"dev-docs/api/entity-service",id:"dev-docs/api/entity-service",title:"Entity Service API",description:"The Entity Service is the layer that handles Strapi's complex data structures like components and dynamic zones, and uses the Query Engine API under the hood to execute database queries.",source:"@site/docs/dev-docs/api/entity-service.md",sourceDirName:"dev-docs/api",slug:"/dev-docs/api/entity-service",permalink:"/aberabook/dev-docs/api/entity-service",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/dev-docs/api/entity-service.md",tags:[],version:"current",frontMatter:{title:"Entity Service API",description:"The Entity Service is the layer that handles Strapi's complex data structures like components and dynamic zones, and uses the Query Engine API under the hood to execute database queries.",displayed_sidebar:"devDocsSidebar"},sidebar:"devDocsSidebar",previous:{title:"GraphQL API",permalink:"/aberabook/dev-docs/api/graphql"},next:{title:"CRUD operations",permalink:"/aberabook/dev-docs/api/entity-service/crud"}},d={},p=[{value:"Basic usage",id:"basic-usage",level:2},{value:"Available operations",id:"available-operations",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},l=u("CustomDocCardsWrapper"),m=u("CustomDocCard"),y={toc:p};function v(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"entity-service-api"},"Entity Service API"),(0,r.kt)("admonition",{type:"prerequisites"},(0,r.kt)("p",{parentName:"admonition"},"Before diving deeper into the Entity Service API documentation, it is recommended that you read the following introductions:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("a",{parentName:"li",href:"/dev-docs/backend-customization"},"backend customization introduction"),","),(0,r.kt)("li",{parentName:"ul"},"and the ",(0,r.kt)("a",{parentName:"li",href:"/dev-docs/api/content-api"},"Content API introduction"),"."))),(0,r.kt)("p",null,"The Strapi backend provides an Entity Service API, built on top of the ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/api/query-engine/"},"Query Engine API"),". The Entity Service is the layer that handles Strapi's complex data structures like ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/backend-customization/models#components"},"components")," and ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/backend-customization/models#dynamic-zones"},"dynamic zones"),", and uses the Query Engine API under the hood to execute database queries."),(0,r.kt)("p",null,":::strapi Entity Service API vs. Query Engine API"),(0,r.kt)(a.default,{components:n.components,mdxType:"EntityQueryKnex"}),":::",(0,r.kt)("admonition",{title:"Disambiguation: Services vs. Entity Service",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"While ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/backend-customization/services"},"services")," can use the Entity Service API, services and the Entity Service API are not directly related. You can find more information about the core elements of the Strapi back end in the ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/backend-customization"},"back-end customization")," documentation.")),(0,r.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,r.kt)("p",null,"The Entity Service is available through ",(0,r.kt)("inlineCode",{parentName:"p"},"strapi.entityService"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const entry = await strapi.entityService.findOne('api::article.article', 1, {\n  populate: { someRelation: true },\n});\n")),(0,r.kt)("h2",{id:"available-operations"},"Available operations"),(0,r.kt)("p",null,"The Entity Service API allows the following operations on entities:"),(0,r.kt)(l,{mdxType:"CustomDocCardsWrapper"},(0,r.kt)(m,{emoji:"",title:"CRUD operations",description:"Create, read, update, and delete entities with the Entity Service API.",link:"/dev-docs/api/entity-service/crud",mdxType:"CustomDocCard"}),(0,r.kt)(m,{emoji:"",title:"Filters",description:"Get exactly what you need by filtering entities with your Entity Service API queries.",link:"/dev-docs/api/entity-service/filter",mdxType:"CustomDocCard"}),(0,r.kt)(m,{emoji:"",title:"Populate",description:"Get additional data with your Entity Service API queries by populating relations.",link:"/dev-docs/api/entity-service/populate",mdxType:"CustomDocCard"}),(0,r.kt)(m,{emoji:"",title:"Order & Pagination",description:"Sort and paginate the results of your Entity Service API queries.",link:"/dev-docs/api/entity-service/order-pagination",mdxType:"CustomDocCard"}),(0,r.kt)(m,{emoji:"",title:"Components/Dynamic Zones",description:"Create and update components and dynamic zones with your Entity Service API queries.",link:"/dev-docs/api/entity-service/components-dynamic-zones",mdxType:"CustomDocCard"})))}v.isMDXComponent=!0},41207:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var i=n(83117),r=(n(67294),n(3905));const a={},o=void 0,s={unversionedId:"snippets/backend-custom-intro-crosslink",id:"snippets/backend-custom-intro-crosslink",title:"backend-custom-intro-crosslink",description:"For a general overview and understanding of the Strapi backend elements, please refer to the backend customization introduction and diagram.",source:"@site/docs/snippets/backend-custom-intro-crosslink.md",sourceDirName:"snippets",slug:"/snippets/backend-custom-intro-crosslink",permalink:"/aberabook/snippets/backend-custom-intro-crosslink",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/snippets/backend-custom-intro-crosslink.md",tags:[],version:"current",frontMatter:{}},c={},d=[],p={toc:d};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"For a general overview and understanding of the Strapi backend elements, please refer to the backend customization ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/backend-customization"},"introduction")," and ",(0,r.kt)("a",{parentName:"p",href:"/dev-docs/backend-customization#interactive-diagram"},"diagram"),"."))}u.isMDXComponent=!0},11165:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var i=n(83117),r=(n(67294),n(3905));const a={},o=void 0,s={unversionedId:"snippets/entity-query-knex",id:"snippets/entity-query-knex",title:"entity-query-knex",description:"Strapi v4 offers several layers to interact with the backend and build your queries:",source:"@site/docs/snippets/entity-query-knex.md",sourceDirName:"snippets",slug:"/snippets/entity-query-knex",permalink:"/aberabook/snippets/entity-query-knex",draft:!1,editUrl:"https://github.com/labs-solo/aberabook/edit/main/docusaurus/docs/snippets/entity-query-knex.md",tags:[],version:"current",frontMatter:{}},c={},d=[],p={toc:d};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Strapi v4 offers several layers to interact with the backend and build your queries:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The Entity Service API is the recommended API to interact with your application's database. The Entity Service is the layer that handles Strapi's complex data structures like components and dynamic zones, which the lower-level layers are not aware of."),(0,r.kt)("li",{parentName:"ul"},"The Query Engine API interacts with the database layer at a lower level and is used under the hood to execute database queries. It gives unrestricted internal access to the database layer, but should be used only if the Entity Service API does not cover your use case."),(0,r.kt)("li",{parentName:"ul"},"If you need direct access to ",(0,r.kt)("inlineCode",{parentName:"li"},"knex")," functions, use ",(0,r.kt)("inlineCode",{parentName:"li"},"strapi.db.connection"),".")))}u.isMDXComponent=!0}}]);